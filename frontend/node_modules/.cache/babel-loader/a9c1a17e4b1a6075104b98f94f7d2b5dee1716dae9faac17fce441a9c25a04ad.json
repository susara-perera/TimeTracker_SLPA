{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\IndividualReport.jsx\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useImperativeHandle } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IndividualReport = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  reportData,\n  getHeaders,\n  formatRow,\n  reportType,\n  dateRange,\n  employeeInfo\n}, ref) => {\n  _s();\n  useImperativeHandle(ref, () => ({\n    print: () => {\n      if (!reportData || !Array.isArray(reportData.data) || reportData.data.length === 0) {\n        alert('No data to print.');\n        return;\n      }\n      const headers = getHeaders();\n      // For individual report drop these columns (case-insensitive)\n      const _dropSet = new Set(['emp no', 'emp name', 'meal-pkt-mny'].map(s => s.toLowerCase()));\n      const keepIndices = headers.map((h, i) => _dropSet.has(String(h || '').trim().toLowerCase()) ? -1 : i).filter(i => i >= 0);\n      // Build punches from reportData similar to GroupReport logic\n      const punches = [];\n      // prefer reportData.dates if present\n      let dateOrder = Array.isArray(reportData.dates) && reportData.dates.length > 0 ? reportData.dates : [];\n      if (dateOrder.length === 0) {\n        const dateSet = new Set();\n        reportData.data.forEach(r => {\n          if (r.date_ || r.punchDate || r.date) dateSet.add(r.date_ || r.punchDate || r.date);\n        });\n        dateOrder = Array.from(dateSet).sort((a, b) => new Date(a) - new Date(b));\n      }\n      dateOrder.forEach(date => {\n        // find records for this date\n        reportData.data.forEach(r => {\n          const recDate = r.date_ || r.punchDate || r.date;\n          if (String(recDate) === String(date)) {\n            const inferredType = r.scan_type || r.type || r.direction || '';\n            punches.push({\n              employee_ID: r.employee_ID || r.employeeId || '',\n              employee_name: r.employee_name || r.employeeName || '',\n              date_: date,\n              time_: r.time_ || r.time || r.punchTime || '',\n              scan_type: inferredType\n            });\n          }\n        });\n      });\n\n      // sort punches (date, employee, time, IN before OUT)\n      punches.sort((a, b) => {\n        const da = new Date(a.date_ || '');\n        const db = new Date(b.date_ || '');\n        if (!isNaN(da.getTime()) && !isNaN(db.getTime())) {\n          if (da < db) return -1;\n          if (da > db) return 1;\n        } else {\n          if ((a.date_ || '') < (b.date_ || '')) return -1;\n          if ((a.date_ || '') > (b.date_ || '')) return 1;\n        }\n        const empA = String(a.employee_ID || '');\n        const empB = String(b.employee_ID || '');\n        if (empA < empB) return -1;\n        if (empA > empB) return 1;\n        const ta = a.time_ || '';\n        const tb = b.time_ || '';\n        if (ta < tb) return -1;\n        if (ta > tb) return 1;\n        const aIsIn = (a.scan_type || '').toUpperCase() === 'IN';\n        const bIsIn = (b.scan_type || '').toUpperCase() === 'IN';\n        if (aIsIn && !bIsIn) return -1;\n        if (!aIsIn && bIsIn) return 1;\n        return 0;\n      });\n      const sortedRecords = punches.map(p => {\n        const rec = {\n          ...p\n        };\n        const punchDate = new Date(p.date_);\n        rec._punchDateKey = !isNaN(punchDate.getTime()) ? punchDate.toLocaleDateString('en-GB', {\n          day: '2-digit',\n          month: 'short',\n          year: '2-digit'\n        }).replace(/\\//g, '-') + ' ' + punchDate.toLocaleDateString('en-US', {\n          weekday: 'short'\n        }) : p.date_;\n        return rec;\n      });\n\n      // Build pages with date headers and duplicate suppression\n      // Set per-page data rows to 25 as requested\n      const ROWS_PER_PAGE = 28; // exact number of data rows to show per printed page (individual reports)\n      const pages = [];\n      let currentPage = [];\n      let lastKey = null;\n      let lastDateHeader = null;\n      let currentCount = 0;\n      const pushPage = () => {\n        if (currentPage.length > 0) {\n          pages.push(currentPage.slice());\n          currentPage = [];\n          currentCount = 0;\n          lastKey = null;\n        }\n      };\n      sortedRecords.forEach(record => {\n        const dateHeader = record._punchDateKey || record.date_ || '';\n        // Individual reports should NOT include per-date bars; just track date for duplicate suppression\n        if (lastDateHeader !== dateHeader) {\n          lastDateHeader = dateHeader;\n          lastKey = null;\n        }\n        const row = formatRow(record);\n        const empIdVal = record.employee_ID || record.employeeId || record.emp_no || record.empNo || '';\n        const dateVal = dateHeader;\n        const key = `${empIdVal}||${dateVal}`;\n        if (lastKey === key) {\n          if (row.length > 0) row[0] = '';\n          if (row.length > 1) row[1] = '';\n          if (row.length > 2) row[2] = '';\n          if (row.length > 3) row[3] = '';\n        } else lastKey = key;\n        currentPage.push(`<tr>${keepIndices.map((origI, colIdx) => {\n          const cell = row[origI] !== undefined ? row[origI] : '';\n          return `<td style=\"border: 1px solid #000; padding: 4px 6px; text-align: left; font-size: 11px; white-space: pre-line;\">${colIdx === 0 ? '<strong>' + cell + '</strong>' : cell}</td>`;\n        }).join('')}</tr>`);\n        currentCount++;\n        if (currentCount >= ROWS_PER_PAGE) pushPage();\n      });\n      if (currentPage.length > 0) pages.push(currentPage.slice());\n      const totalPages = pages.length || 1;\n\n      // Resolve employee number/name robustly (check common keys, then fall back to first data record)\n      const empNo = (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employee_id) || (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employee_ID) || (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employeeId) || (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employeeNo) || (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.emp_no) || (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.empNo) || (reportData === null || reportData === void 0 ? void 0 : reportData.data) && reportData.data[0] && (reportData.data[0].employee_id || reportData.data[0].employee_ID || reportData.data[0].employeeId || reportData.data[0].emp_no || reportData.data[0].empNo || '') || '';\n      const empName = (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.name) || (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employee_name) || (employeeInfo === null || employeeInfo === void 0 ? void 0 : employeeInfo.employeeName) || (reportData === null || reportData === void 0 ? void 0 : reportData.data) && reportData.data[0] && (reportData.data[0].employee_name || reportData.data[0].employeeName || reportData.data[0].name || '') || '';\n      const reportTitle = reportType === 'attendance' ? 'History Transaction Report' : 'Meal Consumption Report';\n      const subtitle = reportType === 'attendance' ? 'All Granted(ID & FP) Records' : 'All Meal Records';\n      function renderPage(pageRows, pageNum) {\n        const isLastPage = pageNum === totalPages;\n        return `\n          <div class=\"common-header\" style=\"page-break-before: ${pageNum > 1 ? 'always' : 'auto'}; width:100%;\">\n            <div class=\"report-header\" style=\"padding:8px 0; margin-bottom:6px;\">\n              <div class=\"header-content\" style=\"max-width:1200px; margin:0 auto; padding:0; text-align:left; display:flex; justify-content:space-between; align-items:flex-start;\">\n                <div style=\"max-width:70%;\">\n                  <h1 style=\"margin:0; display:flex; align-items:center; gap:8px; font-family: 'Courier New', monospace; font-size:14px;\">${reportTitle}</h1>\n                  <div class=\"header-subtitle\" style=\"font-size:11px; margin-top:4px;\"><strong>${subtitle}</strong></div>\n                  <div style=\"height:8px\">&nbsp;</div>\n                  <table style=\"margin-bottom:12px; border-collapse:collapse; border: none;\">\n                    <tr><td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; width: 90px; border: none;\">Emp No :</td><td style=\"vertical-align: top; border: none;\">${empNo}</td></tr>\n                    <tr><td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; border: none;\">Emp Name :</td><td style=\"vertical-align: top; border: none;\">${empName}</td></tr>\n                    <tr><td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; border: none;\">Date From :</td><td style=\"vertical-align: top; border: none;\">${dateRange.startDate} &nbsp; To : &nbsp; ${dateRange.endDate}</td></tr>\n                  </table>\n                </div>\n                <div style=\"text-align:left; font-size:11px;\" class=\"print-meta\">\n                  <div style=\"font-size:11px\">Printed Date : ${new Date().toLocaleDateString()}</div>\n                  <div style=\"font-size:11px\">Printed Time : ${new Date().toLocaleTimeString()}</div>\n                  <div style=\"font-size:11px\">Page ${pageNum} of ${totalPages}</div>\n                </div>\n              </div>\n            </div>\n            <div class=\"header-content\" style=\"max-width:1200px; margin:0 auto; padding:0;\">\n              <table style=\"width:100%; border-collapse: collapse;\">\n                <thead><tr>${keepIndices.map(i => `<th style=\"font-size:12px; padding:4px 2px; border:0.5px solid #000; text-align:left;\">${headers[i]}</th>`).join('')}</tr></thead>\n                <tbody>${pageRows.join('')}</tbody>\n              </table>\n            </div>\n            ${isLastPage ? `\n              <div style=\"margin-top: 60px; width: 100%;\">\n                <table style=\"width:100%; border-collapse: collapse; border: none;\">\n                  <tbody>\n                    <tr>\n                      <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\n                      <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                      <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\n                      <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                    </tr>\n                    <tr>\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 1</td>\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 2</td>\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            ` : ''}\n          </div>\n        `;\n      }\n      const html = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/><title>${reportTitle}</title><style>\n        body{font-family:'Courier New',monospace;font-size:11px;margin:20px;padding:24px 24px 0 24px}\n        table{width:100%;border-collapse:collapse;margin-bottom:20px}\n  th,td{border:0.5px solid #000;padding:4px 6px;text-align:left}\n  th{background:#f5f5f5;font-weight:bold;font-size:12px}\n        td{font-size:11px;white-space:pre-line}\n        @media print{@page{margin:0.5in;size:landscape}body{margin:0}thead{display:table-header-group!important}@page{margin-top:0;margin-bottom:0;margin-left:0;margin-right:0}body::before,body::after{display:none!important}}\n      </style></head><body>${pages.map((p, idx) => renderPage(p, idx + 1)).join('')}</body></html>`;\n      const w = window.open(' ', '', 'width=900,height=700');\n      w.document.open();\n      w.document.write(html);\n      w.document.close();\n      w.focus();\n      w.print();\n      w.close();\n    }\n  }));\n\n  // preview rendering: build punches, inject date headers and suppress duplicates (limit to first 100)\n  const headers = getHeaders();\n  const _dropSetPreview = new Set(['emp no', 'emp name', 'meal-pkt-mny'].map(s => s.toLowerCase()));\n  const previewKeepIndices = headers.map((h, i) => _dropSetPreview.has(String(h || '').trim().toLowerCase()) ? -1 : i).filter(i => i >= 0);\n  const previewElements = [];\n  if (reportData && Array.isArray(reportData.data)) {\n    // build punches similar to print\n    const punches = [];\n    let dateOrder = Array.isArray(reportData.dates) && reportData.dates.length > 0 ? reportData.dates : [];\n    if (dateOrder.length === 0) {\n      const dateSet = new Set();\n      reportData.data.forEach(r => {\n        if (r.date_ || r.punchDate || r.date) dateSet.add(r.date_ || r.punchDate || r.date);\n      });\n      dateOrder = Array.from(dateSet).sort((a, b) => new Date(a) - new Date(b));\n    }\n    dateOrder.forEach(date => {\n      reportData.data.forEach(r => {\n        const recDate = r.date_ || r.punchDate || r.date;\n        if (String(recDate) === String(date)) {\n          const inferredType = r.scan_type || r.type || r.direction || '';\n          punches.push({\n            employee_ID: r.employee_ID || r.employeeId || '',\n            employee_name: r.employee_name || r.employeeName || '',\n            date_: date,\n            time_: r.time_ || r.time || r.punchTime || '',\n            scan_type: inferredType\n          });\n        }\n      });\n    });\n    punches.sort((a, b) => {\n      const da = new Date(a.date_ || '');\n      const db = new Date(b.date_ || '');\n      if (!isNaN(da.getTime()) && !isNaN(db.getTime())) {\n        if (da < db) return -1;\n        if (da > db) return 1;\n      } else {\n        if ((a.date_ || '') < (b.date_ || '')) return -1;\n        if ((a.date_ || '') > (b.date_ || '')) return 1;\n      }\n      const empA = String(a.employee_ID || '');\n      const empB = String(b.employee_ID || '');\n      if (empA < empB) return -1;\n      if (empA > empB) return 1;\n      const ta = a.time_ || '';\n      const tb = b.time_ || '';\n      if (ta < tb) return -1;\n      if (ta > tb) return 1;\n      const aIsIn = (a.scan_type || '').toUpperCase() === 'IN';\n      const bIsIn = (b.scan_type || '').toUpperCase() === 'IN';\n      if (aIsIn && !bIsIn) return -1;\n      if (!aIsIn && bIsIn) return 1;\n      return 0;\n    });\n    let lastKey = null;\n    let lastDateSeen = null;\n    let displayCount = 0;\n    const MAX_PREVIEW = 100;\n    for (let i = 0; i < punches.length && displayCount < MAX_PREVIEW; i++) {\n      const p = punches[i];\n      const dateVal = p.date_ || '';\n      if (lastDateSeen !== dateVal) {\n        // Skip inserting a visual date bar for individual preview; just reset duplicate suppression keys\n        lastDateSeen = dateVal;\n        lastKey = null;\n      }\n      const row = formatRow(p);\n      const empIdVal = p.employee_ID || p.employeeId || '';\n      const key = `${empIdVal}||${dateVal}`;\n      if (lastKey === key) {\n        if (row.length > 0) row[0] = '';\n        if (row.length > 1) row[1] = '';\n        if (row.length > 2) row[2] = '';\n        if (row.length > 3) row[3] = '';\n      } else lastKey = key;\n      previewElements.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: previewKeepIndices.map((origI, ci) => {\n          const cell = row[origI] !== undefined ? row[origI] : '';\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              whiteSpace: 'pre-line',\n              fontSize: '11px',\n              padding: '4px 6px',\n              border: '1px solid #dee2e6'\n            },\n            children: ci === 0 ? /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: cell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 232\n            }, this) : cell\n          }, ci, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 111\n          }, this);\n        })\n      }, `row-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this));\n      displayCount++;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        width: '100%',\n        borderCollapse: 'collapse'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: previewKeepIndices.map((i, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              fontSize: '12px',\n              background: '#f5f5f5',\n              fontWeight: 'bold',\n              padding: '4px 2px',\n              border: '0.5px solid #dee2e6',\n              textAlign: 'left'\n            },\n            children: headers[i]\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 49\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: previewElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), reportData && reportData.data && reportData.data.length > 100 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"preview-note\",\n      children: \"Showing first 100 records. Use print for full report.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 74\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}, \"PYzlZ2AGFM0KxtNOGoZVRb5EOEw=\")), \"PYzlZ2AGFM0KxtNOGoZVRb5EOEw=\");\n_c2 = IndividualReport;\nexport default IndividualReport;\nvar _c, _c2;\n$RefreshReg$(_c, \"IndividualReport$forwardRef\");\n$RefreshReg$(_c2, \"IndividualReport\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","jsxDEV","_jsxDEV","IndividualReport","_s","_c","reportData","getHeaders","formatRow","reportType","dateRange","employeeInfo","ref","print","Array","isArray","data","length","alert","headers","_dropSet","Set","map","s","toLowerCase","keepIndices","h","i","has","String","trim","filter","punches","dateOrder","dates","dateSet","forEach","r","date_","punchDate","date","add","from","sort","a","b","Date","recDate","inferredType","scan_type","type","direction","push","employee_ID","employeeId","employee_name","employeeName","time_","time","punchTime","da","db","isNaN","getTime","empA","empB","ta","tb","aIsIn","toUpperCase","bIsIn","sortedRecords","p","rec","_punchDateKey","toLocaleDateString","day","month","year","replace","weekday","ROWS_PER_PAGE","pages","currentPage","lastKey","lastDateHeader","currentCount","pushPage","slice","record","dateHeader","row","empIdVal","emp_no","empNo","dateVal","key","origI","colIdx","cell","undefined","join","totalPages","employee_id","employeeNo","empName","name","reportTitle","subtitle","renderPage","pageRows","pageNum","isLastPage","startDate","endDate","toLocaleTimeString","html","idx","w","window","open","document","write","close","focus","_dropSetPreview","previewKeepIndices","previewElements","lastDateSeen","displayCount","MAX_PREVIEW","children","ci","style","whiteSpace","fontSize","padding","border","fileName","_jsxFileName","lineNumber","columnNumber","className","width","borderCollapse","background","fontWeight","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/IndividualReport.jsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle } from 'react';\r\n\r\nconst IndividualReport = forwardRef(({ reportData, getHeaders, formatRow, reportType, dateRange, employeeInfo }, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    print: () => {\r\n      if (!reportData || !Array.isArray(reportData.data) || reportData.data.length === 0) {\r\n        alert('No data to print.');\r\n        return;\r\n      }\r\n  const headers = getHeaders();\r\n  // For individual report drop these columns (case-insensitive)\r\n  const _dropSet = new Set(['emp no','emp name','meal-pkt-mny'].map(s=>s.toLowerCase()));\r\n  const keepIndices = headers.map((h,i)=> _dropSet.has(String(h||'').trim().toLowerCase()) ? -1 : i).filter(i=>i>=0);\r\n      // Build punches from reportData similar to GroupReport logic\r\n      const punches = [];\r\n      // prefer reportData.dates if present\r\n      let dateOrder = Array.isArray(reportData.dates) && reportData.dates.length > 0 ? reportData.dates : [];\r\n      if (dateOrder.length === 0) {\r\n        const dateSet = new Set();\r\n        reportData.data.forEach(r => {\r\n          if (r.date_ || r.punchDate || r.date) dateSet.add(r.date_ || r.punchDate || r.date);\r\n        });\r\n        dateOrder = Array.from(dateSet).sort((a,b) => new Date(a)-new Date(b));\r\n      }\r\n\r\n      dateOrder.forEach(date => {\r\n        // find records for this date\r\n        reportData.data.forEach(r => {\r\n          const recDate = r.date_ || r.punchDate || r.date;\r\n          if (String(recDate) === String(date)) {\r\n            const inferredType = r.scan_type || r.type || r.direction || '';\r\n            punches.push({ employee_ID: r.employee_ID || r.employeeId || '', employee_name: r.employee_name || r.employeeName || '', date_: date, time_: r.time_ || r.time || r.punchTime || '', scan_type: inferredType });\r\n          }\r\n        });\r\n      });\r\n\r\n      // sort punches (date, employee, time, IN before OUT)\r\n      punches.sort((a,b)=>{\r\n        const da = new Date(a.date_||''); const db = new Date(b.date_||''); if (!isNaN(da.getTime()) && !isNaN(db.getTime())){ if (da<db) return -1; if (da>db) return 1;} else { if ((a.date_||'')<(b.date_||'')) return -1; if ((a.date_||'')>(b.date_||'')) return 1; }\r\n        const empA = String(a.employee_ID||''); const empB = String(b.employee_ID||''); if (empA<empB) return -1; if (empA>empB) return 1;\r\n        const ta = a.time_||''; const tb = b.time_||''; if (ta<tb) return -1; if (ta>tb) return 1;\r\n        const aIsIn = (a.scan_type||'').toUpperCase() === 'IN'; const bIsIn = (b.scan_type||'').toUpperCase() === 'IN'; if (aIsIn && !bIsIn) return -1; if (!aIsIn && bIsIn) return 1; return 0;\r\n      });\r\n\r\n      const sortedRecords = punches.map(p => {\r\n        const rec = { ...p };\r\n        const punchDate = new Date(p.date_);\r\n        rec._punchDateKey = !isNaN(punchDate.getTime()) ? (punchDate.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' }).replace(/\\//g,'-') + ' ' + punchDate.toLocaleDateString('en-US', { weekday: 'short' })) : p.date_;\r\n        return rec;\r\n      });\r\n\r\n  // Build pages with date headers and duplicate suppression\r\n  // Set per-page data rows to 25 as requested\r\n  const ROWS_PER_PAGE = 28; // exact number of data rows to show per printed page (individual reports)\r\n      const pages = []; let currentPage = []; let lastKey = null; let lastDateHeader = null; let currentCount = 0;\r\n      const pushPage = ()=>{ if (currentPage.length>0){ pages.push(currentPage.slice()); currentPage=[]; currentCount=0; lastKey=null; } };\r\n      sortedRecords.forEach(record => {\r\n        const dateHeader = record._punchDateKey || (record.date_ || '');\r\n        // Individual reports should NOT include per-date bars; just track date for duplicate suppression\r\n        if (lastDateHeader !== dateHeader) { lastDateHeader = dateHeader; lastKey = null; }\r\n        const row = formatRow(record);\r\n        const empIdVal = record.employee_ID || record.employeeId || record.emp_no || record.empNo || '';\r\n        const dateVal = dateHeader; const key = `${empIdVal}||${dateVal}`;\r\n        if (lastKey === key) { if (row.length>0) row[0]=''; if (row.length>1) row[1]=''; if (row.length>2) row[2]=''; if (row.length>3) row[3]=''; } else lastKey = key;\r\n  currentPage.push(`<tr>${keepIndices.map((origI,colIdx)=>{ const cell = (row[origI]!==undefined?row[origI]:''); return `<td style=\"border: 1px solid #000; padding: 4px 6px; text-align: left; font-size: 11px; white-space: pre-line;\">${colIdx===0?'<strong>'+cell+'</strong>':cell}</td>`; }).join('')}</tr>`);\r\n        currentCount++; if (currentCount >= ROWS_PER_PAGE) pushPage();\r\n      }); if (currentPage.length>0) pages.push(currentPage.slice()); const totalPages = pages.length || 1;\r\n\r\n      // Resolve employee number/name robustly (check common keys, then fall back to first data record)\r\n      const empNo = employeeInfo?.employee_id\r\n        || employeeInfo?.employee_ID\r\n        || employeeInfo?.employeeId\r\n        || employeeInfo?.employeeNo\r\n        || employeeInfo?.emp_no\r\n        || employeeInfo?.empNo\r\n        || (reportData?.data && reportData.data[0] && (reportData.data[0].employee_id || reportData.data[0].employee_ID || reportData.data[0].employeeId || reportData.data[0].emp_no || reportData.data[0].empNo || ''))\r\n        || '';\r\n\r\n      const empName = employeeInfo?.name\r\n        || employeeInfo?.employee_name\r\n        || employeeInfo?.employeeName\r\n        || (reportData?.data && reportData.data[0] && (reportData.data[0].employee_name || reportData.data[0].employeeName || reportData.data[0].name || ''))\r\n        || '';\r\n\r\n      const reportTitle = reportType === 'attendance' ? 'History Transaction Report' : 'Meal Consumption Report';\r\n      const subtitle = reportType === 'attendance' ? 'All Granted(ID & FP) Records' : 'All Meal Records';\r\n\r\n      function renderPage(pageRows, pageNum){\r\n        const isLastPage = pageNum === totalPages;\r\n        return `\r\n          <div class=\"common-header\" style=\"page-break-before: ${pageNum > 1 ? 'always' : 'auto'}; width:100%;\">\r\n            <div class=\"report-header\" style=\"padding:8px 0; margin-bottom:6px;\">\r\n              <div class=\"header-content\" style=\"max-width:1200px; margin:0 auto; padding:0; text-align:left; display:flex; justify-content:space-between; align-items:flex-start;\">\r\n                <div style=\"max-width:70%;\">\r\n                  <h1 style=\"margin:0; display:flex; align-items:center; gap:8px; font-family: 'Courier New', monospace; font-size:14px;\">${reportTitle}</h1>\r\n                  <div class=\"header-subtitle\" style=\"font-size:11px; margin-top:4px;\"><strong>${subtitle}</strong></div>\r\n                  <div style=\"height:8px\">&nbsp;</div>\r\n                  <table style=\"margin-bottom:12px; border-collapse:collapse; border: none;\">\r\n                    <tr><td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; width: 90px; border: none;\">Emp No :</td><td style=\"vertical-align: top; border: none;\">${empNo}</td></tr>\r\n                    <tr><td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; border: none;\">Emp Name :</td><td style=\"vertical-align: top; border: none;\">${empName}</td></tr>\r\n                    <tr><td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; border: none;\">Date From :</td><td style=\"vertical-align: top; border: none;\">${dateRange.startDate} &nbsp; To : &nbsp; ${dateRange.endDate}</td></tr>\r\n                  </table>\r\n                </div>\r\n                <div style=\"text-align:left; font-size:11px;\" class=\"print-meta\">\r\n                  <div style=\"font-size:11px\">Printed Date : ${new Date().toLocaleDateString()}</div>\r\n                  <div style=\"font-size:11px\">Printed Time : ${new Date().toLocaleTimeString()}</div>\r\n                  <div style=\"font-size:11px\">Page ${pageNum} of ${totalPages}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"header-content\" style=\"max-width:1200px; margin:0 auto; padding:0;\">\r\n              <table style=\"width:100%; border-collapse: collapse;\">\r\n                <thead><tr>${keepIndices.map(i=>`<th style=\"font-size:12px; padding:4px 2px; border:0.5px solid #000; text-align:left;\">${headers[i]}</th>`).join('')}</tr></thead>\r\n                <tbody>${pageRows.join('')}</tbody>\r\n              </table>\r\n            </div>\r\n            ${isLastPage ? `\r\n              <div style=\"margin-top: 60px; width: 100%;\">\r\n                <table style=\"width:100%; border-collapse: collapse; border: none;\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\r\n                      <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                      <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\r\n                      <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 1</td>\r\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 2</td>\r\n                      <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ` : ''}\r\n          </div>\r\n        `;\r\n      }\r\n\r\n      const html = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/><title>${reportTitle}</title><style>\r\n        body{font-family:'Courier New',monospace;font-size:11px;margin:20px;padding:24px 24px 0 24px}\r\n        table{width:100%;border-collapse:collapse;margin-bottom:20px}\r\n  th,td{border:0.5px solid #000;padding:4px 6px;text-align:left}\r\n  th{background:#f5f5f5;font-weight:bold;font-size:12px}\r\n        td{font-size:11px;white-space:pre-line}\r\n        @media print{@page{margin:0.5in;size:landscape}body{margin:0}thead{display:table-header-group!important}@page{margin-top:0;margin-bottom:0;margin-left:0;margin-right:0}body::before,body::after{display:none!important}}\r\n      </style></head><body>${pages.map((p,idx)=>renderPage(p, idx+1)).join('')}</body></html>`;\r\n\r\n      const w = window.open(' ', '', 'width=900,height=700');\r\n      w.document.open(); w.document.write(html); w.document.close(); w.focus(); w.print(); w.close();\r\n    }\r\n  }));\r\n\r\n  // preview rendering: build punches, inject date headers and suppress duplicates (limit to first 100)\r\n  const headers = getHeaders();\r\n  const _dropSetPreview = new Set(['emp no','emp name','meal-pkt-mny'].map(s=>s.toLowerCase()));\r\n  const previewKeepIndices = headers.map((h,i)=> _dropSetPreview.has(String(h||'').trim().toLowerCase()) ? -1 : i).filter(i=>i>=0);\r\n  const previewElements = [];\r\n  if (reportData && Array.isArray(reportData.data)) {\r\n    // build punches similar to print\r\n    const punches = [];\r\n    let dateOrder = Array.isArray(reportData.dates) && reportData.dates.length > 0 ? reportData.dates : [];\r\n    if (dateOrder.length === 0) {\r\n      const dateSet = new Set();\r\n      reportData.data.forEach(r => {\r\n        if (r.date_ || r.punchDate || r.date) dateSet.add(r.date_ || r.punchDate || r.date);\r\n      });\r\n      dateOrder = Array.from(dateSet).sort((a,b) => new Date(a)-new Date(b));\r\n    }\r\n    dateOrder.forEach(date => {\r\n      reportData.data.forEach(r => {\r\n        const recDate = r.date_ || r.punchDate || r.date;\r\n        if (String(recDate) === String(date)) {\r\n          const inferredType = r.scan_type || r.type || r.direction || '';\r\n          punches.push({ employee_ID: r.employee_ID || r.employeeId || '', employee_name: r.employee_name || r.employeeName || '', date_: date, time_: r.time_ || r.time || r.punchTime || '', scan_type: inferredType });\r\n        }\r\n      });\r\n    });\r\n\r\n    punches.sort((a,b)=>{\r\n      const da = new Date(a.date_||''); const db = new Date(b.date_||''); if (!isNaN(da.getTime()) && !isNaN(db.getTime())){ if (da<db) return -1; if (da>db) return 1;} else { if ((a.date_||'')<(b.date_||'')) return -1; if ((a.date_||'')>(b.date_||'')) return 1; }\r\n      const empA = String(a.employee_ID||''); const empB = String(b.employee_ID||''); if (empA<empB) return -1; if (empA>empB) return 1; const ta = a.time_||''; const tb = b.time_||''; if (ta<tb) return -1; if (ta>tb) return 1; const aIsIn = (a.scan_type||'').toUpperCase() === 'IN'; const bIsIn = (b.scan_type||'').toUpperCase() === 'IN'; if (aIsIn && !bIsIn) return -1; if (!aIsIn && bIsIn) return 1; return 0;\r\n    });\r\n\r\n    let lastKey = null; let lastDateSeen = null; let displayCount = 0; const MAX_PREVIEW = 100;\r\n    for (let i=0;i<punches.length && displayCount < MAX_PREVIEW;i++) {\r\n      const p = punches[i];\r\n      const dateVal = p.date_ || '';\r\n      if (lastDateSeen !== dateVal) {\r\n        // Skip inserting a visual date bar for individual preview; just reset duplicate suppression keys\r\n        lastDateSeen = dateVal; lastKey = null; \r\n      }\r\n      const row = formatRow(p);\r\n      const empIdVal = p.employee_ID || p.employeeId || '';\r\n      const key = `${empIdVal}||${dateVal}`;\r\n      if (lastKey === key) { if (row.length>0) row[0]=''; if (row.length>1) row[1]=''; if (row.length>2) row[2]=''; if (row.length>3) row[3]= ''; } else lastKey = key;\r\n      previewElements.push(\r\n        <tr key={`row-${i}`}>\r\n          {previewKeepIndices.map((origI,ci)=>{ const cell = row[origI]!==undefined? row[origI] : ''; return (<td key={ci} style={{whiteSpace:'pre-line', fontSize: '11px', padding: '4px 6px', border: '1px solid #dee2e6'}}>{ci===0? <strong>{cell}</strong> : cell}</td>); })}\r\n        </tr>\r\n      );\r\n      displayCount++;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"table table-striped\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n        <thead>\r\n          <tr>{previewKeepIndices.map((i,idx)=>(<th key={idx} style={{ fontSize: '12px', background: '#f5f5f5', fontWeight: 'bold', padding: '4px 2px', border: '0.5px solid #dee2e6', textAlign: 'left' }}>{headers[i]}</th>))}</tr>\r\n        </thead>\r\n        <tbody>\r\n          {previewElements}\r\n        </tbody>\r\n      </table>\r\n      {reportData && reportData.data && reportData.data.length > 100 && (<p className=\"preview-note\">Showing first 100 records. Use print for full report.</p>)}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default IndividualReport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}