{"ast":null,"code":"var _jsxFileName = \"B:\\\\PortAuthProject\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\RoleAccessManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport './RoleAccessManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoleAccessManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedRoleId, setSelectedRoleId] = useState('');\n  const [selectAll, setSelectAll] = useState(false);\n  const [formData, setFormData] = useState({\n    permissions: {}\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [toastVisible, setToastVisible] = useState(false);\n  const {\n    user\n  } = useContext(AuthContext);\n  const isSuperAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'super_admin';\n\n  // Available roles (moved to state so runtime additions are possible)\n  const [availableRoles, setAvailableRoles] = useState([{\n    value: 'super_admin',\n    label: 'Super Admin',\n    description: 'Highest level system administrator'\n  }, {\n    value: 'admin',\n    label: 'Administrator',\n    description: 'System administrator with management rights'\n  }, {\n    value: 'administrative_clerk',\n    label: 'Administrative Clerk',\n    description: 'Administrative support staff'\n  }, {\n    value: 'clerk',\n    label: 'Clerk',\n    description: 'General office clerk'\n  }, {\n    value: 'employee',\n    label: 'Employee',\n    description: 'Regular system user'\n  }]);\n\n  // Available permissions list based on User model\n  const availablePermissions = [{\n    category: 'users',\n    name: 'User Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Users',\n      description: 'Add new users to the system'\n    }, {\n      id: 'read',\n      name: 'View Users',\n      description: 'View user information and lists'\n    }, {\n      id: 'update',\n      name: 'Update Users',\n      description: 'Edit user information and profiles'\n    }, {\n      id: 'delete',\n      name: 'Delete Users',\n      description: 'Remove users from the system'\n    }]\n  }, {\n    category: 'attendance',\n    name: 'Attendance Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Attendance',\n      description: 'Add attendance records'\n    }, {\n      id: 'read',\n      name: 'View Attendance',\n      description: 'View attendance records and reports'\n    }, {\n      id: 'update',\n      name: 'Update Attendance',\n      description: 'Edit attendance records'\n    }, {\n      id: 'delete',\n      name: 'Delete Attendance',\n      description: 'Remove attendance records'\n    }]\n  }, {\n    category: 'reports',\n    name: 'Reports Management',\n    permissions: [{\n      id: 'create',\n      name: 'Generate Reports',\n      description: 'Create system reports'\n    }, {\n      id: 'read',\n      name: 'View Reports',\n      description: 'Access and view reports'\n    }, {\n      id: 'update',\n      name: 'Update Reports',\n      description: 'Modify report settings'\n    }, {\n      id: 'delete',\n      name: 'Delete Reports',\n      description: 'Remove reports from system'\n    }]\n  }, {\n    category: 'divisions',\n    name: 'Division Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Divisions',\n      description: 'Add new company divisions'\n    }, {\n      id: 'read',\n      name: 'View Divisions',\n      description: 'View division information'\n    }, {\n      id: 'update',\n      name: 'Update Divisions',\n      description: 'Edit division details'\n    }, {\n      id: 'delete',\n      name: 'Delete Divisions',\n      description: 'Remove divisions'\n    }]\n  }, {\n    category: 'settings',\n    name: 'System Settings',\n    permissions: [{\n      id: 'create',\n      name: 'Create Settings',\n      description: 'Add new system configurations'\n    }, {\n      id: 'read',\n      name: 'View Settings',\n      description: 'Access system settings'\n    }, {\n      id: 'update',\n      name: 'Update Settings',\n      description: 'Modify system configurations'\n    }, {\n      id: 'delete',\n      name: 'Delete Settings',\n      description: 'Remove system settings'\n    }]\n  }];\n  useEffect(() => {\n    fetchUsers();\n\n    // Load roles from backend\n    (async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await fetch('http://localhost:5000/api/roles', {\n          headers: {\n            'Content-Type': 'application/json',\n            ...(token ? {\n              'Authorization': `Bearer ${token}`\n            } : {})\n          }\n        });\n        if (res.ok) {\n          const result = await res.json();\n          if (Array.isArray(result.data) && result.data.length) {\n            // include the database id so we can fetch role permissions\n            setAvailableRoles(result.data.map(r => ({\n              id: r._id,\n              value: r.value,\n              label: r.label,\n              description: r.description || ''\n            })));\n          }\n        } else {\n          console.warn('Failed to fetch roles from backend, using defaults');\n        }\n      } catch (err) {\n        console.warn('Error fetching roles:', err);\n      }\n    })();\n\n    // Listen for roles added via other components\n    const handler = e => {\n      const payload = e === null || e === void 0 ? void 0 : e.detail;\n      if (payload && payload.value && payload.label) {\n        // Avoid duplicates\n        setAvailableRoles(prev => {\n          if (prev.find(r => r.value === payload.value)) return prev;\n          return [...prev, {\n            value: payload.value,\n            label: payload.label,\n            description: ''\n          }];\n        });\n      }\n    };\n    window.addEventListener('roleAdded', handler);\n    return () => window.removeEventListener('roleAdded', handler);\n  }, []);\n\n  // Fetch users from API\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users');\n      if (response.ok) {\n        const data = await response.json();\n        setUsers(data.data || []);\n      } else {\n        console.error('Failed to fetch users');\n        setMessage('Failed to load users');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setMessage('Error loading users');\n      setMessageType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle role selection\n  const handleRoleSelect = e => {\n    const roleValue = e.target.value;\n    setSelectedRole(roleValue);\n    if (roleValue) {\n      // Find available role metadata (contains id)\n      const roleMeta = availableRoles.find(r => r.value === roleValue);\n      const roleId = roleMeta === null || roleMeta === void 0 ? void 0 : roleMeta.id;\n      setSelectedRoleId(roleId || '');\n      if (roleId) {\n        (async () => {\n          try {\n            const token = localStorage.getItem('token');\n            const res = await fetch(`http://localhost:5000/api/roles/${roleId}`, {\n              headers: {\n                'Content-Type': 'application/json',\n                ...(token ? {\n                  'Authorization': `Bearer ${token}`\n                } : {})\n              }\n            });\n            if (res.ok) {\n              const result = await res.json();\n              const roleDoc = result.data;\n              setFormData({\n                permissions: roleDoc.permissions || {}\n              });\n              updateSelectAllStatus(roleDoc.permissions || {});\n            } else {\n              // fallback to user-based permissions if role doc cannot be fetched\n              const userWithRole = users.find(u => u.role === roleValue);\n              setFormData({\n                permissions: (userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {}\n              });\n              updateSelectAllStatus((userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {});\n            }\n          } catch (err) {\n            console.warn('Error fetching role document:', err);\n            const userWithRole = users.find(u => u.role === roleValue);\n            setFormData({\n              permissions: (userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {}\n            });\n            updateSelectAllStatus((userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {});\n          }\n        })();\n      } else {\n        // If no role id available, fallback to user-based permissions\n        const userWithRole = users.find(u => u.role === roleValue);\n        setFormData({\n          permissions: (userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {}\n        });\n        updateSelectAllStatus((userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {});\n      }\n    } else {\n      setFormData({\n        permissions: {}\n      });\n      setSelectAll(false);\n    }\n  };\n\n  // Handle permission checkbox changes\n  const handlePermissionChange = (category, permissionId) => {\n    if (!isSuperAdmin) return; // prevent non-super-admin from making changes\n    const newPermissions = {\n      ...formData.permissions\n    };\n    if (!newPermissions[category]) {\n      newPermissions[category] = {};\n    }\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\n    setFormData(prev => ({\n      ...prev,\n      permissions: newPermissions\n    }));\n    updateSelectAllStatus(newPermissions);\n  };\n\n  // Handle select all toggle\n  const handleSelectAll = () => {\n    const newSelectAll = !selectAll;\n    setSelectAll(newSelectAll);\n    const newPermissions = {};\n    if (newSelectAll) {\n      availablePermissions.forEach(category => {\n        newPermissions[category.category] = {};\n        category.permissions.forEach(perm => {\n          newPermissions[category.category][perm.id] = true;\n        });\n      });\n    } else {\n      availablePermissions.forEach(category => {\n        newPermissions[category.category] = {};\n        category.permissions.forEach(perm => {\n          newPermissions[category.category][perm.id] = false;\n        });\n      });\n    }\n    setFormData(prev => ({\n      ...prev,\n      permissions: newPermissions\n    }));\n  };\n\n  // Update select all status\n  const updateSelectAllStatus = permissions => {\n    let totalPermissions = 0;\n    let enabledPermissions = 0;\n    availablePermissions.forEach(category => {\n      category.permissions.forEach(perm => {\n        totalPermissions++;\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\n          enabledPermissions++;\n        }\n      });\n    });\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\n  };\n\n  // Get total enabled permissions count\n  const getTotalEnabledPermissions = () => {\n    let count = 0;\n    availablePermissions.forEach(category => {\n      category.permissions.forEach(perm => {\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\n          count++;\n        }\n      });\n    });\n    return count;\n  };\n\n  // Get total available permissions count\n  const getTotalAvailablePermissions = () => {\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\n  };\n\n  // Show confirmation modal instead of immediate submit\n  const openConfirm = e => {\n    e.preventDefault();\n    if (!isSuperAdmin) {\n      setMessage('Only Super Admin can modify role permissions');\n      setMessageType('error');\n      setToastVisible(true);\n      setTimeout(() => setToastVisible(false), 4000);\n      return;\n    }\n    if (!selectedRole) {\n      setMessage('Please select a role first');\n      setMessageType('error');\n      setToastVisible(true);\n      setTimeout(() => setToastVisible(false), 4000);\n      return;\n    }\n    setShowConfirm(true);\n  };\n\n  // Confirm and perform save: persist to role doc then update users\n  const confirmAndSave = async () => {\n    setShowConfirm(false);\n    setSubmitting(true);\n    try {\n      // Persist permissions to role document (if we have an id)\n      const token = localStorage.getItem('token');\n      let roleSaved = false;\n      if (selectedRoleId) {\n        const res = await fetch(`http://localhost:5000/api/permissions/roles/${selectedRoleId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(token ? {\n              'Authorization': `Bearer ${token}`\n            } : {})\n          },\n          body: JSON.stringify({\n            permissions: formData.permissions\n          })\n        });\n        if (!res.ok) {\n          const err = await res.json().catch(() => ({}));\n          throw new Error(err.message || 'Failed to save role permissions');\n        }\n        roleSaved = true;\n\n        // Refresh saved role doc to get authoritative permissions\n        try {\n          const refreshed = await fetch(`http://localhost:5000/api/roles/${selectedRoleId}`, {\n            headers: {\n              'Content-Type': 'application/json',\n              ...(token ? {\n                'Authorization': `Bearer ${token}`\n              } : {})\n            }\n          });\n          if (refreshed.ok) {\n            const json = await refreshed.json();\n            setFormData({\n              permissions: json.data.permissions || {}\n            });\n          }\n        } catch (e) {\n          // non-fatal\n          console.warn('Could not refresh role after save', e);\n        }\n      }\n\n      // Now update users with the selected role\n      const usersWithRole = users.filter(u => u.role === selectedRole);\n      if (usersWithRole.length === 0) {\n        // If we saved the role document, treat that as a successful save even if no users exist for the role\n        if (roleSaved) {\n          setMessage(`Role permissions saved successfully. No users found with role ${selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label}`);\n          setMessageType('success');\n          setToastVisible(true);\n          setTimeout(() => setToastVisible(false), 4000);\n          setTimeout(() => {\n            setMessage('');\n            setMessageType('');\n          }, 5000);\n          setSubmitting(false);\n          return;\n        }\n        setMessage('No users found with the selected role');\n        setMessageType('error');\n        setToastVisible(true);\n        setTimeout(() => setToastVisible(false), 4000);\n        setSubmitting(false);\n        return;\n      }\n\n      // Use auth token for user updates as well (backend typically requires auth)\n      const updatePromises = usersWithRole.map(user => fetch(`http://localhost:5000/api/users/${user._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          permissions: formData.permissions\n        })\n      }).then(async r => ({\n        ok: r.ok,\n        status: r.status,\n        body: await r.json().catch(() => ({})),\n        userId: user._id\n      })));\n      const results = await Promise.all(updatePromises);\n      const failed = results.filter(r => !r.ok);\n      if (failed.length === 0) {\n        setUsers(prevUsers => prevUsers.map(u => u.role === selectedRole ? {\n          ...u,\n          permissions: formData.permissions\n        } : u));\n        setMessage(`Permissions updated successfully for ${usersWithRole.length} user(s)`);\n        setMessageType('success');\n        setToastVisible(true);\n        setTimeout(() => setToastVisible(false), 4000);\n        // Auto-hide message area too\n        setTimeout(() => {\n          setMessage('');\n          setMessageType('');\n        }, 5000);\n      } else {\n        // Build an informative message\n        const failedIds = failed.map(f => f.userId).slice(0, 5);\n        setMessage(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Failed for: ${failedIds.join(', ')}${failed.length > 5 ? '...' : ''}`);\n        setMessageType('error');\n        setToastVisible(true);\n        setTimeout(() => setToastVisible(false), 7000);\n      }\n    } catch (err) {\n      console.error('Error saving permissions:', err);\n      setMessage(err.message || 'Error updating role permissions');\n      setMessageType('error');\n      setToastVisible(true);\n      setTimeout(() => setToastVisible(false), 4000);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Get users count for selected role\n  const getUsersCountForRole = () => {\n    if (!selectedRole) return 0;\n    return users.filter(user => user.role === selectedRole).length;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-access-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this);\n  }\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\n  const selectedRoleUserCount = getUsersCountForRole();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-access-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decorative-elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header-custom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-wrapper-large\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-shield-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"page-title\",\n            children: \"Role Access Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"page-subtitle\",\n            children: \"Configure permissions for user roles - changes apply to all users with the selected role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-custom\",\n          children: [toastVisible && message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `toast-popup ${messageType === 'success' ? 'toast-success' : 'toast-error'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), message && !toastVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-number\",\n                children: availableRoles.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-label\",\n                children: \"Available Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-number\",\n                children: getTotalAvailablePermissions()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-label\",\n                children: \"Available Permissions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), selectedRole && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-number\",\n                  children: selectedRoleUserCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-label\",\n                  children: \"Users with this Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-number\",\n                  children: getTotalEnabledPermissions()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-label\",\n                  children: \"Granted Permissions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              className: \"form-label-modern\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-person-gear text-primary mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 17\n              }, this), \"Select Role to Manage\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              id: \"role\",\n              className: \"form-control form-control-modern\",\n              value: selectedRole,\n              onChange: handleRoleSelect,\n              disabled: !isSuperAdmin,\n              title: !isSuperAdmin ? 'Only Super Admin can change selected role' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Choose a role to configure --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this), availableRoles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role.value,\n                children: [role.label, \" - \", role.description]\n              }, role.value, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted mt-2 d-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-info-circle mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), \"This will update permissions for \", selectedRoleUserCount, \" user(s) with the role: \", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), !isSuperAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-warning mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-lock-fill mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), \"You do not have permission to modify role permissions. Contact a Super Admin for changes.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: openConfirm,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: '#333',\n                  marginBottom: '20px',\n                  fontWeight: '600'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-shield-alt text-primary mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this), \"Configure Access Permissions for Role: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#667eea'\n                  },\n                  children: selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-info\",\n                style: {\n                  backgroundColor: '#e3f2fd',\n                  border: '1px solid #bbdefb',\n                  borderRadius: '6px',\n                  padding: '12px',\n                  marginBottom: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-info-circle text-primary mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Note:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this), \" Changes will be applied to all \", selectedRoleUserCount, \" user(s) with the role \\\"\", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-all-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"select-all\",\n                  checked: selectAll,\n                  onChange: handleSelectAll\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"select-all\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-check2-all mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 23\n                  }, this), \"Select All Permissions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"permission-counter\",\n                  children: [getTotalEnabledPermissions(), \"/\", getTotalAvailablePermissions(), \" permissions selected\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this), availablePermissions.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"permission-category\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"category-title\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-folder text-primary mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 25\n                  }, this), category.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox-grid\",\n                  children: category.permissions.map(permission => {\n                    const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `checkbox-item ${isChecked ? 'selected' : ''}`,\n                      onClick: () => handlePermissionChange(category.category, permission.id),\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: isChecked || false,\n                        onChange: () => handlePermissionChange(category.category, permission.id),\n                        id: `perm_${category.category}_${permission.id}`,\n                        disabled: !isSuperAdmin\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 579,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"checkmark\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 586,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `perm_${category.category}_${permission.id}`,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"permission-title\",\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-file-text text-muted mr-2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 589,\n                            columnNumber: 35\n                          }, this), permission.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 588,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"permission-description\",\n                          children: permission.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 592,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 587,\n                        columnNumber: 31\n                      }, this)]\n                    }, `${category.category}_${permission.id}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 23\n                }, this)]\n              }, category.category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-4\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn-save-modern\",\n                  disabled: submitting || !isSuperAdmin,\n                  title: !isSuperAdmin ? 'Only Super Admin can apply changes' : '',\n                  onClick: openConfirm,\n                  children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"spinner-border spinner-border-sm mr-2\",\n                      role: \"status\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"visually-hidden\",\n                        children: \"Loading...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 615,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 27\n                    }, this), \"Updating \", selectedRoleUserCount, \" user(s)...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-save mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 27\n                    }, this), \"Apply to All \", selectedRoleUserCount, \" User(s) with Role: \", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 9\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowConfirm(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content confirm-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Confirm Permission Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You're about to apply the selected permissions to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedRoleUserCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 68\n            }, this), \" user(s) with the role \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 131\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This action will update both the role's permission document and the users' effective permissions. Are you sure you want to continue?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-professional btn-secondary\",\n            onClick: () => setShowConfirm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-professional btn-success\",\n            onClick: confirmAndSave,\n            children: \"Yes, apply changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleAccessManagement, \"XPaeUUXY91taGfpAZQVoKX95sPc=\");\n_c = RoleAccessManagement;\nexport default RoleAccessManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleAccessManagement\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","RoleAccessManagement","_s","users","setUsers","loading","setLoading","selectedRole","setSelectedRole","selectedRoleId","setSelectedRoleId","selectAll","setSelectAll","formData","setFormData","permissions","submitting","setSubmitting","message","setMessage","messageType","setMessageType","showConfirm","setShowConfirm","toastVisible","setToastVisible","user","isSuperAdmin","role","availableRoles","setAvailableRoles","value","label","description","availablePermissions","category","name","id","fetchUsers","token","localStorage","getItem","res","fetch","headers","ok","result","json","Array","isArray","data","length","map","r","_id","console","warn","err","handler","e","payload","detail","prev","find","window","addEventListener","removeEventListener","response","error","handleRoleSelect","roleValue","target","roleMeta","roleId","roleDoc","updateSelectAllStatus","userWithRole","u","handlePermissionChange","permissionId","newPermissions","handleSelectAll","newSelectAll","forEach","perm","totalPermissions","enabledPermissions","getTotalEnabledPermissions","count","getTotalAvailablePermissions","reduce","total","openConfirm","preventDefault","setTimeout","confirmAndSave","roleSaved","method","body","JSON","stringify","catch","Error","refreshed","usersWithRole","filter","selectedRoleData","updatePromises","then","status","userId","results","Promise","all","failed","prevUsers","failedIds","f","slice","join","getUsersCountForRole","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedRoleUserCount","htmlFor","onChange","disabled","title","onSubmit","style","color","marginBottom","fontWeight","backgroundColor","border","borderRadius","padding","type","checked","permission","isChecked","onClick","stopPropagation","_c","$RefreshReg$"],"sources":["B:/PortAuthProject/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport './RoleAccessManagement.css';\r\n\r\nconst RoleAccessManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectedRoleId, setSelectedRoleId] = useState('');\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    permissions: {}\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [toastVisible, setToastVisible] = useState(false);\r\n  const { user } = useContext(AuthContext);\r\n  const isSuperAdmin = user?.role === 'super_admin';\r\n\r\n  // Available roles (moved to state so runtime additions are possible)\r\n  const [availableRoles, setAvailableRoles] = useState([\r\n    { value: 'super_admin', label: 'Super Admin', description: 'Highest level system administrator' },\r\n    { value: 'admin', label: 'Administrator', description: 'System administrator with management rights' },\r\n    { value: 'administrative_clerk', label: 'Administrative Clerk', description: 'Administrative support staff' },\r\n    { value: 'clerk', label: 'Clerk', description: 'General office clerk' },\r\n    { value: 'employee', label: 'Employee', description: 'Regular system user' }\r\n  ]);\r\n\r\n  // Available permissions list based on User model\r\n  const availablePermissions = [\r\n    { \r\n      category: 'users', \r\n      name: 'User Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Users', description: 'Add new users to the system' },\r\n        { id: 'read', name: 'View Users', description: 'View user information and lists' },\r\n        { id: 'update', name: 'Update Users', description: 'Edit user information and profiles' },\r\n        { id: 'delete', name: 'Delete Users', description: 'Remove users from the system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'attendance', \r\n      name: 'Attendance Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Attendance', description: 'Add attendance records' },\r\n        { id: 'read', name: 'View Attendance', description: 'View attendance records and reports' },\r\n        { id: 'update', name: 'Update Attendance', description: 'Edit attendance records' },\r\n        { id: 'delete', name: 'Delete Attendance', description: 'Remove attendance records' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'reports', \r\n      name: 'Reports Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Generate Reports', description: 'Create system reports' },\r\n        { id: 'read', name: 'View Reports', description: 'Access and view reports' },\r\n        { id: 'update', name: 'Update Reports', description: 'Modify report settings' },\r\n        { id: 'delete', name: 'Delete Reports', description: 'Remove reports from system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'divisions', \r\n      name: 'Division Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Divisions', description: 'Add new company divisions' },\r\n        { id: 'read', name: 'View Divisions', description: 'View division information' },\r\n        { id: 'update', name: 'Update Divisions', description: 'Edit division details' },\r\n        { id: 'delete', name: 'Delete Divisions', description: 'Remove divisions' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'settings', \r\n      name: 'System Settings', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Settings', description: 'Add new system configurations' },\r\n        { id: 'read', name: 'View Settings', description: 'Access system settings' },\r\n        { id: 'update', name: 'Update Settings', description: 'Modify system configurations' },\r\n        { id: 'delete', name: 'Delete Settings', description: 'Remove system settings' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n\r\n    // Load roles from backend\r\n    (async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await fetch('http://localhost:5000/api/roles', {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          }\r\n        });\r\n\r\n        if (res.ok) {\r\n          const result = await res.json();\r\n          if (Array.isArray(result.data) && result.data.length) {\r\n            // include the database id so we can fetch role permissions\r\n            setAvailableRoles(result.data.map(r => ({ id: r._id, value: r.value, label: r.label, description: r.description || '' })));\r\n          }\r\n        } else {\r\n          console.warn('Failed to fetch roles from backend, using defaults');\r\n        }\r\n      } catch (err) {\r\n        console.warn('Error fetching roles:', err);\r\n      }\r\n    })();\r\n\r\n    // Listen for roles added via other components\r\n    const handler = (e) => {\r\n      const payload = e?.detail;\r\n      if (payload && payload.value && payload.label) {\r\n        // Avoid duplicates\r\n        setAvailableRoles(prev => {\r\n          if (prev.find(r => r.value === payload.value)) return prev;\r\n          return [...prev, { value: payload.value, label: payload.label, description: '' }];\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('roleAdded', handler);\r\n    return () => window.removeEventListener('roleAdded', handler);\r\n  }, []);\r\n\r\n  // Fetch users from API\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsers(data.data || []);\r\n      } else {\r\n        console.error('Failed to fetch users');\r\n        setMessage('Failed to load users');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setMessage('Error loading users');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle role selection\r\n  const handleRoleSelect = (e) => {\r\n    const roleValue = e.target.value;\r\n    setSelectedRole(roleValue);\r\n    \r\n    if (roleValue) {\r\n      // Find available role metadata (contains id)\r\n      const roleMeta = availableRoles.find(r => r.value === roleValue);\r\n      const roleId = roleMeta?.id;\r\n      setSelectedRoleId(roleId || '');\r\n\r\n      if (roleId) {\r\n        (async () => {\r\n          try {\r\n            const token = localStorage.getItem('token');\r\n            const res = await fetch(`http://localhost:5000/api/roles/${roleId}`, {\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n              }\r\n            });\r\n\r\n            if (res.ok) {\r\n              const result = await res.json();\r\n              const roleDoc = result.data;\r\n              setFormData({ permissions: roleDoc.permissions || {} });\r\n              updateSelectAllStatus(roleDoc.permissions || {});\r\n            } else {\r\n              // fallback to user-based permissions if role doc cannot be fetched\r\n              const userWithRole = users.find(u => u.role === roleValue);\r\n              setFormData({ permissions: userWithRole?.permissions || {} });\r\n              updateSelectAllStatus(userWithRole?.permissions || {});\r\n            }\r\n          } catch (err) {\r\n            console.warn('Error fetching role document:', err);\r\n            const userWithRole = users.find(u => u.role === roleValue);\r\n            setFormData({ permissions: userWithRole?.permissions || {} });\r\n            updateSelectAllStatus(userWithRole?.permissions || {});\r\n          }\r\n        })();\r\n      } else {\r\n        // If no role id available, fallback to user-based permissions\r\n        const userWithRole = users.find(u => u.role === roleValue);\r\n        setFormData({ permissions: userWithRole?.permissions || {} });\r\n        updateSelectAllStatus(userWithRole?.permissions || {});\r\n      }\r\n    } else {\r\n      setFormData({\r\n        permissions: {}\r\n      });\r\n      setSelectAll(false);\r\n    }\r\n  };\r\n\r\n  // Handle permission checkbox changes\r\n  const handlePermissionChange = (category, permissionId) => {\r\n  if (!isSuperAdmin) return; // prevent non-super-admin from making changes\r\n    const newPermissions = { ...formData.permissions };\r\n    \r\n    if (!newPermissions[category]) {\r\n      newPermissions[category] = {};\r\n    }\r\n    \r\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n    \r\n    updateSelectAllStatus(newPermissions);\r\n  };\r\n\r\n  // Handle select all toggle\r\n  const handleSelectAll = () => {\r\n    const newSelectAll = !selectAll;\r\n    setSelectAll(newSelectAll);\r\n    \r\n    const newPermissions = {};\r\n    \r\n    if (newSelectAll) {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = true;\r\n        });\r\n      });\r\n    } else {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = false;\r\n        });\r\n      });\r\n    }\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n  };\r\n\r\n  // Update select all status\r\n  const updateSelectAllStatus = (permissions) => {\r\n    let totalPermissions = 0;\r\n    let enabledPermissions = 0;\r\n    \r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        totalPermissions++;\r\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\r\n          enabledPermissions++;\r\n        }\r\n      });\r\n    });\r\n    \r\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\r\n  };\r\n\r\n  // Get total enabled permissions count\r\n  const getTotalEnabledPermissions = () => {\r\n    let count = 0;\r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  };\r\n\r\n  // Get total available permissions count\r\n  const getTotalAvailablePermissions = () => {\r\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\r\n  };\r\n\r\n  // Show confirmation modal instead of immediate submit\r\n  const openConfirm = (e) => {\r\n    e.preventDefault();\r\n    if (!isSuperAdmin) {\r\n      setMessage('Only Super Admin can modify role permissions');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n      return;\r\n    }\r\n\r\n    if (!selectedRole) {\r\n      setMessage('Please select a role first');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n      return;\r\n    }\r\n\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  // Confirm and perform save: persist to role doc then update users\r\n  const confirmAndSave = async () => {\r\n    setShowConfirm(false);\r\n    setSubmitting(true);\r\n    try {\r\n      // Persist permissions to role document (if we have an id)\r\n      const token = localStorage.getItem('token');\r\n      let roleSaved = false;\r\n      if (selectedRoleId) {\r\n        const res = await fetch(`http://localhost:5000/api/permissions/roles/${selectedRoleId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          },\r\n          body: JSON.stringify({ permissions: formData.permissions })\r\n        });\r\n\r\n        if (!res.ok) {\r\n          const err = await res.json().catch(() => ({}));\r\n          throw new Error(err.message || 'Failed to save role permissions');\r\n        }\r\n\r\n        roleSaved = true;\r\n\r\n        // Refresh saved role doc to get authoritative permissions\r\n        try {\r\n          const refreshed = await fetch(`http://localhost:5000/api/roles/${selectedRoleId}`, {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n            }\r\n          });\r\n          if (refreshed.ok) {\r\n            const json = await refreshed.json();\r\n            setFormData({ permissions: json.data.permissions || {} });\r\n          }\r\n        } catch (e) {\r\n          // non-fatal\r\n          console.warn('Could not refresh role after save', e);\r\n        }\r\n      }\r\n\r\n      // Now update users with the selected role\r\n      const usersWithRole = users.filter(u => u.role === selectedRole);\r\n      if (usersWithRole.length === 0) {\r\n        // If we saved the role document, treat that as a successful save even if no users exist for the role\r\n        if (roleSaved) {\r\n          setMessage(`Role permissions saved successfully. No users found with role ${selectedRoleData?.label}`);\r\n          setMessageType('success');\r\n          setToastVisible(true);\r\n          setTimeout(() => setToastVisible(false), 4000);\r\n          setTimeout(() => { setMessage(''); setMessageType(''); }, 5000);\r\n          setSubmitting(false);\r\n          return;\r\n        }\r\n\r\n        setMessage('No users found with the selected role');\r\n        setMessageType('error');\r\n        setToastVisible(true);\r\n        setTimeout(() => setToastVisible(false), 4000);\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Use auth token for user updates as well (backend typically requires auth)\r\n      const updatePromises = usersWithRole.map(user =>\r\n        fetch(`http://localhost:5000/api/users/${user._id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          },\r\n          body: JSON.stringify({ permissions: formData.permissions })\r\n        }).then(async r => ({ ok: r.ok, status: r.status, body: await r.json().catch(() => ({})), userId: user._id }))\r\n      );\r\n\r\n      const results = await Promise.all(updatePromises);\r\n      const failed = results.filter(r => !r.ok);\r\n\r\n      if (failed.length === 0) {\r\n        setUsers(prevUsers => prevUsers.map(u => u.role === selectedRole ? { ...u, permissions: formData.permissions } : u));\r\n        setMessage(`Permissions updated successfully for ${usersWithRole.length} user(s)`);\r\n        setMessageType('success');\r\n        setToastVisible(true);\r\n        setTimeout(() => setToastVisible(false), 4000);\r\n        // Auto-hide message area too\r\n        setTimeout(() => { setMessage(''); setMessageType(''); }, 5000);\r\n      } else {\r\n        // Build an informative message\r\n        const failedIds = failed.map(f => f.userId).slice(0, 5);\r\n        setMessage(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Failed for: ${failedIds.join(', ')}${failed.length > 5 ? '...' : ''}`);\r\n        setMessageType('error');\r\n        setToastVisible(true);\r\n        setTimeout(() => setToastVisible(false), 7000);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Error saving permissions:', err);\r\n      setMessage(err.message || 'Error updating role permissions');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Get users count for selected role\r\n  const getUsersCountForRole = () => {\r\n    if (!selectedRole) return 0;\r\n    return users.filter(user => user.role === selectedRole).length;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"role-access-wrapper\">\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\r\n  const selectedRoleUserCount = getUsersCountForRole();\r\n\r\n  return (\r\n    <div className=\"role-access-wrapper\">\r\n      {/* Decorative Elements */}\r\n      <div className=\"decorative-elements\">\r\n        <div className=\"geometric-shape shape-1\"></div>\r\n        <div className=\"geometric-shape shape-2\"></div>\r\n        <div className=\"geometric-shape shape-3\"></div>\r\n        <div className=\"geometric-shape shape-4\"></div>\r\n      </div>\r\n\r\n      <div className=\"container-fluid px-4\">\r\n        <div className=\"main-card\">\r\n          <div className=\"card-header-custom\">\r\n            <div className=\"icon-wrapper-large\">\r\n              <i className=\"bi bi-shield-check\"></i>\r\n            </div>\r\n            <h1 className=\"page-title\">Role Access Management</h1>\r\n            <p className=\"page-subtitle\">Configure permissions for user roles - changes apply to all users with the selected role</p>\r\n          </div>\r\n          \r\n          <div className=\"card-body-custom\">\r\n            {/* Toast popup */}\r\n            {toastVisible && message && (\r\n              <div className={`toast-popup ${messageType === 'success' ? 'toast-success' : 'toast-error'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Inline message area */}\r\n            {message && !toastVisible && (\r\n              <div className={`alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Stats Section */}\r\n            <div className=\"stats-section\">\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{availableRoles.length}</span>\r\n                <span className=\"stats-label\">Available Roles</span>\r\n              </div>\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{getTotalAvailablePermissions()}</span>\r\n                <span className=\"stats-label\">Available Permissions</span>\r\n              </div>\r\n              {selectedRole && (\r\n                <>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{selectedRoleUserCount}</span>\r\n                    <span className=\"stats-label\">Users with this Role</span>\r\n                  </div>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{getTotalEnabledPermissions()}</span>\r\n                    <span className=\"stats-label\">Granted Permissions</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Role Selection */}\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"role\" className=\"form-label-modern\">\r\n                <i className=\"bi bi-person-gear text-primary mr-2\"></i>Select Role to Manage\r\n              </label>\r\n              <select \r\n                name=\"role\" \r\n                id=\"role\" \r\n                className=\"form-control form-control-modern\" \r\n                value={selectedRole}\r\n                onChange={handleRoleSelect}\r\n                disabled={!isSuperAdmin}\r\n                title={!isSuperAdmin ? 'Only Super Admin can change selected role' : ''}\r\n              >\r\n                <option value=\"\">-- Choose a role to configure --</option>\r\n                {availableRoles.map(role => (\r\n                  <option key={role.value} value={role.value}>\r\n                    {role.label} - {role.description}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {selectedRole && (\r\n                <small className=\"text-muted mt-2 d-block\">\r\n                  <i className=\"bi bi-info-circle mr-1\"></i>\r\n                  This will update permissions for {selectedRoleUserCount} user(s) with the role: {selectedRoleData?.label}\r\n                </small>\r\n              )}\r\n\r\n              {!isSuperAdmin && (\r\n                <div className=\"alert alert-warning mt-3\">\r\n                  <i className=\"bi bi-lock-fill mr-2\"></i>\r\n                  You do not have permission to modify role permissions. Contact a Super Admin for changes.\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Permissions Configuration */}\r\n            {selectedRole && (\r\n              <div className=\"form-section\">\r\n                <form onSubmit={openConfirm}>\r\n                  <h3 style={{ color: '#333', marginBottom: '20px', fontWeight: '600' }}>\r\n                    <i className=\"bi bi-shield-alt text-primary mr-2\"></i>\r\n                    Configure Access Permissions for Role: <span style={{ color: '#667eea' }}>{selectedRoleData?.label}</span>\r\n                  </h3>\r\n\r\n                  <div className=\"alert alert-info\" style={{ backgroundColor: '#e3f2fd', border: '1px solid #bbdefb', borderRadius: '6px', padding: '12px', marginBottom: '20px' }}>\r\n                    <i className=\"bi bi-info-circle text-primary mr-2\"></i>\r\n                    <strong>Note:</strong> Changes will be applied to all {selectedRoleUserCount} user(s) with the role \"{selectedRoleData?.label}\"\r\n                  </div>\r\n\r\n                  {/* Select All Section */}\r\n                  <div className=\"select-all-section\">\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      id=\"select-all\"\r\n                      checked={selectAll}\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                    <label htmlFor=\"select-all\">\r\n                      <i className=\"bi bi-check2-all mr-2\"></i>Select All Permissions\r\n                    </label>\r\n                    <span className=\"permission-counter\">\r\n                      {getTotalEnabledPermissions()}/{getTotalAvailablePermissions()} permissions selected\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Permissions Grid by Category */}\r\n                  {availablePermissions.map(category => (\r\n                    <div key={category.category} className=\"permission-category\">\r\n                      <h4 className=\"category-title\">\r\n                        <i className=\"bi bi-folder text-primary mr-2\"></i>\r\n                        {category.name}\r\n                      </h4>\r\n                      <div className=\"checkbox-grid\">\r\n                        {category.permissions.map(permission => {\r\n                          const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\r\n                          return (\r\n                            <div \r\n                              key={`${category.category}_${permission.id}`} \r\n                              className={`checkbox-item ${isChecked ? 'selected' : ''}`}\r\n                              onClick={() => handlePermissionChange(category.category, permission.id)}\r\n                            >\r\n                              <input \r\n                                type=\"checkbox\" \r\n                                checked={isChecked || false}\r\n                                onChange={() => handlePermissionChange(category.category, permission.id)}\r\n                                id={`perm_${category.category}_${permission.id}`}\r\n                                disabled={!isSuperAdmin}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                              <label htmlFor={`perm_${category.category}_${permission.id}`}>\r\n                                <div className=\"permission-title\">\r\n                                  <i className=\"bi bi-file-text text-muted mr-2\"></i>\r\n                                  {permission.name}\r\n                                </div>\r\n                                <div className=\"permission-description\">\r\n                                  {permission.description}\r\n                                </div>\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Submit Button */}\r\n                  <div className=\"text-center mt-4\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"btn-save-modern\"\r\n                      disabled={submitting || !isSuperAdmin}\r\n                      title={!isSuperAdmin ? 'Only Super Admin can apply changes' : ''}\r\n                      onClick={openConfirm}\r\n                    >\r\n                      {submitting ? (\r\n                        <>\r\n                          <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                          </div>\r\n                          Updating {selectedRoleUserCount} user(s)...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <i className=\"bi bi-save mr-2\"></i>\r\n                          Apply to All {selectedRoleUserCount} User(s) with Role: {selectedRoleData?.label}\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading Overlay */}\r\n      {submitting && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirmation Modal */}\r\n      {showConfirm && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowConfirm(false)}>\r\n          <div className=\"modal-content confirm-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h4>Confirm Permission Changes</h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>You're about to apply the selected permissions to <strong>{selectedRoleUserCount}</strong> user(s) with the role <strong>{selectedRoleData?.label}</strong>.</p>\r\n              <p>This action will update both the role's permission document and the users' effective permissions. Are you sure you want to continue?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn-professional btn-secondary\" onClick={() => setShowConfirm(false)}>Cancel</button>\r\n              <button className=\"btn-professional btn-success\" onClick={confirmAndSave}>Yes, apply changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}