{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\ReportGeneration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport usePermission from '../../hooks/usePermission';\nimport './ReportGeneration.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReportGeneration = () => {\n  _s();\n  var _reportData$summary, _reportData$summary2, _divisions$find, _reportData$data, _reportData$data$, _reportData$data2, _reportData$data2$, _divisions$find2, _sections$find, _reportData$data3, _reportData$data4, _reportData$data5, _reportData$data6, _reportData$data7, _divisions$find3;\n  const [reportType, setReportType] = useState('attendance');\n  const [reportScope, setReportScope] = useState('individual');\n  const [employeeId, setEmployeeId] = useState('');\n  const [divisionId, setDivisionId] = useState('all');\n  const [sectionId, setSectionId] = useState('all');\n  const [divisions, setDivisions] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [allSections, setAllSections] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [reportData, setReportData] = useState(null);\n  const [error, setError] = useState('');\n\n  // permission checks\n  const canGenerate = usePermission('reports', 'create');\n  const canView = usePermission('reports', 'read');\n\n  // Fetch divisions and sections on component mount\n  useEffect(() => {\n    fetchDivisions();\n    fetchAllSections();\n\n    // Set default date range to today\n    const today = new Date().toISOString().split('T')[0];\n    setDateRange({\n      startDate: today,\n      endDate: today\n    });\n  }, []);\n\n  // Fetch sections when division changes\n  useEffect(() => {\n    if (divisionId && divisionId !== 'all') {\n      fetchSectionsByDivision(divisionId);\n    } else {\n      setSections(allSections);\n      setSectionId('all');\n    }\n  }, [divisionId, allSections]);\n  const fetchDivisions = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/mysql/divisions', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setDivisions(data.divisions || []);\n      }\n    } catch (err) {\n      console.error('Error fetching divisions:', err);\n    }\n  };\n  const fetchAllSections = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/mysql/sections', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAllSections(data.sections || []);\n        setSections(data.sections || []);\n      }\n    } catch (err) {\n      console.error('Error fetching sections:', err);\n    }\n  };\n  const fetchSectionsByDivision = async divisionId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/mysql/sections?division_id=${divisionId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setSections(data.sections || []);\n        setSectionId('all'); // Reset section selection\n      }\n    } catch (err) {\n      console.error('Error fetching sections by division:', err);\n    }\n  };\n  const generateReport = async () => {\n    if (!dateRange.startDate || !dateRange.endDate) {\n      setError('Please select both start and end dates');\n      return;\n    }\n    if (reportScope === 'individual' && !employeeId && reportType === 'attendance') {\n      setError(`Please enter Employee ID for individual ${reportType} reports`);\n      return;\n    }\n    console.log('Generating report with:', {\n      reportType,\n      reportScope,\n      employeeId,\n      divisionId,\n      sectionId,\n      dateRange\n    });\n    setLoading(true);\n    setError('');\n    setReportData(null);\n    try {\n      let endpoint = '';\n      let requestData = {\n        from_date: dateRange.startDate,\n        to_date: dateRange.endDate,\n        report_type: reportScope\n      };\n\n      // Add employee ID for individual reports\n      if (reportScope === 'individual' && employeeId) {\n        requestData.employee_id = employeeId;\n      }\n\n      // Add division and section filters for group attendance reports\n      if (reportScope === 'group' && reportType === 'attendance') {\n        if (divisionId && divisionId !== 'all') {\n          requestData.division_id = divisionId;\n        }\n        if (sectionId && sectionId !== 'all') {\n          requestData.section_id = sectionId;\n        }\n      }\n\n      // Determine endpoint based on report type\n      switch (reportType) {\n        case 'attendance':\n          endpoint = '/api/reports/mysql/attendance';\n          break;\n        case 'meal':\n          endpoint = '/api/reports/meal';\n          requestData = {\n            startDate: dateRange.startDate,\n            endDate: dateRange.endDate,\n            filters: {},\n            groupBy: 'date'\n          };\n          // Add division filter for meal reports\n          if (divisionId && divisionId !== 'all') {\n            requestData.filters.divisionId = divisionId;\n          }\n          break;\n        case 'audit':\n          endpoint = '/api/reports/audit';\n          break;\n        default:\n          endpoint = '/api/reports/mysql/attendance';\n      }\n      console.log('Making request to:', `http://localhost:5000${endpoint}`);\n      console.log('Request data:', requestData);\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      console.log('Response:', {\n        status: response.status,\n        data\n      });\n      if (response.ok && data.success) {\n        setReportData(data);\n        console.log('Report generated successfully:', data);\n      } else {\n        setError(data.message || 'Failed to generate report');\n      }\n    } catch (err) {\n      console.error('Report generation error:', err);\n      setError('Network error occurred while generating report');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const exportReport = format => {\n    console.log('Export function called with format:', format);\n    console.log('Report data:', reportData);\n    console.log('Report scope:', reportScope);\n    if (!reportData || !reportData.data) {\n      console.error('No report data available for export');\n      setError('No data to export. Please generate a report first.');\n      return;\n    }\n    if (!reportData.data.length) {\n      console.error('Empty report data');\n      setError('No records found to export');\n      return;\n    }\n    try {\n      if (format === 'csv') {\n        exportToCSV();\n      } else if (format === 'json') {\n        exportToJSON();\n      }\n    } catch (error) {\n      console.error('Export error:', error);\n      setError('Error occurred while exporting data');\n    }\n  };\n  const exportToCSV = () => {\n    const headers = getCSVHeaders();\n    const rows = reportData.data.map(record => getCSVRow(record));\n    const csvContent = [headers, ...rows].map(row => row.map(field => `\"${field}\"`).join(',')).join('\\n');\n    downloadFile(csvContent, `${reportType}_report_${new Date().toISOString().split('T')[0]}.csv`, 'text/csv');\n  };\n  const exportToJSON = () => {\n    const jsonData = {\n      reportType,\n      reportScope,\n      dateRange,\n      generatedAt: new Date().toISOString(),\n      summary: reportData.summary,\n      data: reportData.data\n    };\n    downloadFile(JSON.stringify(jsonData, null, 2), `${reportType}_report_${new Date().toISOString().split('T')[0]}.json`, 'application/json');\n  };\n  const getCSVHeaders = () => {\n    if (reportType === 'meal') {\n      return reportScope === 'individual' ? ['Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items'] : ['Employee ID', 'Employee Name', 'Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items'];\n    } else {\n      return reportScope === 'individual' ? ['Date', 'Time', 'Scan Type', 'Status'] : ['Employee ID', 'Employee Name', 'Date', 'Time', 'Scan Type', 'Status'];\n    }\n  };\n  const getCSVRow = record => {\n    if (reportType === 'meal') {\n      var _record$items, _record$items2, _record$user, _record$user2, _record$user3;\n      const items = ((_record$items = record.items) === null || _record$items === void 0 ? void 0 : _record$items.map(item => `${item.name} (${item.quantity})`).join('; ')) || 'Standard Meal';\n      const quantity = ((_record$items2 = record.items) === null || _record$items2 === void 0 ? void 0 : _record$items2.reduce((total, item) => total + item.quantity, 0)) || 1;\n      const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n      return reportScope === 'individual' ? [record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items] : [record.employee_id || ((_record$user = record.user) === null || _record$user === void 0 ? void 0 : _record$user.employeeId), record.employee_name || `${(_record$user2 = record.user) === null || _record$user2 === void 0 ? void 0 : _record$user2.firstName} ${(_record$user3 = record.user) === null || _record$user3 === void 0 ? void 0 : _record$user3.lastName}`, record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items];\n    } else {\n      var _record$scan_type, _record$scan_type2;\n      return reportScope === 'individual' ? [record.date_, record.time_, record.scan_type, ((_record$scan_type = record.scan_type) === null || _record$scan_type === void 0 ? void 0 : _record$scan_type.toUpperCase()) === 'IN' ? 'ON' : 'OFF'] : [record.employee_ID, record.employee_name, record.date_, record.time_, record.scan_type, ((_record$scan_type2 = record.scan_type) === null || _record$scan_type2 === void 0 ? void 0 : _record$scan_type2.toUpperCase()) === 'IN' ? 'ON' : 'OFF'];\n    }\n  };\n  const downloadFile = (content, filename, contentType) => {\n    const blob = new Blob([content], {\n      type: contentType\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  };\n  const printReport = () => {\n    console.log('Print function called');\n    console.log('Report data:', reportData);\n    console.log('Report scope:', reportScope);\n    if (!reportData || !reportData.data) {\n      console.error('No report data available for printing');\n      setError('No data to print. Please generate a report first.');\n      return;\n    }\n    if (!reportData.data.length) {\n      console.error('Empty report data');\n      setError('No records found to print');\n      return;\n    }\n    try {\n      console.log('Starting print process...');\n      // Get employee info from first record for individual reports\n      const firstRecord = reportData.data[0];\n      const isIndividualReport = reportScope === 'individual';\n      console.log('First record:', firstRecord);\n      console.log('Is individual report:', isIndividualReport);\n\n      // Group data by date for individual reports\n      const groupedData = {};\n      if (isIndividualReport) {\n        reportData.data.forEach(record => {\n          const date = record.date_;\n          if (!groupedData[date]) {\n            groupedData[date] = [];\n          }\n          groupedData[date].push(record);\n        });\n      }\n\n      // Create print content matching the image format\n      let printContent = `\n        <html>\n          <head>\n            <title>Attendance Report</title>\n            <style>\n              @page {\n                margin: 0.5in;\n                size: A4;\n              }\n              \n              body { \n                font-family: 'Courier New', monospace;\n                margin: 0;\n                padding: 0;\n                font-size: 11px;\n                line-height: 1.2;\n                color: #000;\n                -webkit-print-color-adjust: exact;\n                print-color-adjust: exact;\n              }\n              \n              .report-header { \n                margin-bottom: 15px;\n              }\n              \n              .report-title {\n                font-weight: bold;\n                font-size: 14px;\n                margin-bottom: 3px;\n                text-align: center;\n              }\n              \n              .report-subtitle {\n                font-size: 11px;\n                margin-bottom: 10px;\n                text-align: center;\n              }\n              \n              .header-info {\n                display: flex;\n                justify-content: space-between;\n                margin-bottom: 10px;\n              }\n              \n              .left-info, .right-info {\n                font-size: 10px;\n              }\n              \n              .employee-info {\n                margin-bottom: 10px;\n                font-size: 11px;\n              }\n              \n              .date-range {\n                margin-bottom: 15px;\n                font-size: 11px;\n                text-align: center;\n              }\n              \n              .data-table { \n                width: 100%;\n                border-collapse: collapse;\n                font-size: 10px;\n                margin-bottom: 20px;\n                border: 1px solid #000;\n                table-layout: fixed;\n              }\n              \n              .data-table th { \n                border: 1px solid #000;\n                padding: 4px 6px;\n                text-align: center;\n                font-weight: bold;\n                background: #f5f5f5;\n                font-size: 10px;\n              }\n              \n              .data-table td { \n                border: 1px solid #000;\n                padding: 4px 6px;\n                text-align: center;\n                margin: 0;\n                vertical-align: top;\n                font-size: 10px;\n              }\n              \n              .date-cell {\n                text-align: left;\n                vertical-align: top;\n                padding: 4px 6px;\n                font-weight: bold;\n                line-height: 1.2;\n              }\n              \n              .date-cell-empty {\n                padding: 4px 6px;\n                text-align: center;\n              }\n              \n              .function-col {\n                text-align: center;\n                font-weight: bold;\n              }\n              \n              .on-status {\n                font-weight: bold;\n              }\n              \n              .off-status {\n                font-weight: bold;\n              }\n              \n              .signature-section {\n                margin-top: 50px;\n                display: flex;\n                justify-content: space-between;\n                font-size: 10px;\n                align-items: flex-end;\n              }\n              \n              .signature-block {\n                text-align: center;\n                min-width: 150px;\n              }\n              \n              .signature-line {\n                border-bottom: 1px solid #000;\n                height: 40px;\n                margin-bottom: 5px;\n                width: 100%;\n              }\n              \n              .signature-label {\n                font-size: 10px;\n                font-weight: normal;\n              }\n            </style>\n          </head>\n          <body>\n            <div class=\"report-header\">\n              <div class=\"report-title\">${reportType === 'meal' ? isIndividualReport ? 'Individual Meal Report' : 'Group Meal Report' : isIndividualReport ? 'Unit Attendance Report' : 'Group Attendance Report'}</div>\n              <div class=\"report-subtitle\">${reportType === 'meal' ? 'All Meal Consumption Records' : 'All Granted(ID & FP) Records'}</div>\n              \n              <div class=\"header-info\">\n                <div class=\"left-info\">`;\n      if (isIndividualReport && firstRecord) {\n        printContent += `\n                  <div>Emp No :- ${firstRecord.employee_ID || 'N/A'}</div>\n                  <div>Emp Name :- ${firstRecord.employee_name || 'Unknown'}</div>`;\n      }\n      printContent += `\n                </div>\n                <div class=\"right-info\">\n                  <div>Printed Date : ${new Date().toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      })}</div>\n                  <div>Printed Time : ${new Date().toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })}</div>\n                  <div>Page 1 of 1</div>\n                </div>\n              </div>\n              \n              <div class=\"date-range\">\n                <strong>Date From</strong> ${new Date(dateRange.startDate).toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      })} \n                <strong style=\"margin-left: 40px;\">To</strong> ${new Date(dateRange.endDate).toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      })}\n              </div>\n            </div>`;\n\n      // Create table with proper format\n      printContent += `\n            <table class=\"data-table\">\n              <thead>\n                <tr>`;\n      if (reportType === 'meal') {\n        if (isIndividualReport) {\n          printContent += `\n                    <th style=\"width: 15%;\">Date</th>\n                    <th style=\"width: 12%;\">Time</th>\n                    <th style=\"width: 15%;\">Meal Type</th>\n                    <th style=\"width: 18%;\">Location</th>\n                    <th style=\"width: 10%;\">Quantity</th>\n                    <th style=\"width: 30%;\">Items</th>`;\n        } else {\n          printContent += `\n                    <th style=\"width: 10%;\">Emp No</th>\n                    <th style=\"width: 15%;\">Emp Name</th>\n                    <th style=\"width: 12%;\">Date</th>\n                    <th style=\"width: 10%;\">Time</th>\n                    <th style=\"width: 12%;\">Meal Type</th>\n                    <th style=\"width: 12%;\">Location</th>\n                    <th style=\"width: 8%;\">Quantity</th>\n                    <th style=\"width: 21%;\">Items</th>`;\n        }\n      } else {\n        if (isIndividualReport) {\n          printContent += `\n                    <th style=\"width: 18%;\">Date</th>\n                    <th style=\"width: 12%;\">Time</th>\n                    <th style=\"width: 10%;\">Function</th>\n                    <th style=\"width: 20%;\">Status</th>\n                    <th style=\"width: 40%;\">Verification</th>`;\n        } else {\n          printContent += `\n                    <th style=\"width: 12%;\">Emp No</th>\n                    <th style=\"width: 20%;\">Emp Name</th>\n                    <th style=\"width: 15%;\">Date</th>\n                    <th style=\"width: 10%;\">Time</th>\n                    <th style=\"width: 8%;\">Function</th>\n                    <th style=\"width: 35%;\">Event Description</th>`;\n        }\n      }\n      printContent += `\n                </tr>\n              </thead>\n              <tbody>`;\n      if (reportType === 'meal') {\n        if (isIndividualReport) {\n          // For individual meal reports, group by date\n          const mealGroupedData = {};\n          reportData.data.forEach(record => {\n            const dateKey = record.date || record.meal_date || record.mealTime;\n            if (!mealGroupedData[dateKey]) {\n              mealGroupedData[dateKey] = [];\n            }\n            mealGroupedData[dateKey].push(record);\n          });\n          const sortedDates = Object.keys(mealGroupedData).sort();\n          sortedDates.forEach(date => {\n            const records = mealGroupedData[date];\n            const day = new Date(date).getDate().toString().padStart(2, '0');\n            const month = new Date(date).toLocaleDateString('en-GB', {\n              month: 'short'\n            });\n            const year = new Date(date).getFullYear().toString().slice(-2);\n            const dayName = new Date(date).toLocaleDateString('en-US', {\n              weekday: 'short'\n            });\n            const formattedDate = `${day}-${month}-${year}`;\n\n            // Sort records by time for each date\n            records.sort((a, b) => {\n              const aTime = new Date(a.mealTime || a.meal_time).getTime();\n              const bTime = new Date(b.mealTime || b.meal_time).getTime();\n              return aTime - bTime;\n            });\n            records.forEach((record, index) => {\n              var _record$items3, _record$items4;\n              const showDate = index === 0;\n              const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n                hour: '2-digit',\n                minute: '2-digit'\n              });\n              const items = ((_record$items3 = record.items) === null || _record$items3 === void 0 ? void 0 : _record$items3.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal';\n              const quantity = ((_record$items4 = record.items) === null || _record$items4 === void 0 ? void 0 : _record$items4.reduce((total, item) => total + item.quantity, 0)) || 1;\n              printContent += `\n                  <tr>\n                    <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\n                      ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\n                    </td>\n                    <td style=\"text-align: center;\">${mealTime}</td>\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\n                    <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\n                    <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\n                  </tr>`;\n            });\n          });\n        } else {\n          // For group meal reports, show all records with employee info\n          reportData.data.forEach((record, index) => {\n            var _record$items5, _record$items6, _record$user4, _record$user5, _record$user6;\n            const date = new Date(record.date || record.meal_date || record.mealTime);\n            const day = date.getDate().toString().padStart(2, '0');\n            const month = date.toLocaleDateString('en-GB', {\n              month: 'short'\n            });\n            const year = date.getFullYear().toString().slice(-2);\n            const dayName = date.toLocaleDateString('en-US', {\n              weekday: 'short'\n            });\n            const formattedDate = `${day}-${month}-${year}`;\n            const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n              hour: '2-digit',\n              minute: '2-digit'\n            });\n            const items = ((_record$items5 = record.items) === null || _record$items5 === void 0 ? void 0 : _record$items5.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal';\n            const quantity = ((_record$items6 = record.items) === null || _record$items6 === void 0 ? void 0 : _record$items6.reduce((total, item) => total + item.quantity, 0)) || 1;\n            const empName = (_record$user4 = record.user) !== null && _record$user4 !== void 0 && _record$user4.firstName && (_record$user5 = record.user) !== null && _record$user5 !== void 0 && _record$user5.lastName ? `${record.user.firstName} ${record.user.lastName}` : record.employee_name || 'Unknown';\n            printContent += `\n                <tr>\n                  <td style=\"font-weight: bold; text-align: center;\">${((_record$user6 = record.user) === null || _record$user6 === void 0 ? void 0 : _record$user6.employeeId) || record.employee_id || 'N/A'}</td>\n                  <td style=\"text-align: left; padding-left: 8px;\">${empName}</td>\n                  <td style=\"text-align: center;\">${formattedDate}<br/>${dayName}</td>\n                  <td style=\"text-align: center;\">${mealTime}</td>\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\n                  <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\n                  <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\n                </tr>`;\n          });\n        }\n      } else {\n        // Attendance report logic\n        if (isIndividualReport) {\n          // Sort dates and group data properly\n          const sortedDates = Object.keys(groupedData).sort();\n          sortedDates.forEach(date => {\n            const records = groupedData[date];\n            const dayName = new Date(date).toLocaleDateString('en-US', {\n              weekday: 'long'\n            });\n            const day = new Date(date).getDate().toString().padStart(2, '0');\n            const month = new Date(date).toLocaleDateString('en-GB', {\n              month: 'short'\n            });\n            const year = new Date(date).getFullYear().toString().slice(-2);\n            const formattedDate = `${day}-${month}-${year}`;\n\n            // Sort records by time for each date\n            records.sort((a, b) => (a.time_ || '').localeCompare(b.time_ || ''));\n            records.forEach((record, index) => {\n              var _record$scan_type3;\n              const isOnScan = ((_record$scan_type3 = record.scan_type) === null || _record$scan_type3 === void 0 ? void 0 : _record$scan_type3.toUpperCase()) === 'IN';\n              const functionCode = isOnScan ? 'F1-0' : 'F4-0';\n              const status = isOnScan ? 'ON' : 'OFF';\n              const showDate = index === 0; // Only show date on first row for each date group\n\n              printContent += `\n                <tr>\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\n                  </td>\n                  <td>${record.time_ || ''}</td>\n                  <td class=\"function-col\">${functionCode}</td>\n                  <td class=\"${isOnScan ? 'on-status' : 'off-status'}\">${status}</td>\n                  <td>Granted(ID & F) COM0002</td>\n                </tr>`;\n            });\n          });\n        } else {\n          // Group report - group by date and show employee details\n          const groupedData = {};\n          reportData.data.forEach(record => {\n            const dateKey = record.date_;\n            if (!groupedData[dateKey]) {\n              groupedData[dateKey] = [];\n            }\n            groupedData[dateKey].push(record);\n          });\n          const sortedDates = Object.keys(groupedData).sort();\n          sortedDates.forEach(dateKey => {\n            const records = groupedData[dateKey];\n            records.sort((a, b) => {\n              // Sort by employee ID first, then by time\n              const aEmpId = String(a.employee_ID || a.employee_id || '');\n              const bEmpId = String(b.employee_ID || b.employee_id || '');\n              const empCompare = aEmpId.localeCompare(bEmpId);\n              if (empCompare !== 0) return empCompare;\n              const aTime = String(a.time_ || '');\n              const bTime = String(b.time_ || '');\n              return aTime.localeCompare(bTime);\n            });\n            records.forEach((record, index) => {\n              var _record$scan_type4;\n              const isOnScan = ((_record$scan_type4 = record.scan_type) === null || _record$scan_type4 === void 0 ? void 0 : _record$scan_type4.toUpperCase()) === 'IN';\n              const functionCode = isOnScan ? 'F1-0' : 'F4-0';\n              const status = isOnScan ? 'ON' : 'OFF';\n              const showDate = index === 0;\n              const day = new Date(record.date_).getDate().toString().padStart(2, '0');\n              const month = new Date(record.date_).toLocaleDateString('en-GB', {\n                month: 'short'\n              });\n              const year = new Date(record.date_).getFullYear().toString().slice(-2);\n              const dayName = new Date(record.date_).toLocaleDateString('en-US', {\n                weekday: 'short'\n              });\n              const formattedDate = `${day}-${month}-${year}`;\n              printContent += `\n                <tr>\n                  <td style=\"font-weight: bold; text-align: center;\">${record.employee_ID || record.employee_id || 'N/A'}</td>\n                  <td style=\"text-align: left; padding-left: 8px;\">${record.employee_name || record.name || 'Unknown'}</td>\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\n                  </td>\n                  <td>${record.time_ || ''}</td>\n                  <td class=\"function-col\">${functionCode}</td>\n                  <td style=\"text-align: left; padding-left: 5px;\">${status} Granted(ID & F COM0002)</td>\n                </tr>`;\n            });\n          });\n        } // End of attendance group report\n      } // End of attendance report logic\n\n      printContent += `\n              </tbody>\n            </table>\n            \n            <div class=\"signature-section\">\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">User</div>\n              </div>\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">Date</div>\n              </div>\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">Authorized Signature 1</div>\n              </div>\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">Authorized Signature 2</div>\n              </div>\n            </div>\n          </body>\n        </html>`;\n      console.log('Print content prepared, opening print window...');\n\n      // Open print window\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        throw new Error('Could not open print window. Please check if popup blocker is enabled.');\n      }\n      console.log('Print window opened successfully');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      console.log('Content written to print window');\n\n      // Wait for content to load then print\n      setTimeout(() => {\n        try {\n          printWindow.print();\n          printWindow.close();\n          console.log('Print dialog opened successfully');\n          setError(''); // Clear any previous errors\n        } catch (printErr) {\n          console.error('Error during print:', printErr);\n          printWindow.close();\n          throw new Error('Failed to open print dialog');\n        }\n      }, 250);\n    } catch (err) {\n      console.error('Print error:', err);\n      setError(`Failed to print report: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-generation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-graph-up-arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this), \"Report Generation Center\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header-subtitle\",\n          children: \"Generate comprehensive attendance, meal, and audit reports with advanced filtering and export capabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"controls-title\",\n            children: \"Report Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"controls-subtitle\",\n            children: \"Configure your report parameters and generate detailed analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Report Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"field-input\",\n              value: reportType,\n              onChange: e => setReportType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"attendance\",\n                children: \"\\uD83D\\uDCCA Attendance Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"meal\",\n                children: \"\\uD83C\\uDF7D\\uFE0F Meal Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"audit\",\n                children: \"\\uD83D\\uDD0D Audit Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 15\n            }, this), reportType === 'meal' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field-help\",\n              style: {\n                marginTop: '0.5rem',\n                padding: '0.75rem',\n                backgroundColor: '#e8f4fd',\n                border: '1px solid #bee5eb',\n                borderRadius: '0.375rem',\n                fontSize: '0.875rem',\n                color: '#0c5460'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83C\\uDF7D\\uFE0F Meal Report Instructions:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 842,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  margin: '0.5rem 0 0 0',\n                  paddingLeft: '1.2rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Choose a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Division\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 34\n                  }, this), \" to filter meals by department (or select \\\"All Divisions\\\")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 844,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Pick a \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Date Range\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 32\n                  }, this), \" to analyze meal consumption patterns\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Use \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Quick Date Selection\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 846,\n                    columnNumber: 29\n                  }, this), \" buttons for common date ranges\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Report shows all meal bookings with employee details and meal information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 847,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 13\n          }, this), (reportType === 'attendance' || reportType === 'audit') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Report Scope\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"field-input\",\n              value: reportScope,\n              onChange: e => setReportScope(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"individual\",\n                children: \"\\uD83D\\uDC64 Individual Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 861,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"group\",\n                children: \"\\uD83D\\uDC65 Group Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 862,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this), reportType === 'meal' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Division Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"field-input\",\n              value: divisionId,\n              onChange: e => setDivisionId(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"\\uD83C\\uDFE2 All Divisions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 19\n              }, this), divisions.map(division => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: division.division_id,\n                children: [\"\\uD83D\\uDCCB \", division.division_name]\n              }, division.division_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 15\n          }, this), reportScope === 'group' && reportType === 'attendance' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"Division Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"field-input\",\n                value: divisionId,\n                onChange: e => setDivisionId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"all\",\n                  children: \"\\uD83C\\uDFE2 All Divisions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 21\n                }, this), divisions.map(division => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: division.division_id,\n                  children: [\"\\uD83D\\uDCCB \", division.division_name]\n                }, division.division_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"Section Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"field-input\",\n                value: sectionId,\n                onChange: e => setSectionId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"all\",\n                  children: \"\\uD83C\\uDFE2 All Sections\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 910,\n                  columnNumber: 21\n                }, this), sections.map(section => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: section.section_id,\n                  children: [\"\\uD83D\\uDCCB \", section.section_name, \" \", section.division_name ? `(${section.division_name})` : '']\n                }, section.section_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), reportScope === 'individual' && reportType === 'attendance' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Employee ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"field-input\",\n              placeholder: \"Enter Employee ID (e.g., SA1001, 006, etc.)\",\n              value: employeeId,\n              onChange: e => setEmployeeId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-range-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 936,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"field-input\",\n                value: dateRange.startDate,\n                onChange: e => setDateRange({\n                  ...dateRange,\n                  startDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"field-input\",\n                value: dateRange.endDate,\n                onChange: e => setDateRange({\n                  ...dateRange,\n                  endDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Quick Date Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.5rem',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-secondary btn-sm\",\n                onClick: () => {\n                  const today = new Date().toISOString().split('T')[0];\n                  setDateRange({\n                    startDate: today,\n                    endDate: today\n                  });\n                },\n                children: \"\\uD83D\\uDCC5 Today\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-secondary btn-sm\",\n                onClick: () => {\n                  const today = new Date();\n                  const yesterday = new Date(today);\n                  yesterday.setDate(yesterday.getDate() - 1);\n                  const yesterdayStr = yesterday.toISOString().split('T')[0];\n                  setDateRange({\n                    startDate: yesterdayStr,\n                    endDate: yesterdayStr\n                  });\n                },\n                children: \"\\uD83D\\uDCC6 Yesterday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-secondary btn-sm\",\n                onClick: () => {\n                  const today = new Date();\n                  const weekAgo = new Date(today);\n                  weekAgo.setDate(weekAgo.getDate() - 7);\n                  setDateRange({\n                    startDate: weekAgo.toISOString().split('T')[0],\n                    endDate: today.toISOString().split('T')[0]\n                  });\n                },\n                children: \"\\uD83D\\uDCCA Last 7 Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-outline-secondary btn-sm\",\n                onClick: () => {\n                  const today = new Date();\n                  const monthAgo = new Date(today);\n                  monthAgo.setDate(monthAgo.getDate() - 30);\n                  setDateRange({\n                    startDate: monthAgo.toISOString().split('T')[0],\n                    endDate: today.toISOString().split('T')[0]\n                  });\n                },\n                children: \"\\uD83D\\uDCC8 Last 30 Days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 997,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-section\",\n          children: [(!canGenerate || !canView) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permission-banner\",\n            children: [!canGenerate && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"banner-item\",\n              children: \"You do not have permission to generate reports.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 35\n            }, this), !canView && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"banner-item\",\n              children: \"You do not have permission to view/export reports.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"banner-help\",\n              children: \"Contact a Super Admin for access.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1022,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-exclamation-triangle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1028,\n                columnNumber: 19\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '1rem'\n            },\n            children: [reportData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"export-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"export-btn csv\",\n                onClick: () => {\n                  if (!canView) {\n                    setError('You do not have permission to export reports.');\n                    return;\n                  }\n                  exportReport('csv');\n                },\n                disabled: !canView,\n                title: !canView ? 'No permission to export' : 'Export CSV',\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-filetype-csv\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 21\n                }, this), \"Export CSV\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1037,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"export-btn json\",\n                onClick: () => {\n                  if (!canView) {\n                    setError('You do not have permission to export reports.');\n                    return;\n                  }\n                  exportReport('json');\n                },\n                disabled: !canView,\n                title: !canView ? 'No permission to export' : 'Export JSON',\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-filetype-json\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1052,\n                  columnNumber: 21\n                }, this), \"Export JSON\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: () => {\n                if (!canGenerate) {\n                  setError('You do not have permission to generate reports.');\n                  return;\n                }\n                generateReport();\n              },\n              disabled: loading || !canGenerate,\n              title: !canGenerate ? 'No permission to generate reports' : 'Generate Report',\n              children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-arrow-clockwise spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 21\n                }, this), \"Generating...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-play-fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1071,\n                  columnNumber: 21\n                }, this), \"Generate Report\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1058,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this), reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"results-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-clipboard-data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 17\n            }, this), \"Report Results\", reportScope === 'group' && reportType === 'attendance' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"filter-info\",\n              children: [((_reportData$summary = reportData.summary) === null || _reportData$summary === void 0 ? void 0 : _reportData$summary.division_filter) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"division-info\",\n                children: [\" - \", reportData.summary.division_filter]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1090,\n                columnNumber: 23\n              }, this), ((_reportData$summary2 = reportData.summary) === null || _reportData$summary2 === void 0 ? void 0 : _reportData$summary2.section_filter) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"section-info\",\n                children: [\" - \", reportData.summary.section_filter]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1093,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 19\n            }, this), reportType === 'meal' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"filter-info\",\n              children: divisionId !== 'all' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"division-info\",\n                children: [\" - \", ((_divisions$find = divisions.find(d => d.division_id === divisionId)) === null || _divisions$find === void 0 ? void 0 : _divisions$find.division_name) || `Division ID: ${divisionId}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1101,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [reportType === 'attendance' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: reportScope === 'individual' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data = reportData.data) === null || _reportData$data === void 0 ? void 0 : (_reportData$data$ = _reportData$data[0]) === null || _reportData$data$ === void 0 ? void 0 : _reportData$data$.employee_ID) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1118,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Employee ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1119,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data2 = reportData.data) === null || _reportData$data2 === void 0 ? void 0 : (_reportData$data2$ = _reportData$data2[0]) === null || _reportData$data2$ === void 0 ? void 0 : _reportData$data2$.employee_name) || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1122,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Employee Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1123,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: reportData.summary.total_records\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1126,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Records\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1127,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: `${dateRange.startDate} - ${dateRange.endDate}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1130,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Time Range\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1131,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: divisionId === 'all' ? 'All Divisions' : ((_divisions$find2 = divisions.find(d => d.division_id === divisionId)) === null || _divisions$find2 === void 0 ? void 0 : _divisions$find2.division_name) || `Division ID: ${divisionId}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1138,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Division\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1142,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: sectionId === 'all' ? 'All Sections' : ((_sections$find = sections.find(s => s.section_id === sectionId)) === null || _sections$find === void 0 ? void 0 : _sections$find.section_name) || `Section ID: ${sectionId}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1145,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Section\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1144,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: reportData.summary.total_records\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Records\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1153,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: reportData.summary.unique_employees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1156,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Unique Employees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1157,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false), reportType === 'meal' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: ((_reportData$data3 = reportData.data) === null || _reportData$data3 === void 0 ? void 0 : _reportData$data3.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Total Meals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: reportData.data ? new Set(reportData.data.map(meal => {\n                  var _meal$user;\n                  return ((_meal$user = meal.user) === null || _meal$user === void 0 ? void 0 : _meal$user.employeeId) || meal.employee_id;\n                })).size : 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Unique Employees\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1178,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: ((_reportData$data4 = reportData.data) === null || _reportData$data4 === void 0 ? void 0 : _reportData$data4.filter(meal => (meal.mealType || meal.meal_type) === 'breakfast').length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Breakfast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: ((_reportData$data5 = reportData.data) === null || _reportData$data5 === void 0 ? void 0 : _reportData$data5.filter(meal => (meal.mealType || meal.meal_type) === 'lunch').length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Lunch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1194,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: ((_reportData$data6 = reportData.data) === null || _reportData$data6 === void 0 ? void 0 : _reportData$data6.filter(meal => (meal.mealType || meal.meal_type) === 'dinner').length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1197,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Dinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1202,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: ((_reportData$data7 = reportData.data) === null || _reportData$data7 === void 0 ? void 0 : _reportData$data7.filter(meal => (meal.mealType || meal.meal_type) === 'snack').length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Snacks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1210,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1204,\n              columnNumber: 19\n            }, this), divisionId !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-card\",\n              style: {\n                background: 'linear-gradient(135deg, #e17055 0%, #fdcb6e 100%)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                style: {\n                  fontSize: '0.9rem'\n                },\n                children: ((_divisions$find3 = divisions.find(d => d.division_id === divisionId)) === null || _divisions$find3 === void 0 ? void 0 : _divisions$find3.division_name) || 'Selected Division'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Division Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1218,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-count\",\n              children: [reportData.data.length, \" records\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1229,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1227,\n            columnNumber: 15\n          }, this), reportData.data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"data-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [reportType === 'attendance' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: reportScope === 'individual' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '20%'\n                        },\n                        children: \"PUNCH DATE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1241,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"PUNCH TIME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1242,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"FUNCTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1243,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '20%'\n                        },\n                        children: \"EVENT DESCRIPTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1244,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '30%'\n                        },\n                        children: \"REMARKS\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1245,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"EMP NO\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1249,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '20%'\n                        },\n                        children: \"EMP NAME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1250,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"PUNCH DATE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1251,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"PUNCH TIME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1252,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"FUNCTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1253,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '35%'\n                        },\n                        children: \"EVENT DESCRIPTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1254,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false), reportType === 'meal' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '10%'\n                      },\n                      children: \"EMP NO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1261,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '15%'\n                      },\n                      children: \"EMP NAME\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1262,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '12%'\n                      },\n                      children: \"MEAL DATE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1263,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '10%'\n                      },\n                      children: \"MEAL TIME\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1264,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '12%'\n                      },\n                      children: \"MEAL TYPE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1265,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '12%'\n                      },\n                      children: \"LOCATION\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1266,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '8%'\n                      },\n                      children: \"QUANTITY\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1267,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      style: {\n                        width: '21%'\n                      },\n                      children: \"ITEMS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1268,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1236,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [reportType === 'attendance' && (() => {\n                  if (reportScope === 'individual') {\n                    // Individual report - show by date without employee columns\n                    const groupedData = {};\n                    reportData.data.forEach(record => {\n                      const dateKey = record.date_;\n                      if (!groupedData[dateKey]) {\n                        groupedData[dateKey] = [];\n                      }\n                      groupedData[dateKey].push(record);\n                    });\n                    const sortedDates = Object.keys(groupedData).sort();\n                    const rows = [];\n                    sortedDates.forEach(dateKey => {\n                      const records = groupedData[dateKey];\n                      // Sort records by time only for individual reports\n                      records.sort((a, b) => {\n                        const aTime = String(a.time_ || '');\n                        const bTime = String(b.time_ || '');\n                        return aTime.localeCompare(bTime);\n                      });\n                      records.forEach((record, index) => {\n                        var _record$scan_type5, _record$scan_type6;\n                        const showDate = index === 0;\n                        const date = new Date(record.date_);\n                        const day = date.getDate().toString().padStart(2, '0');\n                        const month = date.toLocaleDateString('en-GB', {\n                          month: 'short'\n                        });\n                        const year = date.getFullYear().toString().slice(-2);\n                        const weekday = date.toLocaleDateString('en-GB', {\n                          weekday: 'short'\n                        });\n                        const formattedDate = `${day}-${month}-${year}`;\n                        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: showDate ? 'date-group-row' : 'time-row',\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            className: showDate ? 'date-cell-with-data' : 'date-cell-empty',\n                            children: showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"date-line\",\n                                children: formattedDate\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1312,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"weekday-line\",\n                                children: weekday\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1313,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1311,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1309,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"time-column\",\n                            children: record.time_\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1317,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"function-column\",\n                            children: ((_record$scan_type5 = record.scan_type) === null || _record$scan_type5 === void 0 ? void 0 : _record$scan_type5.toUpperCase()) === 'IN' ? 'F1-0' : 'F4-0'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1318,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"event-description\",\n                            children: ((_record$scan_type6 = record.scan_type) === null || _record$scan_type6 === void 0 ? void 0 : _record$scan_type6.toUpperCase()) === 'IN' ? 'ON' : 'OFF'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1321,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"remarks-column\",\n                            children: \"Granted(ID & F) COM0002\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1324,\n                            columnNumber: 35\n                          }, this)]\n                        }, `${dateKey}-${index}`, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1308,\n                          columnNumber: 33\n                        }, this));\n                      });\n                    });\n                    return rows;\n                  } else {\n                    // Group report - show with employee columns\n                    const groupedData = {};\n                    reportData.data.forEach(record => {\n                      const dateKey = record.date_;\n                      if (!groupedData[dateKey]) {\n                        groupedData[dateKey] = [];\n                      }\n                      groupedData[dateKey].push(record);\n                    });\n                    const sortedDates = Object.keys(groupedData).sort();\n                    const rows = [];\n                    sortedDates.forEach(dateKey => {\n                      const records = groupedData[dateKey];\n                      // Sort records by employee ID first, then by time\n                      records.sort((a, b) => {\n                        const aEmpId = String(a.employee_ID || a.employee_id || '');\n                        const bEmpId = String(b.employee_ID || b.employee_id || '');\n                        const empCompare = aEmpId.localeCompare(bEmpId);\n                        if (empCompare !== 0) return empCompare;\n                        const aTime = String(a.time_ || '');\n                        const bTime = String(b.time_ || '');\n                        return aTime.localeCompare(bTime);\n                      });\n                      records.forEach((record, index) => {\n                        var _record$scan_type7, _record$scan_type8;\n                        const showDate = index === 0;\n                        const date = new Date(record.date_);\n                        const day = date.getDate().toString().padStart(2, '0');\n                        const month = date.toLocaleDateString('en-GB', {\n                          month: 'short'\n                        });\n                        const year = date.getFullYear().toString().slice(-2);\n                        const weekday = date.toLocaleDateString('en-GB', {\n                          weekday: 'short'\n                        });\n                        const formattedDate = `${day}-${month}-${year}`;\n                        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: showDate ? 'date-group-row' : 'time-row',\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"employee-id-column\",\n                            style: {\n                              fontWeight: 'bold',\n                              textAlign: 'center'\n                            },\n                            children: record.employee_ID || record.employee_id || 'N/A'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1368,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"employee-name-column\",\n                            style: {\n                              textAlign: 'left',\n                              paddingLeft: '8px'\n                            },\n                            children: record.employee_name || record.name || 'Unknown'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1371,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: showDate ? 'date-cell-with-data' : 'date-cell-empty',\n                            children: showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"date-line\",\n                                children: formattedDate\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1377,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"weekday-line\",\n                                children: weekday\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1378,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1376,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1374,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"time-column\",\n                            children: record.time_\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1382,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"function-column\",\n                            children: ((_record$scan_type7 = record.scan_type) === null || _record$scan_type7 === void 0 ? void 0 : _record$scan_type7.toUpperCase()) === 'IN' ? 'F1-0' : 'F4-0'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1383,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"event-description\",\n                            style: {\n                              textAlign: 'left',\n                              paddingLeft: '5px'\n                            },\n                            children: [((_record$scan_type8 = record.scan_type) === null || _record$scan_type8 === void 0 ? void 0 : _record$scan_type8.toUpperCase()) === 'IN' ? 'ON' : 'OFF', \"  Granted(ID & F COM0002)\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1386,\n                            columnNumber: 35\n                          }, this)]\n                        }, `${dateKey}-${index}`, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1367,\n                          columnNumber: 33\n                        }, this));\n                      });\n                    });\n                    return rows;\n                  }\n                })(), reportType === 'meal' && (() => {\n                  // Meal report - show with employee columns\n                  const rows = [];\n                  reportData.data.forEach((record, index) => {\n                    var _record$user7, _record$user8, _record$user9, _record$items7, _record$items8;\n                    const date = new Date(record.date || record.meal_date || record.mealTime);\n                    const day = date.getDate().toString().padStart(2, '0');\n                    const month = date.toLocaleDateString('en-GB', {\n                      month: 'short'\n                    });\n                    const year = date.getFullYear().toString().slice(-2);\n                    const formattedDate = `${day}-${month}-${year}`;\n                    rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"employee-id-column\",\n                        style: {\n                          fontWeight: 'bold',\n                          textAlign: 'center'\n                        },\n                        children: ((_record$user7 = record.user) === null || _record$user7 === void 0 ? void 0 : _record$user7.employeeId) || record.employee_id || 'N/A'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1409,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"employee-name-column\",\n                        style: {\n                          textAlign: 'left',\n                          paddingLeft: '8px'\n                        },\n                        children: (_record$user8 = record.user) !== null && _record$user8 !== void 0 && _record$user8.firstName && (_record$user9 = record.user) !== null && _record$user9 !== void 0 && _record$user9.lastName ? `${record.user.firstName} ${record.user.lastName}` : record.employee_name || 'Unknown'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1412,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"date-cell\",\n                        style: {\n                          textAlign: 'center'\n                        },\n                        children: formattedDate\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1417,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"time-column\",\n                        style: {\n                          textAlign: 'center'\n                        },\n                        children: new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n                          hour: '2-digit',\n                          minute: '2-digit'\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1420,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"meal-type-column\",\n                        style: {\n                          textAlign: 'center',\n                          textTransform: 'capitalize'\n                        },\n                        children: record.mealType || record.meal_type\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1425,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"location-column\",\n                        style: {\n                          textAlign: 'center',\n                          textTransform: 'capitalize'\n                        },\n                        children: record.location || 'Cafeteria'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1428,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"quantity-column\",\n                        style: {\n                          textAlign: 'center',\n                          fontWeight: 'bold'\n                        },\n                        children: ((_record$items7 = record.items) === null || _record$items7 === void 0 ? void 0 : _record$items7.reduce((total, item) => total + item.quantity, 0)) || 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1431,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        className: \"items-column\",\n                        style: {\n                          fontSize: '0.8rem'\n                        },\n                        children: ((_record$items8 = record.items) === null || _record$items8 === void 0 ? void 0 : _record$items8.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1434,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1408,\n                      columnNumber: 29\n                    }, this));\n                  });\n                  return rows;\n                })()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1273,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 19\n            }, this), reportData.data.length > 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination-info\",\n              children: [\"Showing first 100 records of \", reportData.data.length, \" total records. Use export function to download complete data.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1446,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-inbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1455,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1454,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"empty-title\",\n              children: \"No Data Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1457,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-text\",\n              children: \"No records found for the selected criteria. Try adjusting your filters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1458,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 11\n      }, this) : !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-results\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-file-earmark-bar-graph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1467,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"empty-title\",\n            children: \"Ready to Generate Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-text\",\n            children: \"Configure your report parameters above and click \\\"Generate Report\\\" to start.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1465,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 798,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportGeneration, \"BM16Q4axBv5xdPzPeXe4Y6jn7EI=\", false, function () {\n  return [usePermission, usePermission];\n});\n_c = ReportGeneration;\nexport default ReportGeneration;\nvar _c;\n$RefreshReg$(_c, \"ReportGeneration\");","map":{"version":3,"names":["React","useState","useEffect","usePermission","jsxDEV","_jsxDEV","Fragment","_Fragment","ReportGeneration","_s","_reportData$summary","_reportData$summary2","_divisions$find","_reportData$data","_reportData$data$","_reportData$data2","_reportData$data2$","_divisions$find2","_sections$find","_reportData$data3","_reportData$data4","_reportData$data5","_reportData$data6","_reportData$data7","_divisions$find3","reportType","setReportType","reportScope","setReportScope","employeeId","setEmployeeId","divisionId","setDivisionId","sectionId","setSectionId","divisions","setDivisions","sections","setSections","allSections","setAllSections","dateRange","setDateRange","startDate","endDate","loading","setLoading","reportData","setReportData","error","setError","canGenerate","canView","fetchDivisions","fetchAllSections","today","Date","toISOString","split","fetchSectionsByDivision","token","localStorage","getItem","response","fetch","headers","ok","data","json","err","console","generateReport","log","endpoint","requestData","from_date","to_date","report_type","employee_id","division_id","section_id","filters","groupBy","method","body","JSON","stringify","status","success","message","exportReport","format","length","exportToCSV","exportToJSON","getCSVHeaders","rows","map","record","getCSVRow","csvContent","row","field","join","downloadFile","jsonData","generatedAt","summary","_record$items","_record$items2","_record$user","_record$user2","_record$user3","items","item","name","quantity","reduce","total","mealTime","meal_time","toLocaleTimeString","hour","minute","date","meal_date","mealType","meal_type","location","user","employee_name","firstName","lastName","_record$scan_type","_record$scan_type2","date_","time_","scan_type","toUpperCase","employee_ID","content","filename","contentType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","printReport","firstRecord","isIndividualReport","groupedData","forEach","push","printContent","toLocaleDateString","day","month","year","second","mealGroupedData","dateKey","sortedDates","Object","keys","sort","records","getDate","toString","padStart","getFullYear","slice","dayName","weekday","formattedDate","a","b","aTime","getTime","bTime","index","_record$items3","_record$items4","showDate","_record$items5","_record$items6","_record$user4","_record$user5","_record$user6","empName","localeCompare","_record$scan_type3","isOnScan","functionCode","aEmpId","String","bEmpId","empCompare","_record$scan_type4","printWindow","open","Error","write","close","setTimeout","print","printErr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","style","marginTop","padding","backgroundColor","border","borderRadius","fontSize","color","margin","paddingLeft","division","division_name","section","section_name","placeholder","display","gap","flexWrap","onClick","yesterday","setDate","yesterdayStr","weekAgo","monthAgo","alignItems","disabled","title","division_filter","section_filter","find","d","total_records","s","unique_employees","Set","meal","_meal$user","size","filter","background","width","_record$scan_type5","_record$scan_type6","_record$scan_type7","_record$scan_type8","fontWeight","textAlign","_record$user7","_record$user8","_record$user9","_record$items7","_record$items8","textTransform","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/ReportGeneration.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport usePermission from '../../hooks/usePermission';\r\nimport './ReportGeneration.css';\r\n\r\nconst ReportGeneration = () => {\r\n  const [reportType, setReportType] = useState('attendance');\r\n  const [reportScope, setReportScope] = useState('individual');\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [divisionId, setDivisionId] = useState('all');\r\n  const [sectionId, setSectionId] = useState('all');\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [sections, setSections] = useState([]);\r\n  const [allSections, setAllSections] = useState([]);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [reportData, setReportData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  // permission checks\r\n  const canGenerate = usePermission('reports', 'create');\r\n  const canView = usePermission('reports', 'read');\r\n\r\n  // Fetch divisions and sections on component mount\r\n  useEffect(() => {\r\n    fetchDivisions();\r\n    fetchAllSections();\r\n    \r\n    // Set default date range to today\r\n    const today = new Date().toISOString().split('T')[0];\r\n    setDateRange({\r\n      startDate: today,\r\n      endDate: today\r\n    });\r\n  }, []);\r\n\r\n  // Fetch sections when division changes\r\n  useEffect(() => {\r\n    if (divisionId && divisionId !== 'all') {\r\n      fetchSectionsByDivision(divisionId);\r\n    } else {\r\n      setSections(allSections);\r\n      setSectionId('all');\r\n    }\r\n  }, [divisionId, allSections]);\r\n\r\n  const fetchDivisions = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/mysql/divisions', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDivisions(data.divisions || []);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching divisions:', err);\r\n    }\r\n  };\r\n\r\n  const fetchAllSections = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/mysql/sections', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAllSections(data.sections || []);\r\n        setSections(data.sections || []);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching sections:', err);\r\n    }\r\n  };\r\n\r\n  const fetchSectionsByDivision = async (divisionId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000/api/mysql/sections?division_id=${divisionId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSections(data.sections || []);\r\n        setSectionId('all'); // Reset section selection\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching sections by division:', err);\r\n    }\r\n  };\r\n\r\n  const generateReport = async () => {\r\n    if (!dateRange.startDate || !dateRange.endDate) {\r\n      setError('Please select both start and end dates');\r\n      return;\r\n    }\r\n\r\n    if (reportScope === 'individual' && !employeeId && reportType === 'attendance') {\r\n      setError(`Please enter Employee ID for individual ${reportType} reports`);\r\n      return;\r\n    }\r\n\r\n    console.log('Generating report with:', {\r\n      reportType,\r\n      reportScope,\r\n      employeeId,\r\n      divisionId,\r\n      sectionId,\r\n      dateRange\r\n    });\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setReportData(null);\r\n\r\n    try {\r\n      let endpoint = '';\r\n      let requestData = {\r\n        from_date: dateRange.startDate,\r\n        to_date: dateRange.endDate,\r\n        report_type: reportScope\r\n      };\r\n\r\n      // Add employee ID for individual reports\r\n      if (reportScope === 'individual' && employeeId) {\r\n        requestData.employee_id = employeeId;\r\n      }\r\n\r\n      // Add division and section filters for group attendance reports\r\n      if (reportScope === 'group' && reportType === 'attendance') {\r\n        if (divisionId && divisionId !== 'all') {\r\n          requestData.division_id = divisionId;\r\n        }\r\n        if (sectionId && sectionId !== 'all') {\r\n          requestData.section_id = sectionId;\r\n        }\r\n      }\r\n\r\n      // Determine endpoint based on report type\r\n      switch (reportType) {\r\n        case 'attendance':\r\n          endpoint = '/api/reports/mysql/attendance';\r\n          break;\r\n        case 'meal':\r\n          endpoint = '/api/reports/meal';\r\n          requestData = {\r\n            startDate: dateRange.startDate,\r\n            endDate: dateRange.endDate,\r\n            filters: {},\r\n            groupBy: 'date'\r\n          };\r\n          // Add division filter for meal reports\r\n          if (divisionId && divisionId !== 'all') {\r\n            requestData.filters.divisionId = divisionId;\r\n          }\r\n          break;\r\n        case 'audit':\r\n          endpoint = '/api/reports/audit';\r\n          break;\r\n        default:\r\n          endpoint = '/api/reports/mysql/attendance';\r\n      }\r\n\r\n      console.log('Making request to:', `http://localhost:5000${endpoint}`);\r\n      console.log('Request data:', requestData);\r\n\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(requestData)\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Response:', { status: response.status, data });\r\n\r\n      if (response.ok && data.success) {\r\n        setReportData(data);\r\n        console.log('Report generated successfully:', data);\r\n      } else {\r\n        setError(data.message || 'Failed to generate report');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Report generation error:', err);\r\n      setError('Network error occurred while generating report');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportReport = (format) => {\r\n    console.log('Export function called with format:', format);\r\n    console.log('Report data:', reportData);\r\n    console.log('Report scope:', reportScope);\r\n    \r\n    if (!reportData || !reportData.data) {\r\n      console.error('No report data available for export');\r\n      setError('No data to export. Please generate a report first.');\r\n      return;\r\n    }\r\n\r\n    if (!reportData.data.length) {\r\n      console.error('Empty report data');\r\n      setError('No records found to export');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (format === 'csv') {\r\n        exportToCSV();\r\n      } else if (format === 'json') {\r\n        exportToJSON();\r\n      }\r\n    } catch (error) {\r\n      console.error('Export error:', error);\r\n      setError('Error occurred while exporting data');\r\n    }\r\n  };\r\n\r\n  const exportToCSV = () => {\r\n    const headers = getCSVHeaders();\r\n    const rows = reportData.data.map(record => getCSVRow(record));\r\n    \r\n    const csvContent = [headers, ...rows]\r\n      .map(row => row.map(field => `\"${field}\"`).join(','))\r\n      .join('\\n');\r\n    \r\n    downloadFile(csvContent, `${reportType}_report_${new Date().toISOString().split('T')[0]}.csv`, 'text/csv');\r\n  };\r\n\r\n  const exportToJSON = () => {\r\n    const jsonData = {\r\n      reportType,\r\n      reportScope,\r\n      dateRange,\r\n      generatedAt: new Date().toISOString(),\r\n      summary: reportData.summary,\r\n      data: reportData.data\r\n    };\r\n    \r\n    downloadFile(JSON.stringify(jsonData, null, 2), `${reportType}_report_${new Date().toISOString().split('T')[0]}.json`, 'application/json');\r\n  };\r\n\r\n  const getCSVHeaders = () => {\r\n    if (reportType === 'meal') {\r\n      return reportScope === 'individual' \r\n        ? ['Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items']\r\n        : ['Employee ID', 'Employee Name', 'Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items'];\r\n    } else {\r\n      return reportScope === 'individual'\r\n        ? ['Date', 'Time', 'Scan Type', 'Status']\r\n        : ['Employee ID', 'Employee Name', 'Date', 'Time', 'Scan Type', 'Status'];\r\n    }\r\n  };\r\n\r\n  const getCSVRow = (record) => {\r\n    if (reportType === 'meal') {\r\n      const items = record.items?.map(item => `${item.name} (${item.quantity})`).join('; ') || 'Standard Meal';\r\n      const quantity = record.items?.reduce((total, item) => total + item.quantity, 0) || 1;\r\n      const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit' });\r\n      \r\n      return reportScope === 'individual'\r\n        ? [record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items]\r\n        : [record.employee_id || record.user?.employeeId, record.employee_name || `${record.user?.firstName} ${record.user?.lastName}`, record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items];\r\n    } else {\r\n      return reportScope === 'individual'\r\n        ? [record.date_, record.time_, record.scan_type, record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF']\r\n        : [record.employee_ID, record.employee_name, record.date_, record.time_, record.scan_type, record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF'];\r\n    }\r\n  };\r\n\r\n  const downloadFile = (content, filename, contentType) => {\r\n    const blob = new Blob([content], { type: contentType });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const printReport = () => {\r\n    console.log('Print function called');\r\n    console.log('Report data:', reportData);\r\n    console.log('Report scope:', reportScope);\r\n    \r\n    if (!reportData || !reportData.data) {\r\n      console.error('No report data available for printing');\r\n      setError('No data to print. Please generate a report first.');\r\n      return;\r\n    }\r\n\r\n    if (!reportData.data.length) {\r\n      console.error('Empty report data');\r\n      setError('No records found to print');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Starting print process...');\r\n      // Get employee info from first record for individual reports\r\n      const firstRecord = reportData.data[0];\r\n      const isIndividualReport = reportScope === 'individual';\r\n      \r\n      console.log('First record:', firstRecord);\r\n      console.log('Is individual report:', isIndividualReport);\r\n      \r\n      // Group data by date for individual reports\r\n      const groupedData = {};\r\n      if (isIndividualReport) {\r\n        reportData.data.forEach(record => {\r\n          const date = record.date_;\r\n          if (!groupedData[date]) {\r\n            groupedData[date] = [];\r\n          }\r\n          groupedData[date].push(record);\r\n        });\r\n      }\r\n\r\n      // Create print content matching the image format\r\n      let printContent = `\r\n        <html>\r\n          <head>\r\n            <title>Attendance Report</title>\r\n            <style>\r\n              @page {\r\n                margin: 0.5in;\r\n                size: A4;\r\n              }\r\n              \r\n              body { \r\n                font-family: 'Courier New', monospace;\r\n                margin: 0;\r\n                padding: 0;\r\n                font-size: 11px;\r\n                line-height: 1.2;\r\n                color: #000;\r\n                -webkit-print-color-adjust: exact;\r\n                print-color-adjust: exact;\r\n              }\r\n              \r\n              .report-header { \r\n                margin-bottom: 15px;\r\n              }\r\n              \r\n              .report-title {\r\n                font-weight: bold;\r\n                font-size: 14px;\r\n                margin-bottom: 3px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .report-subtitle {\r\n                font-size: 11px;\r\n                margin-bottom: 10px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .header-info {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                margin-bottom: 10px;\r\n              }\r\n              \r\n              .left-info, .right-info {\r\n                font-size: 10px;\r\n              }\r\n              \r\n              .employee-info {\r\n                margin-bottom: 10px;\r\n                font-size: 11px;\r\n              }\r\n              \r\n              .date-range {\r\n                margin-bottom: 15px;\r\n                font-size: 11px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .data-table { \r\n                width: 100%;\r\n                border-collapse: collapse;\r\n                font-size: 10px;\r\n                margin-bottom: 20px;\r\n                border: 1px solid #000;\r\n                table-layout: fixed;\r\n              }\r\n              \r\n              .data-table th { \r\n                border: 1px solid #000;\r\n                padding: 4px 6px;\r\n                text-align: center;\r\n                font-weight: bold;\r\n                background: #f5f5f5;\r\n                font-size: 10px;\r\n              }\r\n              \r\n              .data-table td { \r\n                border: 1px solid #000;\r\n                padding: 4px 6px;\r\n                text-align: center;\r\n                margin: 0;\r\n                vertical-align: top;\r\n                font-size: 10px;\r\n              }\r\n              \r\n              .date-cell {\r\n                text-align: left;\r\n                vertical-align: top;\r\n                padding: 4px 6px;\r\n                font-weight: bold;\r\n                line-height: 1.2;\r\n              }\r\n              \r\n              .date-cell-empty {\r\n                padding: 4px 6px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .function-col {\r\n                text-align: center;\r\n                font-weight: bold;\r\n              }\r\n              \r\n              .on-status {\r\n                font-weight: bold;\r\n              }\r\n              \r\n              .off-status {\r\n                font-weight: bold;\r\n              }\r\n              \r\n              .signature-section {\r\n                margin-top: 50px;\r\n                display: flex;\r\n                justify-content: space-between;\r\n                font-size: 10px;\r\n                align-items: flex-end;\r\n              }\r\n              \r\n              .signature-block {\r\n                text-align: center;\r\n                min-width: 150px;\r\n              }\r\n              \r\n              .signature-line {\r\n                border-bottom: 1px solid #000;\r\n                height: 40px;\r\n                margin-bottom: 5px;\r\n                width: 100%;\r\n              }\r\n              \r\n              .signature-label {\r\n                font-size: 10px;\r\n                font-weight: normal;\r\n              }\r\n            </style>\r\n          </head>\r\n          <body>\r\n            <div class=\"report-header\">\r\n              <div class=\"report-title\">${\r\n                reportType === 'meal' \r\n                  ? (isIndividualReport ? 'Individual Meal Report' : 'Group Meal Report')\r\n                  : (isIndividualReport ? 'Unit Attendance Report' : 'Group Attendance Report')\r\n              }</div>\r\n              <div class=\"report-subtitle\">${\r\n                reportType === 'meal' \r\n                  ? 'All Meal Consumption Records'\r\n                  : 'All Granted(ID & FP) Records'\r\n              }</div>\r\n              \r\n              <div class=\"header-info\">\r\n                <div class=\"left-info\">`;\r\n\r\n      if (isIndividualReport && firstRecord) {\r\n        printContent += `\r\n                  <div>Emp No :- ${firstRecord.employee_ID || 'N/A'}</div>\r\n                  <div>Emp Name :- ${firstRecord.employee_name || 'Unknown'}</div>`;\r\n      }\r\n\r\n      printContent += `\r\n                </div>\r\n                <div class=\"right-info\">\r\n                  <div>Printed Date : ${new Date().toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' })}</div>\r\n                  <div>Printed Time : ${new Date().toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit', second: '2-digit' })}</div>\r\n                  <div>Page 1 of 1</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"date-range\">\r\n                <strong>Date From</strong> ${new Date(dateRange.startDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' })} \r\n                <strong style=\"margin-left: 40px;\">To</strong> ${new Date(dateRange.endDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' })}\r\n              </div>\r\n            </div>`;\r\n\r\n      // Create table with proper format\r\n      printContent += `\r\n            <table class=\"data-table\">\r\n              <thead>\r\n                <tr>`;\r\n      \r\n      if (reportType === 'meal') {\r\n        if (isIndividualReport) {\r\n          printContent += `\r\n                    <th style=\"width: 15%;\">Date</th>\r\n                    <th style=\"width: 12%;\">Time</th>\r\n                    <th style=\"width: 15%;\">Meal Type</th>\r\n                    <th style=\"width: 18%;\">Location</th>\r\n                    <th style=\"width: 10%;\">Quantity</th>\r\n                    <th style=\"width: 30%;\">Items</th>`;\r\n        } else {\r\n          printContent += `\r\n                    <th style=\"width: 10%;\">Emp No</th>\r\n                    <th style=\"width: 15%;\">Emp Name</th>\r\n                    <th style=\"width: 12%;\">Date</th>\r\n                    <th style=\"width: 10%;\">Time</th>\r\n                    <th style=\"width: 12%;\">Meal Type</th>\r\n                    <th style=\"width: 12%;\">Location</th>\r\n                    <th style=\"width: 8%;\">Quantity</th>\r\n                    <th style=\"width: 21%;\">Items</th>`;\r\n        }\r\n      } else {\r\n        if (isIndividualReport) {\r\n          printContent += `\r\n                    <th style=\"width: 18%;\">Date</th>\r\n                    <th style=\"width: 12%;\">Time</th>\r\n                    <th style=\"width: 10%;\">Function</th>\r\n                    <th style=\"width: 20%;\">Status</th>\r\n                    <th style=\"width: 40%;\">Verification</th>`;\r\n        } else {\r\n          printContent += `\r\n                    <th style=\"width: 12%;\">Emp No</th>\r\n                    <th style=\"width: 20%;\">Emp Name</th>\r\n                    <th style=\"width: 15%;\">Date</th>\r\n                    <th style=\"width: 10%;\">Time</th>\r\n                    <th style=\"width: 8%;\">Function</th>\r\n                    <th style=\"width: 35%;\">Event Description</th>`;\r\n        }\r\n      }\r\n      \r\n      printContent += `\r\n                </tr>\r\n              </thead>\r\n              <tbody>`;\r\n\r\n      if (reportType === 'meal') {\r\n        if (isIndividualReport) {\r\n          // For individual meal reports, group by date\r\n          const mealGroupedData = {};\r\n          reportData.data.forEach(record => {\r\n            const dateKey = record.date || record.meal_date || record.mealTime;\r\n            if (!mealGroupedData[dateKey]) {\r\n              mealGroupedData[dateKey] = [];\r\n            }\r\n            mealGroupedData[dateKey].push(record);\r\n          });\r\n\r\n          const sortedDates = Object.keys(mealGroupedData).sort();\r\n          \r\n          sortedDates.forEach(date => {\r\n            const records = mealGroupedData[date];\r\n            const day = new Date(date).getDate().toString().padStart(2, '0');\r\n            const month = new Date(date).toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = new Date(date).getFullYear().toString().slice(-2);\r\n            const dayName = new Date(date).toLocaleDateString('en-US', { weekday: 'short' });\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            // Sort records by time for each date\r\n            records.sort((a, b) => {\r\n              const aTime = new Date(a.mealTime || a.meal_time).getTime();\r\n              const bTime = new Date(b.mealTime || b.meal_time).getTime();\r\n              return aTime - bTime;\r\n            });\r\n            \r\n            records.forEach((record, index) => {\r\n              const showDate = index === 0;\r\n              const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { \r\n                hour: '2-digit', minute: '2-digit' \r\n              });\r\n              const items = record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal';\r\n              const quantity = record.items?.reduce((total, item) => total + item.quantity, 0) || 1;\r\n              \r\n              printContent += `\r\n                  <tr>\r\n                    <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\r\n                      ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\r\n                    </td>\r\n                    <td style=\"text-align: center;\">${mealTime}</td>\r\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\r\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\r\n                    <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\r\n                    <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\r\n                  </tr>`;\r\n            });\r\n          });\r\n        } else {\r\n          // For group meal reports, show all records with employee info\r\n          reportData.data.forEach((record, index) => {\r\n            const date = new Date(record.date || record.meal_date || record.mealTime);\r\n            const day = date.getDate().toString().padStart(2, '0');\r\n            const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = date.getFullYear().toString().slice(-2);\r\n            const dayName = date.toLocaleDateString('en-US', { weekday: 'short' });\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { \r\n              hour: '2-digit', minute: '2-digit' \r\n            });\r\n            const items = record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal';\r\n            const quantity = record.items?.reduce((total, item) => total + item.quantity, 0) || 1;\r\n            const empName = record.user?.firstName && record.user?.lastName \r\n              ? `${record.user.firstName} ${record.user.lastName}`\r\n              : record.employee_name || 'Unknown';\r\n            \r\n            printContent += `\r\n                <tr>\r\n                  <td style=\"font-weight: bold; text-align: center;\">${record.user?.employeeId || record.employee_id || 'N/A'}</td>\r\n                  <td style=\"text-align: left; padding-left: 8px;\">${empName}</td>\r\n                  <td style=\"text-align: center;\">${formattedDate}<br/>${dayName}</td>\r\n                  <td style=\"text-align: center;\">${mealTime}</td>\r\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\r\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\r\n                  <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\r\n                  <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\r\n                </tr>`;\r\n          });\r\n        }\r\n      } else {\r\n        // Attendance report logic\r\n        if (isIndividualReport) {\r\n          // Sort dates and group data properly\r\n          const sortedDates = Object.keys(groupedData).sort();\r\n          \r\n          sortedDates.forEach(date => {\r\n            const records = groupedData[date];\r\n            const dayName = new Date(date).toLocaleDateString('en-US', { weekday: 'long' });\r\n            const day = new Date(date).getDate().toString().padStart(2, '0');\r\n            const month = new Date(date).toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = new Date(date).getFullYear().toString().slice(-2);\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            // Sort records by time for each date\r\n            records.sort((a, b) => (a.time_ || '').localeCompare(b.time_ || ''));\r\n            \r\n            records.forEach((record, index) => {\r\n              const isOnScan = record.scan_type?.toUpperCase() === 'IN';\r\n              const functionCode = isOnScan ? 'F1-0' : 'F4-0';\r\n              const status = isOnScan ? 'ON' : 'OFF';\r\n              const showDate = index === 0; // Only show date on first row for each date group\r\n            \r\n            printContent += `\r\n                <tr>\r\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\r\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\r\n                  </td>\r\n                  <td>${record.time_ || ''}</td>\r\n                  <td class=\"function-col\">${functionCode}</td>\r\n                  <td class=\"${isOnScan ? 'on-status' : 'off-status'}\">${status}</td>\r\n                  <td>Granted(ID & F) COM0002</td>\r\n                </tr>`;\r\n          });\r\n        });\r\n      } else {\r\n        // Group report - group by date and show employee details\r\n        const groupedData = {};\r\n        reportData.data.forEach(record => {\r\n          const dateKey = record.date_;\r\n          if (!groupedData[dateKey]) {\r\n            groupedData[dateKey] = [];\r\n          }\r\n          groupedData[dateKey].push(record);\r\n        });\r\n\r\n        const sortedDates = Object.keys(groupedData).sort();\r\n        \r\n        sortedDates.forEach(dateKey => {\r\n          const records = groupedData[dateKey];\r\n          records.sort((a, b) => {\r\n            // Sort by employee ID first, then by time\r\n            const aEmpId = String(a.employee_ID || a.employee_id || '');\r\n            const bEmpId = String(b.employee_ID || b.employee_id || '');\r\n            const empCompare = aEmpId.localeCompare(bEmpId);\r\n            if (empCompare !== 0) return empCompare;\r\n            const aTime = String(a.time_ || '');\r\n            const bTime = String(b.time_ || '');\r\n            return aTime.localeCompare(bTime);\r\n          });\r\n          \r\n          records.forEach((record, index) => {\r\n            const isOnScan = record.scan_type?.toUpperCase() === 'IN';\r\n            const functionCode = isOnScan ? 'F1-0' : 'F4-0';\r\n            const status = isOnScan ? 'ON' : 'OFF';\r\n            const showDate = index === 0;\r\n            \r\n            const day = new Date(record.date_).getDate().toString().padStart(2, '0');\r\n            const month = new Date(record.date_).toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = new Date(record.date_).getFullYear().toString().slice(-2);\r\n            const dayName = new Date(record.date_).toLocaleDateString('en-US', { weekday: 'short' });\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            printContent += `\r\n                <tr>\r\n                  <td style=\"font-weight: bold; text-align: center;\">${record.employee_ID || record.employee_id || 'N/A'}</td>\r\n                  <td style=\"text-align: left; padding-left: 8px;\">${record.employee_name || record.name || 'Unknown'}</td>\r\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\r\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\r\n                  </td>\r\n                  <td>${record.time_ || ''}</td>\r\n                  <td class=\"function-col\">${functionCode}</td>\r\n                  <td style=\"text-align: left; padding-left: 5px;\">${status} Granted(ID & F COM0002)</td>\r\n                </tr>`;\r\n          });\r\n        });\r\n        } // End of attendance group report\r\n      } // End of attendance report logic\r\n\r\n      printContent += `\r\n              </tbody>\r\n            </table>\r\n            \r\n            <div class=\"signature-section\">\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">User</div>\r\n              </div>\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">Date</div>\r\n              </div>\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">Authorized Signature 1</div>\r\n              </div>\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">Authorized Signature 2</div>\r\n              </div>\r\n            </div>\r\n          </body>\r\n        </html>`;\r\n\r\n      console.log('Print content prepared, opening print window...');\r\n      \r\n      // Open print window\r\n      const printWindow = window.open('', '_blank');\r\n      \r\n      if (!printWindow) {\r\n        throw new Error('Could not open print window. Please check if popup blocker is enabled.');\r\n      }\r\n      \r\n      console.log('Print window opened successfully');\r\n      \r\n      printWindow.document.write(printContent);\r\n      printWindow.document.close();\r\n      \r\n      console.log('Content written to print window');\r\n      \r\n      // Wait for content to load then print\r\n      setTimeout(() => {\r\n        try {\r\n          printWindow.print();\r\n          printWindow.close();\r\n          console.log('Print dialog opened successfully');\r\n          setError(''); // Clear any previous errors\r\n        } catch (printErr) {\r\n          console.error('Error during print:', printErr);\r\n          printWindow.close();\r\n          throw new Error('Failed to open print dialog');\r\n        }\r\n      }, 250);\r\n\r\n    } catch (err) {\r\n      console.error('Print error:', err);\r\n      setError(`Failed to print report: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-generation\">\r\n      {/* Header Section */}\r\n      <div className=\"report-header\">\r\n        <div className=\"header-content\">\r\n          <h1>\r\n            <i className=\"bi bi-graph-up-arrow\"></i>\r\n            Report Generation Center\r\n          </h1>\r\n          <p className=\"header-subtitle\">\r\n            Generate comprehensive attendance, meal, and audit reports with advanced filtering and export capabilities\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"report-container\">\r\n        {/* Report Controls */}\r\n        <div className=\"report-controls\">\r\n          <div className=\"controls-header\">\r\n            <h2 className=\"controls-title\">Report Configuration</h2>\r\n            <p className=\"controls-subtitle\">Configure your report parameters and generate detailed analytics</p>\r\n          </div>\r\n\r\n          <div className=\"form-grid\">\r\n            <div className=\"form-field\">\r\n              <label className=\"field-label\">Report Type</label>\r\n              <select \r\n                className=\"field-input\"\r\n                value={reportType}\r\n                onChange={(e) => setReportType(e.target.value)}\r\n              >\r\n                <option value=\"attendance\">📊 Attendance Report</option>\r\n                <option value=\"meal\">🍽️ Meal Report</option>\r\n                <option value=\"audit\">🔍 Audit Report</option>\r\n              </select>\r\n              {reportType === 'meal' && (\r\n                <div className=\"field-help\" style={{\r\n                  marginTop: '0.5rem',\r\n                  padding: '0.75rem',\r\n                  backgroundColor: '#e8f4fd',\r\n                  border: '1px solid #bee5eb',\r\n                  borderRadius: '0.375rem',\r\n                  fontSize: '0.875rem',\r\n                  color: '#0c5460'\r\n                }}>\r\n                  <strong>🍽️ Meal Report Instructions:</strong>\r\n                  <ul style={{ margin: '0.5rem 0 0 0', paddingLeft: '1.2rem' }}>\r\n                    <li>Choose a <strong>Division</strong> to filter meals by department (or select \"All Divisions\")</li>\r\n                    <li>Pick a <strong>Date Range</strong> to analyze meal consumption patterns</li>\r\n                    <li>Use <strong>Quick Date Selection</strong> buttons for common date ranges</li>\r\n                    <li>Report shows all meal bookings with employee details and meal information</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {(reportType === 'attendance' || reportType === 'audit') && (\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">Report Scope</label>\r\n                <select \r\n                  className=\"field-input\"\r\n                  value={reportScope}\r\n                  onChange={(e) => setReportScope(e.target.value)}\r\n                >\r\n                  <option value=\"individual\">👤 Individual Report</option>\r\n                  <option value=\"group\">👥 Group Report</option>\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {reportType === 'meal' && (\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">Division Filter</label>\r\n                <select \r\n                  className=\"field-input\"\r\n                  value={divisionId}\r\n                  onChange={(e) => setDivisionId(e.target.value)}\r\n                >\r\n                  <option value=\"all\">🏢 All Divisions</option>\r\n                  {divisions.map((division) => (\r\n                    <option key={division.division_id} value={division.division_id}>\r\n                      📋 {division.division_name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {reportScope === 'group' && (reportType === 'attendance') && (\r\n              <>\r\n                <div className=\"form-field\">\r\n                  <label className=\"field-label\">Division Filter</label>\r\n                  <select \r\n                    className=\"field-input\"\r\n                    value={divisionId}\r\n                    onChange={(e) => setDivisionId(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">🏢 All Divisions</option>\r\n                    {divisions.map((division) => (\r\n                      <option key={division.division_id} value={division.division_id}>\r\n                        📋 {division.division_name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-field\">\r\n                  <label className=\"field-label\">Section Filter</label>\r\n                  <select \r\n                    className=\"field-input\"\r\n                    value={sectionId}\r\n                    onChange={(e) => setSectionId(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">🏢 All Sections</option>\r\n                    {sections.map((section) => (\r\n                      <option key={section.section_id} value={section.section_id}>\r\n                        📋 {section.section_name} {section.division_name ? `(${section.division_name})` : ''}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {reportScope === 'individual' && (reportType === 'attendance') && (\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">Employee ID</label>\r\n                <input \r\n                  type=\"text\"\r\n                  className=\"field-input\"\r\n                  placeholder=\"Enter Employee ID (e.g., SA1001, 006, etc.)\"\r\n                  value={employeeId}\r\n                  onChange={(e) => setEmployeeId(e.target.value)}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"date-range-grid\">\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">Start Date</label>\r\n                <input \r\n                  type=\"date\"\r\n                  className=\"field-input\"\r\n                  value={dateRange.startDate}\r\n                  onChange={(e) => setDateRange({...dateRange, startDate: e.target.value})}\r\n                />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">End Date</label>\r\n                <input \r\n                  type=\"date\"\r\n                  className=\"field-input\"\r\n                  value={dateRange.endDate}\r\n                  onChange={(e) => setDateRange({...dateRange, endDate: e.target.value})}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Quick Date Selectors */}\r\n            <div className=\"form-field\">\r\n              <label className=\"field-label\">Quick Date Selection</label>\r\n              <div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap' }}>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm\"\r\n                  onClick={() => {\r\n                    const today = new Date().toISOString().split('T')[0];\r\n                    setDateRange({ startDate: today, endDate: today });\r\n                  }}\r\n                >\r\n                  📅 Today\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm\"\r\n                  onClick={() => {\r\n                    const today = new Date();\r\n                    const yesterday = new Date(today);\r\n                    yesterday.setDate(yesterday.getDate() - 1);\r\n                    const yesterdayStr = yesterday.toISOString().split('T')[0];\r\n                    setDateRange({ startDate: yesterdayStr, endDate: yesterdayStr });\r\n                  }}\r\n                >\r\n                  📆 Yesterday\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm\"\r\n                  onClick={() => {\r\n                    const today = new Date();\r\n                    const weekAgo = new Date(today);\r\n                    weekAgo.setDate(weekAgo.getDate() - 7);\r\n                    setDateRange({ \r\n                      startDate: weekAgo.toISOString().split('T')[0], \r\n                      endDate: today.toISOString().split('T')[0] \r\n                    });\r\n                  }}\r\n                >\r\n                  📊 Last 7 Days\r\n                </button>\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-secondary btn-sm\"\r\n                  onClick={() => {\r\n                    const today = new Date();\r\n                    const monthAgo = new Date(today);\r\n                    monthAgo.setDate(monthAgo.getDate() - 30);\r\n                    setDateRange({ \r\n                      startDate: monthAgo.toISOString().split('T')[0], \r\n                      endDate: today.toISOString().split('T')[0] \r\n                    });\r\n                  }}\r\n                >\r\n                  📈 Last 30 Days\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n            <div className=\"action-section\">\r\n            {/* Permission banner: inform user which report actions are disabled */}\r\n            {(!canGenerate || !canView) && (\r\n              <div className=\"permission-banner\">\r\n                { !canGenerate && <span className=\"banner-item\">You do not have permission to generate reports.</span> }\r\n                { !canView && <span className=\"banner-item\">You do not have permission to view/export reports.</span> }\r\n                <span className=\"banner-help\">Contact a Super Admin for access.</span>\r\n              </div>\r\n            )}\r\n            <div>\r\n              {error && (\r\n                <div className=\"error-message\">\r\n                  <i className=\"bi bi-exclamation-triangle\"></i>\r\n                  {error}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\r\n              {reportData && (\r\n                <div className=\"export-actions\">\r\n                  <button \r\n                    className=\"export-btn csv\"\r\n                    onClick={() => { if (!canView) { setError('You do not have permission to export reports.'); return; } exportReport('csv'); }}\r\n                    disabled={!canView}\r\n                    title={!canView ? 'No permission to export' : 'Export CSV'}\r\n                  >\r\n                    <i className=\"bi bi-filetype-csv\"></i>\r\n                    Export CSV\r\n                  </button>\r\n                  <button \r\n                    className=\"export-btn json\"\r\n                    onClick={() => { if (!canView) { setError('You do not have permission to export reports.'); return; } exportReport('json'); }}\r\n                    disabled={!canView}\r\n                    title={!canView ? 'No permission to export' : 'Export JSON'}\r\n                  >\r\n                    <i className=\"bi bi-filetype-json\"></i>\r\n                    Export JSON\r\n                  </button>\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className=\"generate-btn\"\r\n                onClick={() => { if (!canGenerate) { setError('You do not have permission to generate reports.'); return; } generateReport(); }}\r\n                disabled={loading || !canGenerate}\r\n                title={!canGenerate ? 'No permission to generate reports' : 'Generate Report'}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <i className=\"bi bi-arrow-clockwise spin\"></i>\r\n                    Generating...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <i className=\"bi bi-play-fill\"></i>\r\n                    Generate Report\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Report Results */}\r\n        {reportData ? (\r\n          <div className=\"report-results\">\r\n            <div className=\"results-header\">\r\n              <h3 className=\"results-title\">\r\n                <i className=\"bi bi-clipboard-data\"></i>\r\n                Report Results\r\n                {(reportScope === 'group' && reportType === 'attendance') && (\r\n                  <span className=\"filter-info\">\r\n                    {reportData.summary?.division_filter && (\r\n                      <span className=\"division-info\"> - {reportData.summary.division_filter}</span>\r\n                    )}\r\n                    {reportData.summary?.section_filter && (\r\n                      <span className=\"section-info\"> - {reportData.summary.section_filter}</span>\r\n                    )}\r\n                  </span>\r\n                )}\r\n                {reportType === 'meal' && (\r\n                  <span className=\"filter-info\">\r\n                    {/* Show selected division for meal reports */}\r\n                    {divisionId !== 'all' && (\r\n                      <span className=\"division-info\"> - {\r\n                        divisions.find(d => d.division_id === divisionId)?.division_name || `Division ID: ${divisionId}`\r\n                      }</span>\r\n                    )}\r\n                  </span>\r\n                )}\r\n              </h3>\r\n            </div>\r\n\r\n            {/* Statistics Grid */}\r\n            <div className=\"stats-grid\">\r\n              {reportType === 'attendance' && (\r\n                <>\r\n                  {reportScope === 'individual' ? (\r\n                    <>\r\n                      {/* Individual Report Stats */}\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.data?.[0]?.employee_ID || 'N/A'}</span>\r\n                        <span className=\"stat-label\">Employee ID</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.data?.[0]?.employee_name || 'Unknown'}</span>\r\n                        <span className=\"stat-label\">Employee Name</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.summary.total_records}</span>\r\n                        <span className=\"stat-label\">Total Records</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{`${dateRange.startDate} - ${dateRange.endDate}`}</span>\r\n                        <span className=\"stat-label\">Time Range</span>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {/* Group Report Stats */}\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{\r\n                          divisionId === 'all' ? 'All Divisions' : \r\n                          divisions.find(d => d.division_id === divisionId)?.division_name || `Division ID: ${divisionId}`\r\n                        }</span>\r\n                        <span className=\"stat-label\">Division</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{\r\n                          sectionId === 'all' ? 'All Sections' : \r\n                          sections.find(s => s.section_id === sectionId)?.section_name || `Section ID: ${sectionId}`\r\n                        }</span>\r\n                        <span className=\"stat-label\">Section</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.summary.total_records}</span>\r\n                        <span className=\"stat-label\">Total Records</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.summary.unique_employees}</span>\r\n                        <span className=\"stat-label\">Unique Employees</span>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              \r\n              {reportType === 'meal' && (\r\n                <>\r\n                  {/* Meal Report Stats */}\r\n                  <div className=\"stat-card\">\r\n                    <span className=\"stat-number\">{reportData.data?.length || 0}</span>\r\n                    <span className=\"stat-label\">Total Meals</span>\r\n                  </div>\r\n                  <div className=\"stat-card\">\r\n                    <span className=\"stat-number\">\r\n                      {reportData.data ? \r\n                        new Set(reportData.data.map(meal => \r\n                          meal.user?.employeeId || meal.employee_id\r\n                        )).size : 0}\r\n                    </span>\r\n                    <span className=\"stat-label\">Unique Employees</span>\r\n                  </div>\r\n                  <div className=\"stat-card\">\r\n                    <span className=\"stat-number\">\r\n                      {reportData.data?.filter(meal => \r\n                        (meal.mealType || meal.meal_type) === 'breakfast'\r\n                      ).length || 0}\r\n                    </span>\r\n                    <span className=\"stat-label\">Breakfast</span>\r\n                  </div>\r\n                  <div className=\"stat-card\">\r\n                    <span className=\"stat-number\">\r\n                      {reportData.data?.filter(meal => \r\n                        (meal.mealType || meal.meal_type) === 'lunch'\r\n                      ).length || 0}\r\n                    </span>\r\n                    <span className=\"stat-label\">Lunch</span>\r\n                  </div>\r\n                  <div className=\"stat-card\">\r\n                    <span className=\"stat-number\">\r\n                      {reportData.data?.filter(meal => \r\n                        (meal.mealType || meal.meal_type) === 'dinner'\r\n                      ).length || 0}\r\n                    </span>\r\n                    <span className=\"stat-label\">Dinner</span>\r\n                  </div>\r\n                  <div className=\"stat-card\">\r\n                    <span className=\"stat-number\">\r\n                      {reportData.data?.filter(meal => \r\n                        (meal.mealType || meal.meal_type) === 'snack'\r\n                      ).length || 0}\r\n                    </span>\r\n                    <span className=\"stat-label\">Snacks</span>\r\n                  </div>\r\n                  {/* Additional stats for filtered reports */}\r\n                  {divisionId !== 'all' && (\r\n                    <div className=\"stat-card\" style={{background: 'linear-gradient(135deg, #e17055 0%, #fdcb6e 100%)'}}>\r\n                      <span className=\"stat-number\" style={{fontSize: '0.9rem'}}>\r\n                        {divisions.find(d => d.division_id === divisionId)?.division_name || 'Selected Division'}\r\n                      </span>\r\n                      <span className=\"stat-label\">Division Filter</span>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Data Section */}\r\n            <div className=\"data-section\">\r\n              <div className=\"data-header\">\r\n                {/* <h4 className=\"data-title\">Unit Attendance Report</h4> */}\r\n                <span className=\"record-count\">{reportData.data.length} records</span>\r\n              </div>\r\n\r\n              {reportData.data.length > 0 ? (\r\n                <>\r\n                  <table className=\"data-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        {reportType === 'attendance' && (\r\n                          <>\r\n                            {reportScope === 'individual' ? (\r\n                              <>\r\n                                <th style={{width: '20%'}}>PUNCH DATE</th>\r\n                                <th style={{width: '15%'}}>PUNCH TIME</th>\r\n                                <th style={{width: '15%'}}>FUNCTION</th>\r\n                                <th style={{width: '20%'}}>EVENT DESCRIPTION</th>\r\n                                <th style={{width: '30%'}}>REMARKS</th>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <th style={{width: '10%'}}>EMP NO</th>\r\n                                <th style={{width: '20%'}}>EMP NAME</th>\r\n                                <th style={{width: '15%'}}>PUNCH DATE</th>\r\n                                <th style={{width: '10%'}}>PUNCH TIME</th>\r\n                                <th style={{width: '10%'}}>FUNCTION</th>\r\n                                <th style={{width: '35%'}}>EVENT DESCRIPTION</th>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        {reportType === 'meal' && (\r\n                          <>\r\n                            <th style={{width: '10%'}}>EMP NO</th>\r\n                            <th style={{width: '15%'}}>EMP NAME</th>\r\n                            <th style={{width: '12%'}}>MEAL DATE</th>\r\n                            <th style={{width: '10%'}}>MEAL TIME</th>\r\n                            <th style={{width: '12%'}}>MEAL TYPE</th>\r\n                            <th style={{width: '12%'}}>LOCATION</th>\r\n                            <th style={{width: '8%'}}>QUANTITY</th>\r\n                            <th style={{width: '21%'}}>ITEMS</th>\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {reportType === 'attendance' && (() => {\r\n                        if (reportScope === 'individual') {\r\n                          // Individual report - show by date without employee columns\r\n                          const groupedData = {};\r\n                          reportData.data.forEach(record => {\r\n                            const dateKey = record.date_;\r\n                            if (!groupedData[dateKey]) {\r\n                              groupedData[dateKey] = [];\r\n                            }\r\n                            groupedData[dateKey].push(record);\r\n                          });\r\n\r\n                          const sortedDates = Object.keys(groupedData).sort();\r\n                          const rows = [];\r\n\r\n                          sortedDates.forEach(dateKey => {\r\n                            const records = groupedData[dateKey];\r\n                            // Sort records by time only for individual reports\r\n                            records.sort((a, b) => {\r\n                              const aTime = String(a.time_ || '');\r\n                              const bTime = String(b.time_ || '');\r\n                              return aTime.localeCompare(bTime);\r\n                            });\r\n                            \r\n                            records.forEach((record, index) => {\r\n                              const showDate = index === 0;\r\n                              const date = new Date(record.date_);\r\n                              const day = date.getDate().toString().padStart(2, '0');\r\n                              const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n                              const year = date.getFullYear().toString().slice(-2);\r\n                              const weekday = date.toLocaleDateString('en-GB', { weekday: 'short' });\r\n                              const formattedDate = `${day}-${month}-${year}`;\r\n\r\n                              rows.push(\r\n                                <tr key={`${dateKey}-${index}`} className={showDate ? 'date-group-row' : 'time-row'}>\r\n                                  <td className={showDate ? 'date-cell-with-data' : 'date-cell-empty'}>\r\n                                    {showDate && (\r\n                                      <div>\r\n                                        <div className=\"date-line\">{formattedDate}</div>\r\n                                        <div className=\"weekday-line\">{weekday}</div>\r\n                                      </div>\r\n                                    )}\r\n                                  </td>\r\n                                  <td className=\"time-column\">{record.time_}</td>\r\n                                  <td className=\"function-column\">\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'F1-0' : 'F4-0'}\r\n                                  </td>\r\n                                  <td className=\"event-description\">\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF'}\r\n                                  </td>\r\n                                  <td className=\"remarks-column\">Granted(ID & F) COM0002</td>\r\n                                </tr>\r\n                              );\r\n                            });\r\n                          });\r\n                          return rows;\r\n                        } else {\r\n                          // Group report - show with employee columns\r\n                          const groupedData = {};\r\n                          reportData.data.forEach(record => {\r\n                            const dateKey = record.date_;\r\n                            if (!groupedData[dateKey]) {\r\n                              groupedData[dateKey] = [];\r\n                            }\r\n                            groupedData[dateKey].push(record);\r\n                          });\r\n\r\n                          const sortedDates = Object.keys(groupedData).sort();\r\n                          const rows = [];\r\n\r\n                          sortedDates.forEach(dateKey => {\r\n                            const records = groupedData[dateKey];\r\n                            // Sort records by employee ID first, then by time\r\n                            records.sort((a, b) => {\r\n                              const aEmpId = String(a.employee_ID || a.employee_id || '');\r\n                              const bEmpId = String(b.employee_ID || b.employee_id || '');\r\n                              const empCompare = aEmpId.localeCompare(bEmpId);\r\n                              if (empCompare !== 0) return empCompare;\r\n                              const aTime = String(a.time_ || '');\r\n                              const bTime = String(b.time_ || '');\r\n                              return aTime.localeCompare(bTime);\r\n                            });\r\n                            \r\n                            records.forEach((record, index) => {\r\n                              const showDate = index === 0;\r\n                              const date = new Date(record.date_);\r\n                              const day = date.getDate().toString().padStart(2, '0');\r\n                              const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n                              const year = date.getFullYear().toString().slice(-2);\r\n                              const weekday = date.toLocaleDateString('en-GB', { weekday: 'short' });\r\n                              const formattedDate = `${day}-${month}-${year}`;\r\n\r\n                              rows.push(\r\n                                <tr key={`${dateKey}-${index}`} className={showDate ? 'date-group-row' : 'time-row'}>\r\n                                  <td className=\"employee-id-column\" style={{fontWeight: 'bold', textAlign: 'center'}}>\r\n                                    {record.employee_ID || record.employee_id || 'N/A'}\r\n                                  </td>\r\n                                  <td className=\"employee-name-column\" style={{textAlign: 'left', paddingLeft: '8px'}}>\r\n                                    {record.employee_name || record.name || 'Unknown'}\r\n                                  </td>\r\n                                  <td className={showDate ? 'date-cell-with-data' : 'date-cell-empty'}>\r\n                                    {showDate && (\r\n                                      <div>\r\n                                        <div className=\"date-line\">{formattedDate}</div>\r\n                                        <div className=\"weekday-line\">{weekday}</div>\r\n                                      </div>\r\n                                    )}\r\n                                  </td>\r\n                                  <td className=\"time-column\">{record.time_}</td>\r\n                                  <td className=\"function-column\">\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'F1-0' : 'F4-0'}\r\n                                  </td>\r\n                                  <td className=\"event-description\" style={{textAlign: 'left', paddingLeft: '5px'}}>\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF'}  Granted(ID & F COM0002)\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            });\r\n                          });\r\n                          return rows;\r\n                        }\r\n                      })()}\r\n                      \r\n                      {reportType === 'meal' && (() => {\r\n                        // Meal report - show with employee columns\r\n                        const rows = [];\r\n                        reportData.data.forEach((record, index) => {\r\n                          const date = new Date(record.date || record.meal_date || record.mealTime);\r\n                          const day = date.getDate().toString().padStart(2, '0');\r\n                          const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n                          const year = date.getFullYear().toString().slice(-2);\r\n                          const formattedDate = `${day}-${month}-${year}`;\r\n\r\n                          rows.push(\r\n                            <tr key={index}>\r\n                              <td className=\"employee-id-column\" style={{fontWeight: 'bold', textAlign: 'center'}}>\r\n                                {record.user?.employeeId || record.employee_id || 'N/A'}\r\n                              </td>\r\n                              <td className=\"employee-name-column\" style={{textAlign: 'left', paddingLeft: '8px'}}>\r\n                                {record.user?.firstName && record.user?.lastName \r\n                                  ? `${record.user.firstName} ${record.user.lastName}`\r\n                                  : record.employee_name || 'Unknown'}\r\n                              </td>\r\n                              <td className=\"date-cell\" style={{textAlign: 'center'}}>\r\n                                {formattedDate}\r\n                              </td>\r\n                              <td className=\"time-column\" style={{textAlign: 'center'}}>\r\n                                {new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { \r\n                                  hour: '2-digit', minute: '2-digit' \r\n                                })}\r\n                              </td>\r\n                              <td className=\"meal-type-column\" style={{textAlign: 'center', textTransform: 'capitalize'}}>\r\n                                {record.mealType || record.meal_type}\r\n                              </td>\r\n                              <td className=\"location-column\" style={{textAlign: 'center', textTransform: 'capitalize'}}>\r\n                                {record.location || 'Cafeteria'}\r\n                              </td>\r\n                              <td className=\"quantity-column\" style={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                                {record.items?.reduce((total, item) => total + item.quantity, 0) || 1}\r\n                              </td>\r\n                              <td className=\"items-column\" style={{fontSize: '0.8rem'}}>\r\n                                {record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal'}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        });\r\n                        return rows;\r\n                      })()}\r\n                    </tbody>\r\n                  </table>\r\n                  \r\n                  {reportData.data.length > 100 && (\r\n                    <div className=\"pagination-info\">\r\n                      Showing first 100 records of {reportData.data.length} total records. \r\n                      Use export function to download complete data.\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <div className=\"empty-state\">\r\n                  <div className=\"empty-icon\">\r\n                    <i className=\"bi bi-inbox\"></i>\r\n                  </div>\r\n                  <h4 className=\"empty-title\">No Data Found</h4>\r\n                  <p className=\"empty-text\">No records found for the selected criteria. Try adjusting your filters.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : !loading && (\r\n          <div className=\"report-results\">\r\n            <div className=\"empty-state\">\r\n              <div className=\"empty-icon\">\r\n                <i className=\"bi bi-file-earmark-bar-graph\"></i>\r\n              </div>\r\n              <h4 className=\"empty-title\">Ready to Generate Reports</h4>\r\n              <p className=\"empty-text\">Configure your report parameters above and click \"Generate Report\" to start.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportGeneration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}