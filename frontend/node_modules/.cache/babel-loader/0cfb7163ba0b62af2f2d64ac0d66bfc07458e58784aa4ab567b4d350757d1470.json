{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\ReportGeneration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport usePermission from '../../hooks/usePermission';\nimport './ReportGeneration.css';\nimport GroupReport from './GroupReport';\nimport IndividualReport from './IndividualReport';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReportGeneration = () => {\n  _s();\n  var _divisions$find, _sections$find, _reportData$data;\n  const [reportType, setReportType] = useState('attendance');\n  const [reportScope, setReportScope] = useState('individual');\n  const [employeeId, setEmployeeId] = useState('');\n  const [divisionId, setDivisionId] = useState('all');\n  const [sectionId, setSectionId] = useState('all');\n  const [divisions, setDivisions] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [allSections, setAllSections] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [reportData, setReportData] = useState(null);\n  const [error, setError] = useState('');\n  const [employeeInfo, setEmployeeInfo] = useState(null);\n  const groupReportRef = useRef(null);\n  const individualReportRef = useRef(null);\n\n  // Return DB-provided time strings unchanged. If a Date or ISO string is provided, format to HH:mm:ss.\n  const ensureSeconds = timeVal => {\n    if (!timeVal && timeVal !== 0) return '';\n    if (typeof timeVal === 'string') return timeVal;\n    try {\n      const d = new Date(timeVal);\n      if (!isNaN(d.getTime())) {\n        return d.toLocaleTimeString('en-GB', {\n          hour12: false\n        });\n      }\n    } catch (e) {\n      // fallback\n    }\n    return String(timeVal);\n  };\n\n  // permission checks\n  const canGenerate = usePermission('reports', 'create');\n\n  // Fetch divisions and sections on component mount\n  useEffect(() => {\n    fetchDivisions();\n    fetchAllSections();\n\n    // Set default date range to today\n    const today = new Date().toISOString().split('T')[0];\n    setDateRange({\n      startDate: today,\n      endDate: today\n    });\n  }, []);\n\n  // When scope changes to group, clear and block employeeId\n  useEffect(() => {\n    if (reportScope === 'group') {\n      setEmployeeId('');\n    }\n  }, [reportScope]);\n  const fetchSectionsByDivision = useCallback(async divId => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Use MySQL sections endpoint for attendance reports to get correct section IDs\n      const isAttendanceReport = reportType === 'attendance';\n      const sectionsEndpoint = isAttendanceReport ? `http://localhost:5000/api/divisions/${divId}/mysql-sections` : `http://localhost:5000/api/divisions/${divId}/sections`;\n      console.log(`Fetching sections from: ${sectionsEndpoint}`); // Debug log\n\n      const response = await fetch(sectionsEndpoint, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Sections response for division:', divId, data); // Debug log\n\n        // Handle different response formats for MongoDB and MySQL\n        let sectionsArray = [];\n        if (Array.isArray(data)) {\n          sectionsArray = data;\n        } else if (data.data && Array.isArray(data.data)) {\n          sectionsArray = data.data;\n        } else if (data.sections && Array.isArray(data.sections)) {\n          sectionsArray = data.sections;\n        } else if (data.success && data.sections) {\n          sectionsArray = Array.isArray(data.sections) ? data.sections : [];\n        }\n        console.log('Processed sections array:', sectionsArray); // Debug log\n        setSections(sectionsArray);\n\n        // Reset section selection to 'all' when division changes\n        if (sectionsArray.length > 0) {\n          setSectionId('all');\n        }\n      } else {\n        console.error('Failed to fetch sections:', response.status, response.statusText);\n        // Don't show error for divisions that don't have MySQL sections\n        // Just set empty sections array\n        setSections([]);\n        setSectionId('all');\n      }\n    } catch (err) {\n      console.error('Error fetching sections by division:', err);\n      setSections([]);\n      setSectionId('all');\n    }\n  }, [reportType]); // Add reportType as dependency since it affects which endpoint to use\n\n  // Fetch sections when division changes\n  useEffect(() => {\n    if (divisionId && divisionId !== 'all') {\n      console.log('Fetching sections for division:', divisionId); // Debug log\n      fetchSectionsByDivision(divisionId);\n    } else {\n      console.log('Setting all sections'); // Debug log\n      setSections(allSections);\n      setSectionId('all');\n    }\n  }, [divisionId, allSections, fetchSectionsByDivision]);\n  const fetchDivisions = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/divisions', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Handle different response formats\n        if (Array.isArray(data)) {\n          setDivisions(data);\n        } else if (data.data && Array.isArray(data.data)) {\n          setDivisions(data.data);\n        } else if (data.divisions && Array.isArray(data.divisions)) {\n          setDivisions(data.divisions);\n        } else {\n          setDivisions([]);\n        }\n      } else {\n        setDivisions([]);\n      }\n    } catch (err) {\n      console.error('Error fetching divisions:', err);\n      setDivisions([]);\n    }\n  };\n  const fetchAllSections = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/sections', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Handle different response formats for MongoDB\n        let sectionsArray = [];\n        if (Array.isArray(data)) {\n          sectionsArray = data;\n        } else if (data.data && Array.isArray(data.data)) {\n          sectionsArray = data.data;\n        } else if (data.sections && Array.isArray(data.sections)) {\n          sectionsArray = data.sections;\n        }\n        setAllSections(sectionsArray);\n        setSections(sectionsArray);\n      } else {\n        setAllSections([]);\n        setSections([]);\n      }\n    } catch (err) {\n      console.error('Error fetching sections:', err);\n      setAllSections([]);\n      setSections([]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!canGenerate) {\n      setError('You do not have permission to generate reports');\n      return;\n    }\n    if (!dateRange.startDate || !dateRange.endDate) {\n      setError('Please select both start and end dates');\n      return;\n    }\n    if (reportScope === 'individual' && !employeeId) {\n      setError('Please enter an employee ID for individual reports');\n      return;\n    }\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      let apiUrl = '';\n      let payload = {};\n      if (reportType === 'attendance') {\n        // Use MySQL API for attendance reports\n        apiUrl = 'http://localhost:5000/api/reports/mysql/attendance';\n        payload = {\n          report_type: reportScope,\n          from_date: dateRange.startDate,\n          to_date: dateRange.endDate\n        };\n        if (reportScope === 'individual') {\n          payload.employee_id = employeeId;\n        }\n        if (reportScope === 'group') {\n          if (divisionId !== 'all') payload.division_id = divisionId;\n          if (sectionId !== 'all') payload.section_id = sectionId;\n        }\n      } else if (reportType === 'meal') {\n        // Use MongoDB API for meal reports\n        apiUrl = 'http://localhost:5000/api/meal-reports';\n        const params = new URLSearchParams({\n          startDate: dateRange.startDate,\n          endDate: dateRange.endDate,\n          scope: reportScope,\n          ...(reportScope === 'individual' && {\n            employeeId\n          }),\n          ...(reportScope === 'group' && {\n            divisionId: divisionId !== 'all' ? divisionId : '',\n            sectionId: sectionId !== 'all' ? sectionId : ''\n          })\n        });\n        apiUrl += `?${params}`;\n      }\n      let response;\n      if (reportType === 'attendance') {\n        response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n      } else {\n        response = await fetch(apiUrl, {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n      let data;\n      try {\n        data = await response.json();\n      } catch (jsonErr) {\n        setError('Invalid response from server.');\n        setReportData(null);\n        return;\n      }\n      if (!response.ok) {\n        setError(data.message || `HTTP error! status: ${response.status}`);\n        setReportData(null);\n        return;\n      }\n\n      // Handle MongoDB response format\n      const reportArray = Array.isArray(data.data) ? data.data : Array.isArray(data) ? data : [];\n      if (data.success && reportArray.length > 0 || !data.hasOwnProperty('success') && reportArray.length > 0) {\n        // For group reports, add reportType and dates to the response\n        const processedData = {\n          ...data,\n          data: reportArray\n        };\n\n        // If this is a group report, add the reportType for frontend handling\n        if (reportScope === 'group' && data.reportType === 'group') {\n          processedData.reportType = 'group';\n          processedData.employees = reportArray; // For backward compatibility\n        }\n        setReportData(processedData);\n        if (data.employee_info) {\n          setEmployeeInfo(data.employee_info);\n        }\n        setError('');\n      } else if (reportArray.length === 0) {\n        setError('No records found for the selected criteria.');\n        setReportData({\n          ...data,\n          data: []\n        });\n      } else {\n        setError(data.message || 'Failed to generate report');\n        setReportData(null);\n      }\n    } catch (err) {\n      console.error('Error generating report:', err);\n      setError(err.message || 'Failed to generate report. Please try again.');\n      setReportData(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const exportReport = format => {\n    if (!reportData || !reportData.data || reportData.data.length === 0) {\n      setError('No data to export. Please generate a report first.');\n      return;\n    }\n    if (format === 'pdf') {\n      handlePrint();\n    }\n  };\n  const handlePrint = () => {\n    if (!reportData || !reportData.data || reportData.data.length === 0) {\n      alert('No data to print. Please generate a report first.');\n      return;\n    }\n    if (reportScope === 'group') {\n      if (groupReportRef.current && typeof groupReportRef.current.print === 'function') {\n        groupReportRef.current.print();\n      } else {\n        alert('Group report print not available.');\n      }\n    } else {\n      if (individualReportRef.current && typeof individualReportRef.current.print === 'function') {\n        individualReportRef.current.print();\n      } else {\n        alert('Individual report print not available.');\n      }\n    }\n  };\n  const getHeaders = () => {\n    if (reportType === 'meal') {\n      return reportScope === 'individual' ? ['Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items'] : ['Employee ID', 'Employee Name', 'Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items'];\n    } else if (reportScope === 'group' && (reportData === null || reportData === void 0 ? void 0 : reportData.reportType) === 'group') {\n      // For group scope we want a flat punch-list style table similar to individual reports.\n      return ['Emp No', 'Emp Name', 'Meal-Pkt-Mny', 'Punch Date', 'Punch Time', 'Function', 'Event Description'];\n    } else {\n      // Individual attendance report headers to match your reference exactly\n      return ['Emp No', 'Emp Name', 'Meal-Pkt-Mny', 'Punch Date', 'Punch Time', 'Function', 'Event Description'];\n    }\n  };\n\n  // formatRow returns an array of cell values for a single punch/record\n  // If called with an attendance 'punch' object, it returns the standard row.\n  const formatRow = record => {\n    if (reportType === 'meal') {\n      var _record$items, _record$items2, _record$user, _record$user2, _record$user3;\n      const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString();\n      const items = ((_record$items = record.items) === null || _record$items === void 0 ? void 0 : _record$items.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal';\n      const quantity = ((_record$items2 = record.items) === null || _record$items2 === void 0 ? void 0 : _record$items2.reduce((total, item) => total + item.quantity, 0)) || 1;\n      return reportScope === 'individual' ? [record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items] : [record.employee_id || ((_record$user = record.user) === null || _record$user === void 0 ? void 0 : _record$user.employeeId), record.employee_name || `${(_record$user2 = record.user) === null || _record$user2 === void 0 ? void 0 : _record$user2.firstName} ${(_record$user3 = record.user) === null || _record$user3 === void 0 ? void 0 : _record$user3.lastName}`, record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items];\n    } else if (reportScope === 'group' && (reportData === null || reportData === void 0 ? void 0 : reportData.reportType) === 'group') {\n      var _record$scan_type, _record$scan_type2;\n      // For group reports we may be formatting individual punch records.\n      // The incoming `record` in the group-preview mapping will be a punch-like object\n      // if we transformed the server response earlier. We expect fields similar to individual records.\n      // Format: Emp No, Emp Name, Meal-Pkt-Mny, Punch Date, Punch Time, Function, Event Description\n      const punchDateObj = record.date_ ? new Date(record.date_) : record.punchDate ? new Date(record.punchDate) : null;\n      const formattedDate = punchDateObj && !isNaN(punchDateObj.getTime()) ? punchDateObj.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      }).replace(/\\//g, '-') + ' ' + punchDateObj.toLocaleDateString('en-US', {\n        weekday: 'short'\n      }) : record.punchDate || record.date_ || '';\n      const functionCode = ((_record$scan_type = record.scan_type) === null || _record$scan_type === void 0 ? void 0 : _record$scan_type.toUpperCase()) === 'IN' ? 'F1-0' : 'F4-0';\n      const eventDescription = `${((_record$scan_type2 = record.scan_type) === null || _record$scan_type2 === void 0 ? void 0 : _record$scan_type2.toUpperCase()) === 'IN' ? 'ON' : 'OFF'}Granted(ID & F tally plan COM0002)`;\n      return [record.employee_ID || record.employeeId || record.emp_no || record.empNo || '', record.employee_name || record.employeeName || record.name || 'Unknown', 'I', formattedDate, ensureSeconds(record.time_ || record.time || record.punchTime || ''), functionCode, eventDescription];\n    } else {\n      var _record$scan_type3, _record$scan_type4;\n      // Individual attendance report format to match your reference exactly\n      // Format: Emp No, Emp Name, Meal-Pkt-Mny, Punch Date, Punch Time, Function, Event Description\n\n      // Format the punch date as \"DD-MMM-YY Day\" like \"19-Aug-25 Tue\"\n      const punchDate = new Date(record.date_);\n      const formattedDate = punchDate.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      }).replace(/\\//g, '-') + ' ' + punchDate.toLocaleDateString('en-US', {\n        weekday: 'short'\n      });\n\n      // Determine function code based on scan type\n      const functionCode = ((_record$scan_type3 = record.scan_type) === null || _record$scan_type3 === void 0 ? void 0 : _record$scan_type3.toUpperCase()) === 'IN' ? 'F1-0' : 'F4-0';\n\n      // Format event description like your reference\n      const eventDescription = `${((_record$scan_type4 = record.scan_type) === null || _record$scan_type4 === void 0 ? void 0 : _record$scan_type4.toUpperCase()) === 'IN' ? 'ON' : 'OFF'}Granted(ID & F tally plan COM0002)`;\n      return [record.employee_ID || record.employeeId,\n      // Emp No\n      record.employee_name || record.employeeName || 'Unknown',\n      // Emp Name\n      'I',\n      // Meal-Pkt-Mny (always \"I\" for attendance records as shown in your reference)\n      formattedDate,\n      // Punch Date\n      ensureSeconds(record.time_),\n      // Punch Time\n      functionCode,\n      // Function\n      eventDescription // Event Description\n      ];\n    }\n  };\n  const printReport = () => {\n    if (!reportData || !reportData.data || reportData.data.length === 0) {\n      alert('No data to print. Please generate a report first.');\n      return;\n    }\n\n    // Create a new window for printing with formatted content, avoid about:blank in URL\n    const printWindow = window.open(' ', '', 'width=900,height=700');\n    const printContent = generatePrintContent();\n    printWindow.document.open();\n    printWindow.document.write(printContent);\n    printWindow.document.close();\n    printWindow.focus();\n    printWindow.print();\n    printWindow.close();\n  };\n  const generatePrintContent = () => {\n    const reportTitle = reportType === 'attendance' ? 'History Transaction Report' : 'Meal Consumption Report';\n    // const subtitle = reportType === 'attendance' ? 'All Granted(ID & FP) Records' : 'All Meal Records';\n\n    let employeeHeader = '';\n    if (reportScope === 'individual' && (employeeInfo || employeeId)) {\n      const empNoVal = employeeInfo && (employeeInfo.employee_id || employeeInfo.employee_ID) || employeeId || '';\n      const empNameVal = employeeInfo && (employeeInfo.name || employeeInfo.employee_name || employeeInfo.employeeName) || '';\n      employeeHeader = `\n        <table style=\"margin-bottom: 12px; border-collapse: collapse;\">\n          <tr>\n            <td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; width: 90px;\">Emp No :</td>\n            <td style=\"vertical-align: top;\">${empNoVal}</td>\n          </tr>\n          <tr>\n            <td style=\"vertical-align: top; padding-right: 8px; font-weight: bold;\">Emp Name :</td>\n            <td style=\"vertical-align: top;\">${empNameVal}</td>\n          </tr>\n          <tr>\n            <td style=\"vertical-align: top; padding-right: 8px; font-weight: bold;\">Date From :</td>\n            <td style=\"vertical-align: top;\">${dateRange.startDate} &nbsp; To : &nbsp; ${dateRange.endDate}</td>\n          </tr>\n        </table>\n      `;\n    }\n    const headers = getHeaders();\n    // Rows per printed page. Use a sensible default for individual reports and keep\n    // a larger capacity for group reports. Make the individual value easy to tweak.\n    const INDIVIDUAL_ROWS_PER_PAGE = 40; // increased to show more records per individual printed page\n    const GROUP_ROWS_PER_PAGE = 32;\n    const rowsPerPage = reportScope === 'individual' ? INDIVIDUAL_ROWS_PER_PAGE : GROUP_ROWS_PER_PAGE;\n    // Build flattened punches array (date-first) so print matches the group preview\n    const punches = [];\n    // Determine date order and flatten depending on report shape\n    let dateOrder = [];\n    if (Array.isArray(reportData.dates) && reportData.dates.length > 0) {\n      dateOrder = reportData.dates;\n    } else if (reportScope === 'individual') {\n      // reportData.data for individual reports is expected to be a flat array of punch/record objects.\n      // Collect unique dates from those records and build punches directly.\n      const dateSet = new Set();\n      (Array.isArray(reportData.data) ? reportData.data : []).forEach(p => {\n        const d = p.date || p.punchDate || p.date_;\n        if (d) dateSet.add(d);\n      });\n      dateOrder = Array.from(dateSet).sort((a, b) => new Date(a) - new Date(b));\n\n      // For each date, push all punches that belong to that date\n      dateOrder.forEach(date => {\n        (Array.isArray(reportData.data) ? reportData.data : []).forEach(p => {\n          const pd = p.date || p.punchDate || p.date_;\n          if (String(pd) !== String(date)) return;\n          const inferredType = p && (p.scan_type || p.type || p.direction) ? p.scan_type || p.type || p.direction : 'IN';\n          punches.push({\n            employee_ID: p.employee_ID || p.employeeId || p.emp_no || p.empNo || '',\n            employee_name: p.employee_name || p.employeeName || p.name || '',\n            date_: date,\n            time_: p.time || p.punchTime || p.time_ || (typeof p === 'string' ? p : ''),\n            scan_type: inferredType\n          });\n        });\n      });\n    } else {\n      // Group-shaped report: each element is an employee with punches/dailyAttendance\n      const dateSet = new Set();\n      reportData.data.forEach(emp => {\n        if (Array.isArray(emp.punches)) {\n          emp.punches.forEach(p => {\n            const d = p.date || p.punchDate || p.date_;\n            if (d) dateSet.add(d);\n          });\n        }\n        if (emp.dailyAttendance) {\n          Object.keys(emp.dailyAttendance).forEach(k => dateSet.add(k));\n        }\n      });\n      dateOrder = Array.from(dateSet).sort((a, b) => new Date(a) - new Date(b));\n      dateOrder.forEach(date => {\n        reportData.data.forEach(emp => {\n          if (Array.isArray(emp.punches) && emp.punches.length > 0) {\n            const dayPunches = emp.punches.filter(p => {\n              const pd = p.date || p.punchDate || p.date_;\n              return String(pd) === String(date);\n            });\n            dayPunches.forEach((p, pIndex) => {\n              const inferredType = p && (p.scan_type || p.type || p.direction) ? p.scan_type || p.type || p.direction : pIndex % 2 === 0 ? 'IN' : 'OUT';\n              punches.push({\n                employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\n                employee_name: emp.employeeName || emp.employee_name || emp.name,\n                date_: date,\n                time_: p.time || p.punchTime || p.time_ || (typeof p === 'string' ? p : ''),\n                scan_type: inferredType\n              });\n            });\n          } else if (emp.dailyAttendance && emp.dailyAttendance[date]) {\n            const dayData = emp.dailyAttendance[date];\n            if (Array.isArray(dayData.punches) && dayData.punches.length > 0) {\n              dayData.punches.forEach((p, pIndex) => {\n                const inferredType = p && (p.scan_type || p.type || p.direction) ? p.scan_type || p.type || p.direction : pIndex % 2 === 0 ? 'IN' : 'OUT';\n                punches.push({\n                  employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\n                  employee_name: emp.employeeName || emp.employee_name || emp.name,\n                  date_: date,\n                  time_: p.time || (typeof p === 'string' ? p : ''),\n                  scan_type: inferredType\n                });\n              });\n            } else {\n              if (dayData.checkIn) {\n                punches.push({\n                  employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\n                  employee_name: emp.employeeName || emp.employee_name || emp.name,\n                  date_: date,\n                  time_: dayData.checkIn,\n                  scan_type: 'IN'\n                });\n              }\n              if (dayData.checkOut) {\n                punches.push({\n                  employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\n                  employee_name: emp.employeeName || emp.employee_name || emp.name,\n                  date_: date,\n                  time_: dayData.checkOut,\n                  scan_type: 'OUT'\n                });\n              }\n            }\n          }\n        });\n      });\n    }\n\n    // Sort punches by date, employee, time, with IN before OUT for ties\n    punches.sort((a, b) => {\n      const da = new Date(a.date_ || '');\n      const db = new Date(b.date_ || '');\n      if (!isNaN(da.getTime()) && !isNaN(db.getTime())) {\n        if (da < db) return -1;\n        if (da > db) return 1;\n      } else {\n        if ((a.date_ || '') < (b.date_ || '')) return -1;\n        if ((a.date_ || '') > (b.date_ || '')) return 1;\n      }\n      const empA = String(a.employee_ID || '');\n      const empB = String(b.employee_ID || '');\n      if (empA < empB) return -1;\n      if (empA > empB) return 1;\n      const ta = a.time_ || '';\n      const tb = b.time_ || '';\n      if (ta < tb) return -1;\n      if (ta > tb) return 1;\n      const aIsIn = (a.scan_type || '').toUpperCase() === 'IN';\n      const bIsIn = (b.scan_type || '').toUpperCase() === 'IN';\n      if (aIsIn && !bIsIn) return -1;\n      if (!aIsIn && bIsIn) return 1;\n      return 0;\n    });\n\n    // Build sortedRecords compatible with later print rendering\n    const sortedRecords = punches.map((p, idx) => {\n      const rec = {\n        ...p\n      };\n      // build human readable punch date key used for display grouping\n      const punchDate = new Date(p.date_);\n      rec._punchDateKey = !isNaN(punchDate.getTime()) ? punchDate.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      }).replace(/\\//g, '-') + ' ' + punchDate.toLocaleDateString('en-US', {\n        weekday: 'short'\n      }) : p.date_;\n      return rec;\n    });\n\n    // For print, suppress duplicate Emp/Name/Meal-Pkt-Mny/Punch Date similar to preview\n    // Build pages so every new date starts on a fresh page\n    const pages = (() => {\n      const pagesOut = [];\n      let currentPage = [];\n      let lastKey = null; // empId|date\n      let lastDateHeader = null;\n      let currentCount = 0;\n      // For individual reports, count distinct dates per page (user requested 8 dates/page)\n      let currentDateCount = 0;\n      const pushPage = () => {\n        if (currentPage.length > 0) {\n          pagesOut.push(currentPage.slice());\n          currentPage = [];\n          currentCount = 0;\n          lastKey = null; // reset duplicate suppression at page boundary\n        }\n      };\n      sortedRecords.forEach(record => {\n        const dateHeader = record._punchDateKey || record.date_ || '';\n        // If date changed, insert a date header. For group reports we ensure the header\n        // sits at the top of a new page; for individual reports we just inject the header\n        // without forcing a page break.\n        if (lastDateHeader !== dateHeader) {\n          lastDateHeader = dateHeader;\n          if ((reportScope === 'group' || reportData.reportType === 'group') && currentCount > 0) {\n            // finish current page and start a new one so date header sits at top (group only)\n            pushPage();\n          }\n          // inject date header row on the current page\n          currentPage.push(`<tr style=\"background: #e9ecef;\"><td colspan=\"7\" style=\"font-weight: bold; font-size: 11px; text-align: left; padding: 8px 12px; border: 1px solid #000;\">Date: ${dateHeader}</td></tr>`);\n          currentCount++;\n          // If individual report, increment the distinct date counter and check page limit\n          if (reportScope === 'individual') {\n            currentDateCount++;\n          }\n          lastKey = null; // reset duplicate suppression when date header changes\n        }\n        const row = formatRow(record);\n        const empIdVal = record.employee_ID || record.employeeId || record.emp_no || record.empNo || '';\n        const dateVal = dateHeader;\n        const key = `${empIdVal}||${dateVal}`;\n        if (lastKey === key) {\n          if (row.length > 0) row[0] = '';\n          if (row.length > 1) row[1] = '';\n          if (row.length > 2) row[2] = '';\n          if (row.length > 3) row[3] = '';\n        } else {\n          lastKey = key;\n        }\n        currentPage.push(`<tr>${row.map((cell, ci) => `<td style=\"border: 1px solid #000; padding: 4px 6px; text-align: left; font-size: 10px; white-space: pre-line;\">${ci === 0 ? '<strong>' + cell + '</strong>' : cell}</td>`).join('')}</tr>`);\n        currentCount++;\n\n        // If page capacity reached, push page and continue\n        if (reportScope === 'individual') {\n          // For individual scope, paginate by distinct date headers: 8 dates per page\n          const DATES_PER_PAGE = 8;\n          if (currentDateCount >= DATES_PER_PAGE) {\n            pushPage();\n            currentDateCount = 0;\n          }\n        } else {\n          if (currentCount >= rowsPerPage) {\n            pushPage();\n          }\n        }\n      });\n\n      // push remaining\n      if (currentPage.length > 0) pagesOut.push(currentPage.slice());\n      return pagesOut;\n    })();\n    const totalPages = pages.length || 1;\n\n    // Subtitle for attendance report\n    const subtitle = reportType === 'attendance' ? 'All Granted(ID & FP) Records' : 'All Meal Records';\n    // Employee info for print\n    let empNo = '';\n    let empName = '';\n    if (reportScope === 'individual' && employeeInfo) {\n      empNo = employeeInfo.employee_id || employeeInfo.employee_ID || employeeId || '';\n      empName = employeeInfo.name || employeeInfo.employee_name || employeeInfo.employeeName || '';\n    } else if (reportData && reportData.data && reportData.data.length > 0) {\n      // Try to extract from first record for group reports\n      const first = reportData.data[0];\n      empNo = first.employee_id || first.employee_ID || first.emp_no || first.empNo || first.empid || first.employeeId || '';\n      empName = first.employee_name || first.employeeName || first.emp_name || first.name || '';\n    }\n    function renderPage(pageNum) {\n      const pageRows = (pages[pageNum - 1] || []).join('');\n      // Common header for each page\n      // Add signature lines only on the last page\n      const isLastPage = pageNum === totalPages;\n      return `\n        <div class=\"common-header\" style=\"page-break-before: ${pageNum > 1 ? 'always' : 'auto'}; width: 100%;\">\n          <!-- Reuse app header markup so printed header matches .report-header styles -->\n          <div class=\"report-header\" style=\"padding:8px 0; margin-bottom:6px;\">\n            <div class=\"header-content\" style=\"text-align:left; display:flex; justify-content:space-between; align-items:flex-start;\">\n              <div style=\"max-width:70%;\">\n                <h1 style=\"margin:0; display:flex; align-items:center; gap:8px; font-family: 'Courier New', monospace;\">${reportTitle}</h1>\n                <div class=\"header-subtitle\" style=\"font-size:11px; margin-top:4px;\"><strong>${subtitle}</strong></div>\n                <!-- spacer to create a blank line between subtitle and date-range -->\n                <div style=\"height:8px;\">&nbsp;</div>\n                ${reportScope === 'individual' ? employeeHeader || `<div class=\"date-range\" style=\"margin-top:6px; font-size:11px;\"><strong>Date From :</strong> ${dateRange.startDate} <strong>To :</strong> ${dateRange.endDate}</div>` : `<div class=\"date-range\" style=\"margin-top:6px; font-size:11px;\"><strong>Date From :</strong> ${dateRange.startDate} <strong>To :</strong> ${dateRange.endDate}</div>`}\n              </div>\n              <div style=\"text-align:left; font-size:10px;\" class=\"print-meta\">\n                <div style=\"font-size:10px;\">Printed Date : ${new Date().toLocaleDateString()}</div>\n                <div style=\"font-size:10px;\">Printed Time : ${new Date().toLocaleTimeString()}</div>\n                <div style=\"font-size:10px;\">Page ${pageNum} of ${totalPages}</div>\n              </div>\n            </div>\n          </div>\n          <div class=\"header-content\" style=\"max-width:1200px; margin:0 auto; padding:0 12px;\">\n            <table style=\"width:100%; border-collapse: collapse;\">\n              <thead>\n                <tr>${headers.map(header => `<th style=\"font-size: 11px; padding: 4px 2px; border: 0.5px solid #000; text-align: left;\">${header === 'Emp No' ? '<strong>' + header + '</strong>' : header}</th>`).join('')}</tr>\n              </thead>\n              <tbody>\n                ${pageRows}\n              </tbody>\n            </table>\n          </div>\n          ${isLastPage ? `\n          <div style=\"margin-top: 60px; width: 100%;\">\n            <table style=\"width:100%; border-collapse: collapse; border: none;\">\n              <tbody>\n                <tr>\n                  <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\n                  <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                  <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\n                  <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                </tr>\n                <tr>\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 1</td>\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 2</td>\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          ` : ''}\n        </div>\n      `;\n    }\n    return `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>${reportTitle}</title>\n        <style>\n          /* Minimal header styles copied from ReportGeneration.css but adjusted for print: white background and black text */\n          .report-header { background: #ffffff; padding: 8px 0; margin-bottom: 6px; }\n          .header-content { max-width: 1200px; margin: 0 auto; padding: 0 12px; text-align: left; position: relative; z-index: 2; }\n          .header-content h1 { font-weight: 700; font-size: 14px; margin: 0; color: #000; }\n          .header-subtitle { font-size: 11px; margin-top: 4px; color: #000; }\n          .employee-info, .date-range { font-size: 11px; margin-top: 6px; color: #000; }\n          .common-header { width: 100%; }\n          body { font-family: 'Courier New', monospace; font-size: 11px; margin: 20px; padding: 24px 24px 0 24px; }\n          .common-header { width: 100%; }\n          .print-header-row { display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 0; }\n          .print-header-left { text-align: left; }\n          .print-header-right { text-align: left; font-size: 10px; }\n          .report-title { font-weight: bold; font-size: 14px; margin-bottom: 6px; }\n          .report-subtitle { font-size: 11px; margin-bottom: 8px; }\n          .emp-info { font-size: 11px; margin-bottom: 6px; }\n          .date-range { font-size: 11px; margin-bottom: 10px; }\n          .print-meta { font-size: 10px; }\n          table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }\n          th, td { border: 0.5px solid #000; padding: 4px 6px; text-align: left; }\n          th { background: #f5f5f5; font-weight: bold; font-size: 11px; }\n          td { font-size: 10px; white-space: pre-line; }\n          @media print {\n            @page { margin: 0.5in; size: landscape; }\n            body { margin: 0; }\n            table { font-size: 11px; }\n            th, td { padding: 2px 4px; }\n            thead { display: table-header-group !important; }\n            /* Hide browser print header/footer */\n            @page {\n              margin-top: 0;\n              margin-bottom: 0;\n              margin-left: 0;\n              margin-right: 0;\n            }\n            body::before, body::after { display: none !important; }\n          }\n        </style>\n      </head>\n      <body>\n        ${Array.from({\n      length: totalPages\n    }, (_, i) => renderPage(i + 1)).join('')}\n      </body>\n      </html>\n    `;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-generation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-graph-up-arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 13\n          }, this), \"Report Generation Center\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header-subtitle\",\n          children: \"Generate comprehensive attendance and meal reports with advanced filtering options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-config\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"config-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(4, minmax(0, 1fr))',\n            gap: '16px',\n            alignItems: 'end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"reportType\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-file-earmark-text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 17\n              }, this), \"Report Type\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"reportType\",\n              value: reportType,\n              onChange: e => setReportType(e.target.value),\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"attendance\",\n                children: \"Attendance Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"meal\",\n                children: \"Meal Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"reportScope\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-people\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 17\n              }, this), \"Report Scope\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"reportScope\",\n              value: reportScope,\n              onChange: e => setReportScope(e.target.value),\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"individual\",\n                children: \"Individual Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"group\",\n                children: \"Group Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              gridColumn: 'span 1'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"employeeId\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-person-badge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 17\n              }, this), \"Employee ID\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 892,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"employeeId\",\n              value: employeeId,\n              onChange: e => setEmployeeId(e.target.value),\n              className: \"form-control\",\n              placeholder: \"Enter employee ID\",\n              required: reportScope === 'individual',\n              disabled: reportScope === 'group',\n              \"aria-disabled\": reportScope === 'group',\n              title: reportScope === 'group' ? 'Disabled for Group reports' : 'Enter employee ID',\n              style: {\n                cursor: reportScope === 'group' ? 'not-allowed' : 'text'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              gridColumn: 'span 1'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"divisionId\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-building\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 17\n              }, this), \"Division\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"divisionId\",\n              value: divisionId,\n              onChange: e => setDivisionId(e.target.value),\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"All Divisions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 17\n              }, this), (Array.isArray(divisions) ? divisions : []).map(division => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: division._id || division.id,\n                children: division.name || division.division_name\n              }, division._id || division.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              gridColumn: 'span 1'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sectionId\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-diagram-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 935,\n                columnNumber: 17\n              }, this), \"Section\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"sectionId\",\n              value: sectionId,\n              onChange: e => setSectionId(e.target.value),\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"All Sections\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 17\n              }, this), (Array.isArray(sections) ? sections : []).map(section => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: section._id || section.id,\n                children: section.name || section.section_name\n              }, section._id || section.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 938,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"startDate\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-calendar3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 956,\n                columnNumber: 17\n              }, this), \"Start Date\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"startDate\",\n              value: dateRange.startDate,\n              onChange: e => setDateRange({\n                ...dateRange,\n                startDate: e.target.value\n              }),\n              className: \"form-control\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"endDate\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-calendar3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 17\n              }, this), \"End Date\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              id: \"endDate\",\n              value: dateRange.endDate,\n              onChange: e => setDateRange({\n                ...dateRange,\n                endDate: e.target.value\n              }),\n              className: \"form-control\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          style: {\n            marginBottom: '40px',\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || !canGenerate,\n            className: \"btn btn-primary btn-generate\",\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-hourglass-split spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 994,\n                columnNumber: 19\n              }, this), \"Generating...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-play-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this), \"Generate Report\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-exclamation-triangle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 11\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 9\n    }, this), reportData && reportData.data && reportData.data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-summary attractive-summary-card\",\n          style: {\n            background: '#fff',\n            border: '1px solid #e0e0e0',\n            borderRadius: '8px',\n            padding: '18px 28px 16px 28px',\n            color: '#222',\n            fontFamily: 'Segoe UI, Arial, sans-serif',\n            fontSize: '1.05rem',\n            margin: '0 auto 18px auto',\n            boxShadow: '0 2px 8px 0 rgba(80,80,120,0.06)',\n            maxWidth: '98vw',\n            fontWeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 800,\n              fontSize: '1.25rem',\n              marginBottom: 10,\n              letterSpacing: '0.2px'\n            },\n            children: \"Report Filter Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '32px 48px',\n              marginBottom: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Type: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: reportType === 'attendance' ? 'Attendance Report' : 'Meal Report'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1037,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Scope: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: reportScope === 'group' ? 'Group' : 'Individual'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1038,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 17\n            }, this), reportScope === 'individual' && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Employee ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: employeeId || employeeInfo && (employeeInfo.employee_id || employeeInfo.id) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 19\n            }, this), reportScope === 'group' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Division: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: divisionId === 'all' ? 'All' : ((_divisions$find = divisions.find(d => d._id === divisionId || d.id === divisionId)) === null || _divisions$find === void 0 ? void 0 : _divisions$find.name) || divisionId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Section: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: sectionId === 'all' ? 'All' : ((_sections$find = sections.find(s => s._id === sectionId || s.id === sectionId)) === null || _sections$find === void 0 ? void 0 : _sections$find.name) || sectionId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1045,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: '32px 48px',\n              borderTop: '1px solid #eee',\n              paddingTop: 8\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Date Range: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: [dateRange.startDate, \" to \", dateRange.endDate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [reportData.reportType === 'group' ? 'Employees Found:' : 'Records Found:', \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: ((_reportData$data = reportData.data) === null || _reportData$data === void 0 ? void 0 : _reportData$data.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 99\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#666',\n                fontWeight: 400,\n                fontSize: '0.98rem',\n                marginLeft: 'auto'\n              },\n              children: [\"Generated at \", new Date().toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1052,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginTop: '18px',\n          marginBottom: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            fontWeight: 600,\n            fontSize: '1.15rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-table\",\n            style: {\n              marginRight: 10,\n              marginLeft: 12,\n              fontSize: '1.2rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 15\n          }, this), \"Data Preview\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1059,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-group\",\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 600,\n              fontSize: '1.15rem',\n              display: 'flex',\n              alignItems: 'center',\n              marginLeft: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-download\",\n              style: {\n                marginRight: 6,\n                fontSize: '1.2rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 17\n            }, this), \"Export Options\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => exportReport('pdf'),\n            className: \"btn btn-outline-primary\",\n            style: {\n              marginLeft: 8,\n              marginRight: 18,\n              display: 'flex',\n              alignItems: 'center',\n              fontWeight: 500,\n              fontSize: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-file-earmark-pdf\",\n              style: {\n                marginRight: 5,\n                fontSize: '1.1rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 17\n            }, this), \"Print PDF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: reportScope === 'group' ? /*#__PURE__*/_jsxDEV(GroupReport, {\n            ref: groupReportRef,\n            reportData: reportData,\n            getHeaders: getHeaders,\n            formatRow: formatRow,\n            reportType: reportType,\n            dateRange: dateRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(IndividualReport, {\n            ref: individualReportRef,\n            reportData: reportData,\n            getHeaders: getHeaders,\n            formatRow: formatRow,\n            reportType: reportType,\n            dateRange: dateRange,\n            employeeInfo: employeeInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 9\n    }, this) : reportData && (!reportData.data || reportData.data.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"empty-title\",\n          children: \"No Data Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-text\",\n          children: \"No records found for the selected criteria. Try adjusting your filters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 9\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-file-earmark-bar-graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"empty-title\",\n          children: \"Ready to Generate Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"empty-text\",\n          children: \"Configure your report parameters above and click \\\"Generate Report\\\" to start.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 840,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportGeneration, \"1mmjV0cMpQrPCC+s2DMu+9VmDNE=\", false, function () {\n  return [usePermission];\n});\n_c = ReportGeneration;\nexport default ReportGeneration;\nvar _c;\n$RefreshReg$(_c, \"ReportGeneration\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","usePermission","GroupReport","IndividualReport","jsxDEV","_jsxDEV","Fragment","_Fragment","ReportGeneration","_s","_divisions$find","_sections$find","_reportData$data","reportType","setReportType","reportScope","setReportScope","employeeId","setEmployeeId","divisionId","setDivisionId","sectionId","setSectionId","divisions","setDivisions","sections","setSections","allSections","setAllSections","dateRange","setDateRange","startDate","endDate","loading","setLoading","reportData","setReportData","error","setError","employeeInfo","setEmployeeInfo","groupReportRef","individualReportRef","ensureSeconds","timeVal","d","Date","isNaN","getTime","toLocaleTimeString","hour12","e","String","canGenerate","fetchDivisions","fetchAllSections","today","toISOString","split","fetchSectionsByDivision","divId","token","localStorage","getItem","isAttendanceReport","sectionsEndpoint","console","log","response","fetch","headers","ok","data","json","sectionsArray","Array","isArray","success","length","status","statusText","err","handleSubmit","preventDefault","apiUrl","payload","report_type","from_date","to_date","employee_id","division_id","section_id","params","URLSearchParams","scope","method","body","JSON","stringify","jsonErr","message","reportArray","hasOwnProperty","processedData","employees","employee_info","exportReport","format","handlePrint","alert","current","print","getHeaders","formatRow","record","_record$items","_record$items2","_record$user","_record$user2","_record$user3","mealTime","meal_time","items","map","item","name","quantity","join","reduce","total","date","meal_date","mealType","meal_type","location","user","employee_name","firstName","lastName","_record$scan_type","_record$scan_type2","punchDateObj","date_","punchDate","formattedDate","toLocaleDateString","day","month","year","replace","weekday","functionCode","scan_type","toUpperCase","eventDescription","employee_ID","emp_no","empNo","employeeName","time_","time","punchTime","_record$scan_type3","_record$scan_type4","printReport","printWindow","window","open","printContent","generatePrintContent","document","write","close","focus","reportTitle","employeeHeader","empNoVal","empNameVal","INDIVIDUAL_ROWS_PER_PAGE","GROUP_ROWS_PER_PAGE","rowsPerPage","punches","dateOrder","dates","dateSet","Set","forEach","p","add","from","sort","a","b","pd","inferredType","type","direction","push","emp","dailyAttendance","Object","keys","k","dayPunches","filter","pIndex","dayData","checkIn","checkOut","da","db","empA","empB","ta","tb","aIsIn","bIsIn","sortedRecords","idx","rec","_punchDateKey","pages","pagesOut","currentPage","lastKey","lastDateHeader","currentCount","currentDateCount","pushPage","slice","dateHeader","row","empIdVal","dateVal","key","cell","ci","DATES_PER_PAGE","totalPages","subtitle","empName","first","empid","emp_name","renderPage","pageNum","pageRows","isLastPage","header","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","display","gridTemplateColumns","gap","alignItems","htmlFor","id","value","onChange","target","gridColumn","placeholder","required","disabled","title","cursor","division","_id","division_name","section","section_name","marginBottom","justifyContent","background","border","borderRadius","padding","color","fontFamily","fontSize","margin","boxShadow","maxWidth","fontWeight","letterSpacing","flexWrap","find","s","borderTop","paddingTop","marginLeft","toLocaleString","marginTop","marginRight","onClick","ref","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/ReportGeneration.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport usePermission from '../../hooks/usePermission';\r\nimport './ReportGeneration.css';\r\nimport GroupReport from './GroupReport';\r\nimport IndividualReport from './IndividualReport';\r\n\r\nconst ReportGeneration = () => {\r\n  const [reportType, setReportType] = useState('attendance');\r\n  const [reportScope, setReportScope] = useState('individual');\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [divisionId, setDivisionId] = useState('all');\r\n  const [sectionId, setSectionId] = useState('all');\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [sections, setSections] = useState([]);\r\n  const [allSections, setAllSections] = useState([]);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [reportData, setReportData] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [employeeInfo, setEmployeeInfo] = useState(null);\r\n  const groupReportRef = useRef(null);\r\n  const individualReportRef = useRef(null);\r\n\r\n  // Return DB-provided time strings unchanged. If a Date or ISO string is provided, format to HH:mm:ss.\r\n  const ensureSeconds = (timeVal) => {\r\n    if (!timeVal && timeVal !== 0) return '';\r\n    if (typeof timeVal === 'string') return timeVal;\r\n    try {\r\n      const d = new Date(timeVal);\r\n      if (!isNaN(d.getTime())) {\r\n        return d.toLocaleTimeString('en-GB', { hour12: false });\r\n      }\r\n    } catch (e) {\r\n      // fallback\r\n    }\r\n    return String(timeVal);\r\n  };\r\n\r\n  // permission checks\r\n  const canGenerate = usePermission('reports', 'create');\r\n\r\n  // Fetch divisions and sections on component mount\r\n  useEffect(() => {\r\n    fetchDivisions();\r\n    fetchAllSections();\r\n    \r\n    // Set default date range to today\r\n    const today = new Date().toISOString().split('T')[0];\r\n    setDateRange({\r\n      startDate: today,\r\n      endDate: today\r\n    });\r\n  }, []);\r\n\r\n  // When scope changes to group, clear and block employeeId\r\n  useEffect(() => {\r\n    if (reportScope === 'group') {\r\n      setEmployeeId('');\r\n    }\r\n  }, [reportScope]);\r\n\r\n  const fetchSectionsByDivision = useCallback(async (divId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Use MySQL sections endpoint for attendance reports to get correct section IDs\r\n      const isAttendanceReport = reportType === 'attendance';\r\n      const sectionsEndpoint = isAttendanceReport \r\n        ? `http://localhost:5000/api/divisions/${divId}/mysql-sections`\r\n        : `http://localhost:5000/api/divisions/${divId}/sections`;\r\n      \r\n      console.log(`Fetching sections from: ${sectionsEndpoint}`); // Debug log\r\n      \r\n      const response = await fetch(sectionsEndpoint, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Sections response for division:', divId, data); // Debug log\r\n        \r\n        // Handle different response formats for MongoDB and MySQL\r\n        let sectionsArray = [];\r\n        if (Array.isArray(data)) {\r\n          sectionsArray = data;\r\n        } else if (data.data && Array.isArray(data.data)) {\r\n          sectionsArray = data.data;\r\n        } else if (data.sections && Array.isArray(data.sections)) {\r\n          sectionsArray = data.sections;\r\n        } else if (data.success && data.sections) {\r\n          sectionsArray = Array.isArray(data.sections) ? data.sections : [];\r\n        }\r\n        \r\n        console.log('Processed sections array:', sectionsArray); // Debug log\r\n        setSections(sectionsArray);\r\n        \r\n        // Reset section selection to 'all' when division changes\r\n        if (sectionsArray.length > 0) {\r\n          setSectionId('all');\r\n        }\r\n      } else {\r\n        console.error('Failed to fetch sections:', response.status, response.statusText);\r\n        // Don't show error for divisions that don't have MySQL sections\r\n        // Just set empty sections array\r\n        setSections([]);\r\n        setSectionId('all');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching sections by division:', err);\r\n      setSections([]);\r\n      setSectionId('all');\r\n    }\r\n  }, [reportType]); // Add reportType as dependency since it affects which endpoint to use\r\n\r\n  // Fetch sections when division changes\r\n  useEffect(() => {\r\n    if (divisionId && divisionId !== 'all') {\r\n      console.log('Fetching sections for division:', divisionId); // Debug log\r\n      fetchSectionsByDivision(divisionId);\r\n    } else {\r\n      console.log('Setting all sections'); // Debug log\r\n      setSections(allSections);\r\n      setSectionId('all');\r\n    }\r\n  }, [divisionId, allSections, fetchSectionsByDivision]);\r\n\r\n  const fetchDivisions = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/divisions', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Handle different response formats\r\n        if (Array.isArray(data)) {\r\n          setDivisions(data);\r\n        } else if (data.data && Array.isArray(data.data)) {\r\n          setDivisions(data.data);\r\n        } else if (data.divisions && Array.isArray(data.divisions)) {\r\n          setDivisions(data.divisions);\r\n        } else {\r\n          setDivisions([]);\r\n        }\r\n      } else {\r\n        setDivisions([]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching divisions:', err);\r\n      setDivisions([]);\r\n    }\r\n  };\r\n\r\n  const fetchAllSections = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/sections', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Handle different response formats for MongoDB\r\n        let sectionsArray = [];\r\n        if (Array.isArray(data)) {\r\n          sectionsArray = data;\r\n        } else if (data.data && Array.isArray(data.data)) {\r\n          sectionsArray = data.data;\r\n        } else if (data.sections && Array.isArray(data.sections)) {\r\n          sectionsArray = data.sections;\r\n        }\r\n        \r\n        setAllSections(sectionsArray);\r\n        setSections(sectionsArray);\r\n      } else {\r\n        setAllSections([]);\r\n        setSections([]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching sections:', err);\r\n      setAllSections([]);\r\n      setSections([]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!canGenerate) {\r\n      setError('You do not have permission to generate reports');\r\n      return;\r\n    }\r\n\r\n    if (!dateRange.startDate || !dateRange.endDate) {\r\n      setError('Please select both start and end dates');\r\n      return;\r\n    }\r\n\r\n    if (reportScope === 'individual' && !employeeId) {\r\n      setError('Please enter an employee ID for individual reports');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      let apiUrl = '';\r\n      let payload = {};\r\n\r\n      if (reportType === 'attendance') {\r\n        // Use MySQL API for attendance reports\r\n        apiUrl = 'http://localhost:5000/api/reports/mysql/attendance';\r\n        payload = {\r\n          report_type: reportScope,\r\n          from_date: dateRange.startDate,\r\n          to_date: dateRange.endDate\r\n        };\r\n        if (reportScope === 'individual') {\r\n          payload.employee_id = employeeId;\r\n        }\r\n        if (reportScope === 'group') {\r\n          if (divisionId !== 'all') payload.division_id = divisionId;\r\n          if (sectionId !== 'all') payload.section_id = sectionId;\r\n        }\r\n      } else if (reportType === 'meal') {\r\n        // Use MongoDB API for meal reports\r\n        apiUrl = 'http://localhost:5000/api/meal-reports';\r\n        const params = new URLSearchParams({\r\n          startDate: dateRange.startDate,\r\n          endDate: dateRange.endDate,\r\n          scope: reportScope,\r\n          ...(reportScope === 'individual' && { employeeId }),\r\n          ...(reportScope === 'group' && {\r\n            divisionId: divisionId !== 'all' ? divisionId : '',\r\n            sectionId: sectionId !== 'all' ? sectionId : ''\r\n          })\r\n        });\r\n        apiUrl += `?${params}`;\r\n      }\r\n\r\n      let response;\r\n      if (reportType === 'attendance') {\r\n        response = await fetch(apiUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(payload)\r\n        });\r\n      } else {\r\n        response = await fetch(apiUrl, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      }\r\n\r\n      let data;\r\n      try {\r\n        data = await response.json();\r\n      } catch (jsonErr) {\r\n        setError('Invalid response from server.');\r\n        setReportData(null);\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) {\r\n        setError(data.message || `HTTP error! status: ${response.status}`);\r\n        setReportData(null);\r\n        return;\r\n      }\r\n\r\n      // Handle MongoDB response format\r\n      const reportArray = Array.isArray(data.data) ? data.data : Array.isArray(data) ? data : [];\r\n      if ((data.success && reportArray.length > 0) || (!data.hasOwnProperty('success') && reportArray.length > 0)) {\r\n        // For group reports, add reportType and dates to the response\r\n        const processedData = {\r\n          ...data,\r\n          data: reportArray\r\n        };\r\n        \r\n        // If this is a group report, add the reportType for frontend handling\r\n        if (reportScope === 'group' && data.reportType === 'group') {\r\n          processedData.reportType = 'group';\r\n          processedData.employees = reportArray; // For backward compatibility\r\n        }\r\n        \r\n        setReportData(processedData);\r\n        if (data.employee_info) {\r\n          setEmployeeInfo(data.employee_info);\r\n        }\r\n        setError('');\r\n      } else if (reportArray.length === 0) {\r\n        setError('No records found for the selected criteria.');\r\n        setReportData({ ...data, data: [] });\r\n      } else {\r\n        setError(data.message || 'Failed to generate report');\r\n        setReportData(null);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error generating report:', err);\r\n      setError(err.message || 'Failed to generate report. Please try again.');\r\n      setReportData(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const exportReport = (format) => {\r\n    if (!reportData || !reportData.data || reportData.data.length === 0) {\r\n      setError('No data to export. Please generate a report first.');\r\n      return;\r\n    }\r\n    if (format === 'pdf') {\r\n      handlePrint();\r\n    }\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    if (!reportData || !reportData.data || reportData.data.length === 0) {\r\n      alert('No data to print. Please generate a report first.');\r\n      return;\r\n    }\r\n    if (reportScope === 'group') {\r\n      if (groupReportRef.current && typeof groupReportRef.current.print === 'function') {\r\n        groupReportRef.current.print();\r\n      } else {\r\n        alert('Group report print not available.');\r\n      }\r\n    } else {\r\n      if (individualReportRef.current && typeof individualReportRef.current.print === 'function') {\r\n        individualReportRef.current.print();\r\n      } else {\r\n        alert('Individual report print not available.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const getHeaders = () => {\r\n    if (reportType === 'meal') {\r\n      return reportScope === 'individual'\r\n        ? ['Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items']\r\n        : ['Employee ID', 'Employee Name', 'Date', 'Time', 'Meal Type', 'Location', 'Quantity', 'Items'];\r\n    } else if (reportScope === 'group' && reportData?.reportType === 'group') {\r\n        // For group scope we want a flat punch-list style table similar to individual reports.\r\n        return ['Emp No', 'Emp Name', 'Meal-Pkt-Mny', 'Punch Date', 'Punch Time', 'Function', 'Event Description'];\r\n    } else {\r\n      // Individual attendance report headers to match your reference exactly\r\n      return ['Emp No', 'Emp Name', 'Meal-Pkt-Mny', 'Punch Date', 'Punch Time', 'Function', 'Event Description'];\r\n    }\r\n  };\r\n\r\n  // formatRow returns an array of cell values for a single punch/record\r\n  // If called with an attendance 'punch' object, it returns the standard row.\r\n  const formatRow = (record) => {\r\n    if (reportType === 'meal') {\r\n      const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString();\r\n      const items = record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal';\r\n      const quantity = record.items?.reduce((total, item) => total + item.quantity, 0) || 1;\r\n      \r\n      return reportScope === 'individual'\r\n        ? [record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items]\r\n        : [record.employee_id || record.user?.employeeId, record.employee_name || `${record.user?.firstName} ${record.user?.lastName}`, record.date || record.meal_date, mealTime, record.mealType || record.meal_type, record.location || 'Cafeteria', quantity, items];\r\n    } else if (reportScope === 'group' && reportData?.reportType === 'group') {\r\n      // For group reports we may be formatting individual punch records.\r\n      // The incoming `record` in the group-preview mapping will be a punch-like object\r\n      // if we transformed the server response earlier. We expect fields similar to individual records.\r\n      // Format: Emp No, Emp Name, Meal-Pkt-Mny, Punch Date, Punch Time, Function, Event Description\r\n      const punchDateObj = record.date_ ? new Date(record.date_) : (record.punchDate ? new Date(record.punchDate) : null);\r\n      const formattedDate = punchDateObj && !isNaN(punchDateObj.getTime())\r\n        ? (punchDateObj.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' }).replace(/\\//g, '-') + ' ' + punchDateObj.toLocaleDateString('en-US', { weekday: 'short' }))\r\n        : (record.punchDate || record.date_ || '');\r\n\r\n      const functionCode = record.scan_type?.toUpperCase() === 'IN' ? 'F1-0' : 'F4-0';\r\n      const eventDescription = `${record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF'}Granted(ID & F tally plan COM0002)`;\r\n\r\n      return [\r\n        record.employee_ID || record.employeeId || record.emp_no || record.empNo || '',\r\n        record.employee_name || record.employeeName || record.name || 'Unknown',\r\n        'I',\r\n        formattedDate,\r\n        ensureSeconds(record.time_ || record.time || record.punchTime || ''),\r\n        functionCode,\r\n        eventDescription\r\n      ];\r\n    } else {\r\n      // Individual attendance report format to match your reference exactly\r\n      // Format: Emp No, Emp Name, Meal-Pkt-Mny, Punch Date, Punch Time, Function, Event Description\r\n      \r\n      // Format the punch date as \"DD-MMM-YY Day\" like \"19-Aug-25 Tue\"\r\n      const punchDate = new Date(record.date_);\r\n      const formattedDate = punchDate.toLocaleDateString('en-GB', {\r\n        day: '2-digit',\r\n        month: 'short',\r\n        year: '2-digit'\r\n      }).replace(/\\//g, '-') + ' ' + punchDate.toLocaleDateString('en-US', { weekday: 'short' });\r\n      \r\n      // Determine function code based on scan type\r\n      const functionCode = record.scan_type?.toUpperCase() === 'IN' ? 'F1-0' : 'F4-0';\r\n      \r\n      // Format event description like your reference\r\n      const eventDescription = `${record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF'}Granted(ID & F tally plan COM0002)`;\r\n      \r\n      return [\r\n        record.employee_ID || record.employeeId, // Emp No\r\n        record.employee_name || record.employeeName || 'Unknown', // Emp Name\r\n        'I', // Meal-Pkt-Mny (always \"I\" for attendance records as shown in your reference)\r\n        formattedDate, // Punch Date\r\n  ensureSeconds(record.time_), // Punch Time\r\n        functionCode, // Function\r\n        eventDescription // Event Description\r\n      ];\r\n    }\r\n  };\r\n\r\n  const printReport = () => {\r\n    if (!reportData || !reportData.data || reportData.data.length === 0) {\r\n      alert('No data to print. Please generate a report first.');\r\n      return;\r\n    }\r\n    \r\n  // Create a new window for printing with formatted content, avoid about:blank in URL\r\n  const printWindow = window.open(' ', '', 'width=900,height=700');\r\n  const printContent = generatePrintContent();\r\n  printWindow.document.open();\r\n  printWindow.document.write(printContent);\r\n  printWindow.document.close();\r\n  printWindow.focus();\r\n  printWindow.print();\r\n  printWindow.close();\r\n  };\r\n\r\n  const generatePrintContent = () => {\r\n    const reportTitle = reportType === 'attendance' ? 'History Transaction Report' : 'Meal Consumption Report';\r\n    // const subtitle = reportType === 'attendance' ? 'All Granted(ID & FP) Records' : 'All Meal Records';\r\n    \r\n    let employeeHeader = '';\r\n    if (reportScope === 'individual' && (employeeInfo || employeeId)) {\r\n      const empNoVal = (employeeInfo && (employeeInfo.employee_id || employeeInfo.employee_ID)) || employeeId || '';\r\n      const empNameVal = (employeeInfo && (employeeInfo.name || employeeInfo.employee_name || employeeInfo.employeeName)) || '';\r\n      employeeHeader = `\r\n        <table style=\"margin-bottom: 12px; border-collapse: collapse;\">\r\n          <tr>\r\n            <td style=\"vertical-align: top; padding-right: 8px; font-weight: bold; width: 90px;\">Emp No :</td>\r\n            <td style=\"vertical-align: top;\">${empNoVal}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style=\"vertical-align: top; padding-right: 8px; font-weight: bold;\">Emp Name :</td>\r\n            <td style=\"vertical-align: top;\">${empNameVal}</td>\r\n          </tr>\r\n          <tr>\r\n            <td style=\"vertical-align: top; padding-right: 8px; font-weight: bold;\">Date From :</td>\r\n            <td style=\"vertical-align: top;\">${dateRange.startDate} &nbsp; To : &nbsp; ${dateRange.endDate}</td>\r\n          </tr>\r\n        </table>\r\n      `;\r\n    }\r\n\r\n  const headers = getHeaders();\r\n  // Rows per printed page. Use a sensible default for individual reports and keep\r\n  // a larger capacity for group reports. Make the individual value easy to tweak.\r\n  const INDIVIDUAL_ROWS_PER_PAGE = 40; // increased to show more records per individual printed page\r\n  const GROUP_ROWS_PER_PAGE = 32;\r\n  const rowsPerPage = reportScope === 'individual' ? INDIVIDUAL_ROWS_PER_PAGE : GROUP_ROWS_PER_PAGE;\r\n  // Build flattened punches array (date-first) so print matches the group preview\r\n  const punches = [];\r\n  // Determine date order and flatten depending on report shape\r\n  let dateOrder = [];\r\n\r\n  if (Array.isArray(reportData.dates) && reportData.dates.length > 0) {\r\n    dateOrder = reportData.dates;\r\n  } else if (reportScope === 'individual') {\r\n    // reportData.data for individual reports is expected to be a flat array of punch/record objects.\r\n    // Collect unique dates from those records and build punches directly.\r\n    const dateSet = new Set();\r\n    (Array.isArray(reportData.data) ? reportData.data : []).forEach(p => {\r\n      const d = p.date || p.punchDate || p.date_;\r\n      if (d) dateSet.add(d);\r\n    });\r\n    dateOrder = Array.from(dateSet).sort((a, b) => new Date(a) - new Date(b));\r\n\r\n    // For each date, push all punches that belong to that date\r\n    dateOrder.forEach(date => {\r\n      (Array.isArray(reportData.data) ? reportData.data : []).forEach(p => {\r\n        const pd = p.date || p.punchDate || p.date_;\r\n        if (String(pd) !== String(date)) return;\r\n        const inferredType = (p && (p.scan_type || p.type || p.direction))\r\n          ? (p.scan_type || p.type || p.direction)\r\n          : 'IN';\r\n        punches.push({\r\n          employee_ID: p.employee_ID || p.employeeId || p.emp_no || p.empNo || '',\r\n          employee_name: p.employee_name || p.employeeName || p.name || '',\r\n          date_: date,\r\n          time_: p.time || p.punchTime || p.time_ || (typeof p === 'string' ? p : ''),\r\n          scan_type: inferredType\r\n        });\r\n      });\r\n    });\r\n  } else {\r\n    // Group-shaped report: each element is an employee with punches/dailyAttendance\r\n    const dateSet = new Set();\r\n    reportData.data.forEach(emp => {\r\n      if (Array.isArray(emp.punches)) {\r\n        emp.punches.forEach(p => {\r\n          const d = p.date || p.punchDate || p.date_;\r\n          if (d) dateSet.add(d);\r\n        });\r\n      }\r\n      if (emp.dailyAttendance) {\r\n        Object.keys(emp.dailyAttendance).forEach(k => dateSet.add(k));\r\n      }\r\n    });\r\n    dateOrder = Array.from(dateSet).sort((a, b) => new Date(a) - new Date(b));\r\n\r\n    dateOrder.forEach(date => {\r\n      reportData.data.forEach(emp => {\r\n        if (Array.isArray(emp.punches) && emp.punches.length > 0) {\r\n          const dayPunches = emp.punches.filter(p => {\r\n            const pd = p.date || p.punchDate || p.date_;\r\n            return String(pd) === String(date);\r\n          });\r\n          dayPunches.forEach((p, pIndex) => {\r\n            const inferredType = (p && (p.scan_type || p.type || p.direction))\r\n              ? (p.scan_type || p.type || p.direction)\r\n              : (pIndex % 2 === 0 ? 'IN' : 'OUT');\r\n            punches.push({\r\n              employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\r\n              employee_name: emp.employeeName || emp.employee_name || emp.name,\r\n              date_: date,\r\n              time_: p.time || p.punchTime || p.time_ || (typeof p === 'string' ? p : ''),\r\n              scan_type: inferredType\r\n            });\r\n          });\r\n        } else if (emp.dailyAttendance && emp.dailyAttendance[date]) {\r\n          const dayData = emp.dailyAttendance[date];\r\n          if (Array.isArray(dayData.punches) && dayData.punches.length > 0) {\r\n            dayData.punches.forEach((p, pIndex) => {\r\n              const inferredType = (p && (p.scan_type || p.type || p.direction))\r\n                ? (p.scan_type || p.type || p.direction)\r\n                : (pIndex % 2 === 0 ? 'IN' : 'OUT');\r\n              punches.push({\r\n                employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\r\n                employee_name: emp.employeeName || emp.employee_name || emp.name,\r\n                date_: date,\r\n                time_: p.time || (typeof p === 'string' ? p : ''),\r\n                scan_type: inferredType\r\n              });\r\n            });\r\n          } else {\r\n            if (dayData.checkIn) {\r\n              punches.push({\r\n                employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\r\n                employee_name: emp.employeeName || emp.employee_name || emp.name,\r\n                date_: date,\r\n                time_: dayData.checkIn,\r\n                scan_type: 'IN'\r\n              });\r\n            }\r\n            if (dayData.checkOut) {\r\n              punches.push({\r\n                employee_ID: emp.employeeId || emp.employee_ID || emp.emp_no || emp.empNo,\r\n                employee_name: emp.employeeName || emp.employee_name || emp.name,\r\n                date_: date,\r\n                time_: dayData.checkOut,\r\n                scan_type: 'OUT'\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Sort punches by date, employee, time, with IN before OUT for ties\r\n  punches.sort((a, b) => {\r\n    const da = new Date(a.date_ || '');\r\n    const db = new Date(b.date_ || '');\r\n    if (!isNaN(da.getTime()) && !isNaN(db.getTime())) {\r\n      if (da < db) return -1;\r\n      if (da > db) return 1;\r\n    } else {\r\n      if ((a.date_ || '') < (b.date_ || '')) return -1;\r\n      if ((a.date_ || '') > (b.date_ || '')) return 1;\r\n    }\r\n    const empA = String(a.employee_ID || '');\r\n    const empB = String(b.employee_ID || '');\r\n    if (empA < empB) return -1;\r\n    if (empA > empB) return 1;\r\n    const ta = a.time_ || '';\r\n    const tb = b.time_ || '';\r\n    if (ta < tb) return -1;\r\n    if (ta > tb) return 1;\r\n    const aIsIn = (a.scan_type || '').toUpperCase() === 'IN';\r\n    const bIsIn = (b.scan_type || '').toUpperCase() === 'IN';\r\n    if (aIsIn && !bIsIn) return -1;\r\n    if (!aIsIn && bIsIn) return 1;\r\n    return 0;\r\n  });\r\n\r\n  // Build sortedRecords compatible with later print rendering\r\n  const sortedRecords = punches.map((p, idx) => {\r\n    const rec = { ...p };\r\n    // build human readable punch date key used for display grouping\r\n    const punchDate = new Date(p.date_);\r\n    rec._punchDateKey = !isNaN(punchDate.getTime())\r\n      ? (punchDate.toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' }).replace(/\\//g, '-') + ' ' + punchDate.toLocaleDateString('en-US', { weekday: 'short' }))\r\n      : p.date_;\r\n    return rec;\r\n  });\r\n\r\n  // For print, suppress duplicate Emp/Name/Meal-Pkt-Mny/Punch Date similar to preview\r\n  // Build pages so every new date starts on a fresh page\r\n  const pages = (() => {\r\n    const pagesOut = [];\r\n  let currentPage = [];\r\n  let lastKey = null; // empId|date\r\n  let lastDateHeader = null;\r\n  let currentCount = 0;\r\n  // For individual reports, count distinct dates per page (user requested 8 dates/page)\r\n  let currentDateCount = 0;\r\n\r\n    const pushPage = () => {\r\n      if (currentPage.length > 0) {\r\n        pagesOut.push(currentPage.slice());\r\n        currentPage = [];\r\n        currentCount = 0;\r\n        lastKey = null; // reset duplicate suppression at page boundary\r\n      }\r\n    };\r\n\r\n    sortedRecords.forEach(record => {\r\n      const dateHeader = record._punchDateKey || (record.date_ || '');\r\n      // If date changed, insert a date header. For group reports we ensure the header\r\n      // sits at the top of a new page; for individual reports we just inject the header\r\n      // without forcing a page break.\r\n      if (lastDateHeader !== dateHeader) {\r\n        lastDateHeader = dateHeader;\r\n        if ((reportScope === 'group' || reportData.reportType === 'group') && currentCount > 0) {\r\n          // finish current page and start a new one so date header sits at top (group only)\r\n          pushPage();\r\n        }\r\n        // inject date header row on the current page\r\n        currentPage.push(`<tr style=\"background: #e9ecef;\"><td colspan=\"7\" style=\"font-weight: bold; font-size: 11px; text-align: left; padding: 8px 12px; border: 1px solid #000;\">Date: ${dateHeader}</td></tr>`);\r\n        currentCount++;\r\n        // If individual report, increment the distinct date counter and check page limit\r\n        if (reportScope === 'individual') {\r\n          currentDateCount++;\r\n        }\r\n        lastKey = null; // reset duplicate suppression when date header changes\r\n      }\r\n\r\n      const row = formatRow(record);\r\n      const empIdVal = record.employee_ID || record.employeeId || record.emp_no || record.empNo || '';\r\n      const dateVal = dateHeader;\r\n      const key = `${empIdVal}||${dateVal}`;\r\n      if (lastKey === key) {\r\n        if (row.length > 0) row[0] = '';\r\n        if (row.length > 1) row[1] = '';\r\n        if (row.length > 2) row[2] = '';\r\n        if (row.length > 3) row[3] = '';\r\n      } else {\r\n        lastKey = key;\r\n      }\r\n\r\n  currentPage.push(`<tr>${row.map((cell, ci) => `<td style=\"border: 1px solid #000; padding: 4px 6px; text-align: left; font-size: 10px; white-space: pre-line;\">${ci === 0 ? '<strong>' + cell + '</strong>' : cell}</td>`).join('')}</tr>`);\r\n      currentCount++;\r\n\r\n      // If page capacity reached, push page and continue\r\n      if (reportScope === 'individual') {\r\n        // For individual scope, paginate by distinct date headers: 8 dates per page\r\n        const DATES_PER_PAGE = 8;\r\n        if (currentDateCount >= DATES_PER_PAGE) {\r\n          pushPage();\r\n          currentDateCount = 0;\r\n        }\r\n      } else {\r\n        if (currentCount >= rowsPerPage) {\r\n          pushPage();\r\n        }\r\n      }\r\n    });\r\n\r\n    // push remaining\r\n    if (currentPage.length > 0) pagesOut.push(currentPage.slice());\r\n    return pagesOut;\r\n  })();\r\n  const totalPages = pages.length || 1;\r\n\r\n    // Subtitle for attendance report\r\n    const subtitle = reportType === 'attendance' ? 'All Granted(ID & FP) Records' : 'All Meal Records';\r\n    // Employee info for print\r\n    let empNo = '';\r\n    let empName = '';\r\n    if (reportScope === 'individual' && employeeInfo) {\r\n      empNo = employeeInfo.employee_id || employeeInfo.employee_ID || employeeId || '';\r\n      empName = employeeInfo.name || employeeInfo.employee_name || employeeInfo.employeeName || '';\r\n    } else if (reportData && reportData.data && reportData.data.length > 0) {\r\n      // Try to extract from first record for group reports\r\n      const first = reportData.data[0];\r\n      empNo =\r\n        first.employee_id ||\r\n        first.employee_ID ||\r\n        first.emp_no ||\r\n        first.empNo ||\r\n        first.empid ||\r\n        first.employeeId ||\r\n        '';\r\n      empName =\r\n        first.employee_name ||\r\n        first.employeeName ||\r\n        first.emp_name ||\r\n        first.name ||\r\n        '';\r\n    }\r\n\r\n    function renderPage(pageNum) {\r\n  const pageRows = (pages[pageNum - 1] || []).join('');\r\n      // Common header for each page\r\n      // Add signature lines only on the last page\r\n      const isLastPage = pageNum === totalPages;\r\n      return `\r\n        <div class=\"common-header\" style=\"page-break-before: ${pageNum > 1 ? 'always' : 'auto'}; width: 100%;\">\r\n          <!-- Reuse app header markup so printed header matches .report-header styles -->\r\n          <div class=\"report-header\" style=\"padding:8px 0; margin-bottom:6px;\">\r\n            <div class=\"header-content\" style=\"text-align:left; display:flex; justify-content:space-between; align-items:flex-start;\">\r\n              <div style=\"max-width:70%;\">\r\n                <h1 style=\"margin:0; display:flex; align-items:center; gap:8px; font-family: 'Courier New', monospace;\">${reportTitle}</h1>\r\n                <div class=\"header-subtitle\" style=\"font-size:11px; margin-top:4px;\"><strong>${subtitle}</strong></div>\r\n                <!-- spacer to create a blank line between subtitle and date-range -->\r\n                <div style=\"height:8px;\">&nbsp;</div>\r\n                ${reportScope === 'individual' ? (employeeHeader || `<div class=\"date-range\" style=\"margin-top:6px; font-size:11px;\"><strong>Date From :</strong> ${dateRange.startDate} <strong>To :</strong> ${dateRange.endDate}</div>`) : `<div class=\"date-range\" style=\"margin-top:6px; font-size:11px;\"><strong>Date From :</strong> ${dateRange.startDate} <strong>To :</strong> ${dateRange.endDate}</div>`}\r\n              </div>\r\n              <div style=\"text-align:left; font-size:10px;\" class=\"print-meta\">\r\n                <div style=\"font-size:10px;\">Printed Date : ${new Date().toLocaleDateString()}</div>\r\n                <div style=\"font-size:10px;\">Printed Time : ${new Date().toLocaleTimeString()}</div>\r\n                <div style=\"font-size:10px;\">Page ${pageNum} of ${totalPages}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"header-content\" style=\"max-width:1200px; margin:0 auto; padding:0 12px;\">\r\n            <table style=\"width:100%; border-collapse: collapse;\">\r\n              <thead>\r\n                <tr>${headers.map(header => `<th style=\"font-size: 11px; padding: 4px 2px; border: 0.5px solid #000; text-align: left;\">${header === 'Emp No' ? '<strong>' + header + '</strong>' : header}</th>`).join('')}</tr>\r\n              </thead>\r\n              <tbody>\r\n                ${pageRows}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          ${isLastPage ? `\r\n          <div style=\"margin-top: 60px; width: 100%;\">\r\n            <table style=\"width:100%; border-collapse: collapse; border: none;\">\r\n              <tbody>\r\n                <tr>\r\n                  <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\r\n                  <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                  <td style=\"width:15%; vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Date</td>\r\n                  <td style=\"width:35%; vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                </tr>\r\n                <tr>\r\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 1</td>\r\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; font-size:11px; white-space: nowrap;\">Authorized Signature 2</td>\r\n                  <td style=\"vertical-align: middle; padding:6px 8px; border: none; white-space: nowrap;\"><span style=\"display:inline-block; font-family: 'Courier New', monospace; font-size:9px; letter-spacing:1px; line-height:1;\">....................</span></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          ` : ''}\r\n        </div>\r\n      `;\r\n    }\r\n    return `\r\n      <!DOCTYPE html>\r\n      <html>\r\n      <head>\r\n        <title>${reportTitle}</title>\r\n        <style>\r\n          /* Minimal header styles copied from ReportGeneration.css but adjusted for print: white background and black text */\r\n          .report-header { background: #ffffff; padding: 8px 0; margin-bottom: 6px; }\r\n          .header-content { max-width: 1200px; margin: 0 auto; padding: 0 12px; text-align: left; position: relative; z-index: 2; }\r\n          .header-content h1 { font-weight: 700; font-size: 14px; margin: 0; color: #000; }\r\n          .header-subtitle { font-size: 11px; margin-top: 4px; color: #000; }\r\n          .employee-info, .date-range { font-size: 11px; margin-top: 6px; color: #000; }\r\n          .common-header { width: 100%; }\r\n          body { font-family: 'Courier New', monospace; font-size: 11px; margin: 20px; padding: 24px 24px 0 24px; }\r\n          .common-header { width: 100%; }\r\n          .print-header-row { display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 0; }\r\n          .print-header-left { text-align: left; }\r\n          .print-header-right { text-align: left; font-size: 10px; }\r\n          .report-title { font-weight: bold; font-size: 14px; margin-bottom: 6px; }\r\n          .report-subtitle { font-size: 11px; margin-bottom: 8px; }\r\n          .emp-info { font-size: 11px; margin-bottom: 6px; }\r\n          .date-range { font-size: 11px; margin-bottom: 10px; }\r\n          .print-meta { font-size: 10px; }\r\n          table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }\r\n          th, td { border: 0.5px solid #000; padding: 4px 6px; text-align: left; }\r\n          th { background: #f5f5f5; font-weight: bold; font-size: 11px; }\r\n          td { font-size: 10px; white-space: pre-line; }\r\n          @media print {\r\n            @page { margin: 0.5in; size: landscape; }\r\n            body { margin: 0; }\r\n            table { font-size: 11px; }\r\n            th, td { padding: 2px 4px; }\r\n            thead { display: table-header-group !important; }\r\n            /* Hide browser print header/footer */\r\n            @page {\r\n              margin-top: 0;\r\n              margin-bottom: 0;\r\n              margin-left: 0;\r\n              margin-right: 0;\r\n            }\r\n            body::before, body::after { display: none !important; }\r\n          }\r\n        </style>\r\n      </head>\r\n      <body>\r\n        ${Array.from({length: totalPages}, (_, i) => renderPage(i + 1)).join('')}\r\n      </body>\r\n      </html>\r\n    `;\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-generation\">\r\n      {/* Header Section */}\r\n      <div className=\"report-header\">\r\n        <div className=\"header-content\">\r\n          <h1>\r\n            <i className=\"bi bi-graph-up-arrow\"></i>\r\n            Report Generation Center\r\n          </h1>\r\n          <p className=\"header-subtitle\">Generate comprehensive attendance and meal reports with advanced filtering options</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Report Configuration Form */}\r\n      <div className=\"report-config\">\r\n        <form onSubmit={handleSubmit} className=\"config-form\">\r\n          <div className=\"form-grid\" style={{display: 'grid', gridTemplateColumns: 'repeat(4, minmax(0, 1fr))', gap: '16px', alignItems: 'end'}}>\r\n            {/* Report Type Selection */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"reportType\">\r\n                <i className=\"bi bi-file-earmark-text\"></i>\r\n                Report Type\r\n              </label>\r\n              <select\r\n                id=\"reportType\"\r\n                value={reportType}\r\n                onChange={(e) => setReportType(e.target.value)}\r\n                className=\"form-control\"\r\n              >\r\n                <option value=\"attendance\">Attendance Report</option>\r\n                <option value=\"meal\">Meal Report</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Report Scope Selection */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"reportScope\">\r\n                <i className=\"bi bi-people\"></i>\r\n                Report Scope\r\n              </label>\r\n              <select\r\n                id=\"reportScope\"\r\n                value={reportScope}\r\n                onChange={(e) => setReportScope(e.target.value)}\r\n                className=\"form-control\"\r\n              >\r\n                <option value=\"individual\">Individual Report</option>\r\n                <option value=\"group\">Group Report</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Employee ID - always visible, required only for individual scope */}\r\n            <div className=\"form-group\" style={{gridColumn: 'span 1'}}>\r\n              <label htmlFor=\"employeeId\">\r\n                <i className=\"bi bi-person-badge\"></i>\r\n                Employee ID\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"employeeId\"\r\n                value={employeeId}\r\n                onChange={(e) => setEmployeeId(e.target.value)}\r\n                className=\"form-control\"\r\n                placeholder=\"Enter employee ID\"\r\n                required={reportScope === 'individual'}\r\n                disabled={reportScope === 'group'}\r\n                aria-disabled={reportScope === 'group'}\r\n                title={reportScope === 'group' ? 'Disabled for Group reports' : 'Enter employee ID'}\r\n                style={{ cursor: reportScope === 'group' ? 'not-allowed' : 'text' }}\r\n              />\r\n            </div>\r\n\r\n            {/* Division - always visible, enabled only for group scope */}\r\n            <div className=\"form-group\" style={{gridColumn: 'span 1'}}>\r\n              <label htmlFor=\"divisionId\">\r\n                <i className=\"bi bi-building\"></i>\r\n                Division\r\n              </label>\r\n              <select\r\n                id=\"divisionId\"\r\n                value={divisionId}\r\n                onChange={(e) => setDivisionId(e.target.value)}\r\n                className=\"form-control\"\r\n              >\r\n                <option value=\"all\">All Divisions</option>\r\n                {(Array.isArray(divisions) ? divisions : []).map(division => (\r\n                  <option key={division._id || division.id} value={division._id || division.id}>\r\n                    {division.name || division.division_name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Section - always visible, enabled only for group scope */}\r\n            <div className=\"form-group\" style={{gridColumn: 'span 1'}}>\r\n              <label htmlFor=\"sectionId\">\r\n                <i className=\"bi bi-diagram-3\"></i>\r\n                Section\r\n              </label>\r\n              <select\r\n                id=\"sectionId\"\r\n                value={sectionId}\r\n                onChange={(e) => setSectionId(e.target.value)}\r\n                className=\"form-control\"\r\n              >\r\n                <option value=\"all\">All Sections</option>\r\n                {(Array.isArray(sections) ? sections : []).map(section => (\r\n                  <option key={section._id || section.id} value={section._id || section.id}>\r\n                    {section.name || section.section_name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Date Range */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">\r\n                <i className=\"bi bi-calendar3\"></i>\r\n                Start Date\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"startDate\"\r\n                value={dateRange.startDate}\r\n                onChange={(e) => setDateRange({...dateRange, startDate: e.target.value})}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"endDate\">\r\n                <i className=\"bi bi-calendar3\"></i>\r\n                End Date\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                id=\"endDate\"\r\n                value={dateRange.endDate}\r\n                onChange={(e) => setDateRange({...dateRange, endDate: e.target.value})}\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Generate Button */}\r\n          <div className=\"form-actions\" style={{ marginBottom: '40px', display: 'flex', justifyContent: 'center' }}>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={loading || !canGenerate}\r\n              className=\"btn btn-primary btn-generate\"\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <i className=\"bi bi-hourglass-split spin\"></i>\r\n                  Generating...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"bi bi-play-circle\"></i>\r\n                  Generate Report\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <i className=\"bi bi-exclamation-triangle\"></i>\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* Report Results */}\r\n      {reportData && (\r\n        (reportData.data && reportData.data.length > 0)\r\n      ) ? (\r\n        <div className=\"report-results\">\r\n          <div className=\"results-header\">\r\n            <div className=\"filter-summary attractive-summary-card\" style={{\r\n              background: '#fff',\r\n              border: '1px solid #e0e0e0',\r\n              borderRadius: '8px',\r\n              padding: '18px 28px 16px 28px',\r\n              color: '#222',\r\n              fontFamily: 'Segoe UI, Arial, sans-serif',\r\n              fontSize: '1.05rem',\r\n              margin: '0 auto 18px auto',\r\n              boxShadow: '0 2px 8px 0 rgba(80,80,120,0.06)',\r\n              maxWidth: '98vw',\r\n              fontWeight: 500\r\n            }}>\r\n              <div style={{fontWeight: 800, fontSize: '1.25rem', marginBottom: 10, letterSpacing: '0.2px'}}>Report Filter Summary</div>\r\n              <div style={{display: 'flex', flexWrap: 'wrap', gap: '32px 48px', marginBottom: 6}}>\r\n                <span>Type: <b>{reportType === 'attendance' ? 'Attendance Report' : 'Meal Report'}</b></span>\r\n                <span>Scope: <b>{reportScope === 'group' ? 'Group' : 'Individual'}</b></span>\r\n                {reportScope === 'individual' && (\r\n                  <span>Employee ID: <b>{employeeId || (employeeInfo && (employeeInfo.employee_id || employeeInfo.id)) || 'N/A'}</b></span>\r\n                )}\r\n                {reportScope === 'group' && (\r\n                  <>\r\n                    <span>Division: <b>{divisionId === 'all' ? 'All' : (divisions.find(d => d._id === divisionId || d.id === divisionId)?.name || divisionId)}</b></span>\r\n                    <span>Section: <b>{sectionId === 'all' ? 'All' : (sections.find(s => s._id === sectionId || s.id === sectionId)?.name || sectionId)}</b></span>\r\n                  </>\r\n                )}\r\n              </div>\r\n              <div style={{display: 'flex', flexWrap: 'wrap', gap: '32px 48px', borderTop: '1px solid #eee', paddingTop: 8}}>\r\n                <span>Date Range: <b>{dateRange.startDate} to {dateRange.endDate}</b></span>\r\n                <span>{reportData.reportType === 'group' ? 'Employees Found:' : 'Records Found:'} <b>{reportData.data?.length || 0}</b></span>\r\n                <span style={{color: '#666', fontWeight: 400, fontSize: '0.98rem', marginLeft: 'auto'}}>Generated at {new Date().toLocaleString()}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Data Preview + Export Row */}\r\n          <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: '18px', marginBottom: '8px'}}>\r\n            <div style={{display: 'flex', alignItems: 'center', fontWeight: 600, fontSize: '1.15rem'}}>\r\n              <i className=\"bi bi-table\" style={{marginRight: 10, marginLeft: 12, fontSize: '1.2rem'}}></i>\r\n              Data Preview\r\n            </div>\r\n            <div className=\"action-group\" style={{display: 'flex', alignItems: 'center', gap: '12px'}}>\r\n              <span style={{fontWeight: 600, fontSize: '1.15rem', display: 'flex', alignItems: 'center', marginLeft: 12}}>\r\n                <i className=\"bi bi-download\" style={{marginRight: 6, fontSize: '1.2rem'}}></i>\r\n                Export Options\r\n              </span>\r\n              <button\r\n                onClick={() => exportReport('pdf')}\r\n                className=\"btn btn-outline-primary\"\r\n                style={{marginLeft: 8, marginRight: 18, display: 'flex', alignItems: 'center', fontWeight: 500, fontSize: '1rem'}}\r\n              >\r\n                <i className=\"bi bi-file-earmark-pdf\" style={{marginRight: 5, fontSize: '1.1rem'}}></i>\r\n                Print PDF\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"data-preview\">\r\n            <div className=\"table-responsive\">\r\n              {reportScope === 'group' ? (\r\n                <GroupReport\r\n                  ref={groupReportRef}\r\n                  reportData={reportData}\r\n                  getHeaders={getHeaders}\r\n                  formatRow={formatRow}\r\n                  reportType={reportType}\r\n                  dateRange={dateRange}\r\n                />\r\n              ) : (\r\n                <IndividualReport\r\n                  ref={individualReportRef}\r\n                  reportData={reportData}\r\n                  getHeaders={getHeaders}\r\n                  formatRow={formatRow}\r\n                  reportType={reportType}\r\n                  dateRange={dateRange}\r\n                  employeeInfo={employeeInfo}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : reportData && (\r\n        (!reportData.data || reportData.data.length === 0)\r\n      ) ? (\r\n        <div className=\"report-results\">\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">\r\n              <i className=\"bi bi-inbox\"></i>\r\n            </div>\r\n            <h4 className=\"empty-title\">No Data Found</h4>\r\n            <p className=\"empty-text\">No records found for the selected criteria. Try adjusting your filters.</p>\r\n          </div>\r\n        </div>\r\n      ) : !loading && (\r\n        <div className=\"report-results\">\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">\r\n              <i className=\"bi bi-file-earmark-bar-graph\"></i>\r\n            </div>\r\n            <h4 className=\"empty-title\">Ready to Generate Reports</h4>\r\n            <p className=\"empty-text\">Configure your report parameters above and click \"Generate Report\" to start.</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportGeneration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}