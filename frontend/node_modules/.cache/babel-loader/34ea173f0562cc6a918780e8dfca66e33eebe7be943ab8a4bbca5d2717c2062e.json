{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\RoleAccessManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport './RoleAccessManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleAccessManagement = () => {\n  _s();\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedRoleData] = useState(null);\n  const [selectedRoleUserCount] = useState(0);\n\n  // ✅ Structured categories instead of flat array\n  const [availablePermissions] = useState([{\n    category: 'users',\n    name: 'Users',\n    permissions: [{\n      id: 'create',\n      name: 'Create Users',\n      description: 'Can create new users'\n    }, {\n      id: 'read',\n      name: 'Read Users',\n      description: 'Can view user details'\n    }, {\n      id: 'update',\n      name: 'Update Users',\n      description: 'Can update user info'\n    }, {\n      id: 'delete',\n      name: 'Delete Users',\n      description: 'Can delete users'\n    }]\n  }, {\n    category: 'attendance',\n    name: 'Attendance',\n    permissions: [{\n      id: 'create',\n      name: 'Create Attendance',\n      description: 'Can create attendance records'\n    }, {\n      id: 'read',\n      name: 'Read Attendance',\n      description: 'Can view attendance data'\n    }, {\n      id: 'update',\n      name: 'Update Attendance',\n      description: 'Can modify attendance records'\n    }, {\n      id: 'delete',\n      name: 'Delete Attendance',\n      description: 'Can delete attendance data'\n    }]\n  }, {\n    category: 'reports',\n    name: 'Reports',\n    permissions: [{\n      id: 'create',\n      name: 'Create Reports',\n      description: 'Can create reports'\n    }, {\n      id: 'read',\n      name: 'Read Reports',\n      description: 'Can view reports'\n    }, {\n      id: 'update',\n      name: 'Update Reports',\n      description: 'Can modify reports'\n    }, {\n      id: 'delete',\n      name: 'Delete Reports',\n      description: 'Can delete reports'\n    }]\n  }, {\n    category: 'roles',\n    name: 'Roles',\n    permissions: [{\n      id: 'create',\n      name: 'Create Roles',\n      description: 'Can create new roles'\n    }, {\n      id: 'read',\n      name: 'Read Roles',\n      description: 'Can view roles'\n    }, {\n      id: 'update',\n      name: 'Update Roles',\n      description: 'Can modify roles'\n    }, {\n      id: 'delete',\n      name: 'Delete Roles',\n      description: 'Can delete roles'\n    }]\n  }]);\n\n  // ✅ formData should match structured permissions\n  const [formData, setFormData] = useState({\n    permissions: {\n      users: {\n        create: true,\n        read: true,\n        update: false,\n        delete: false\n      },\n      attendance: {\n        create: true,\n        read: true,\n        update: false,\n        delete: false\n      },\n      reports: {\n        create: true,\n        read: true,\n        update: false,\n        delete: false\n      },\n      roles: {\n        create: true,\n        read: true,\n        update: false,\n        delete: false\n      }\n    }\n  });\n  const [submitting] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successDetails] = useState({});\n  const selectAll = false;\n  const getTotalAvailablePermissions = () => availablePermissions.reduce((sum, cat) => sum + cat.permissions.length, 0);\n  const getTotalEnabledPermissions = () => Object.values(formData.permissions).flatMap(cat => Object.values(cat)).filter(Boolean).length;\n  const handleRoleSelect = e => setSelectedRole(e.target.value);\n  const handleSelectAll = () => {\n    const allEnabled = !selectAll;\n    const updated = {};\n    availablePermissions.forEach(cat => {\n      updated[cat.category] = {};\n      cat.permissions.forEach(p => {\n        updated[cat.category][p.id] = allEnabled;\n      });\n    });\n    setFormData({\n      permissions: updated\n    });\n  };\n  const handlePermissionChange = (category, id) => {\n    setFormData(prev => ({\n      permissions: {\n        ...prev.permissions,\n        [category]: {\n          ...prev.permissions[category],\n          [id]: !prev.permissions[category][id]\n        }\n      }\n    }));\n  };\n  const openConfirm = e => {\n    e.preventDefault();\n    setShowConfirm(true);\n  };\n  const confirmAndSave = () => {};\n  const {\n    user\n  } = useContext(AuthContext);\n  const isSuperAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'super_admin';\n  const hasRoleReadPermission = () => {\n    var _user$permissions, _user$permissions$rol;\n    return isSuperAdmin || (user === null || user === void 0 ? void 0 : (_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : (_user$permissions$rol = _user$permissions.roles) === null || _user$permissions$rol === void 0 ? void 0 : _user$permissions$rol.read);\n  };\n  const hasRoleUpdatePermission = () => {\n    var _user$permissions2, _user$permissions2$ro;\n    return isSuperAdmin || (user === null || user === void 0 ? void 0 : (_user$permissions2 = user.permissions) === null || _user$permissions2 === void 0 ? void 0 : (_user$permissions2$ro = _user$permissions2.roles) === null || _user$permissions2$ro === void 0 ? void 0 : _user$permissions2$ro.update);\n  };\n  const [availableRoles] = useState([{\n    value: 'super_admin',\n    label: 'Super Admin',\n    description: 'Highest level system administrator'\n  }, {\n    value: 'admin',\n    label: 'Administrator',\n    description: 'System administrator with management rights'\n  }, {\n    value: 'clerk',\n    label: 'Clerk',\n    description: 'General office clerk'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-access-wrapper\",\n      children: selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: availablePermissions.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permission-category\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox-grid\",\n            children: category.permissions.map(permission => {\n              var _formData$permissions;\n              const isChecked = ((_formData$permissions = formData.permissions[category.category]) === null || _formData$permissions === void 0 ? void 0 : _formData$permissions[permission.id]) || false;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: isChecked,\n                  onChange: () => handlePermissionChange(category.category, permission.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: permission.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, this)]\n              }, `${category.category}_${permission.id}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, category.category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleAccessManagement, \"Os7qnf3LMq7CuhN6lVUwdOXTpcU=\");\n_c = RoleAccessManagement;\nexport default RoleAccessManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleAccessManagement\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","jsxDEV","_jsxDEV","RoleAccessManagement","_s","selectedRole","setSelectedRole","selectedRoleData","selectedRoleUserCount","availablePermissions","category","name","permissions","id","description","formData","setFormData","users","create","read","update","delete","attendance","reports","roles","submitting","showConfirm","setShowConfirm","showSuccessModal","setShowSuccessModal","successDetails","selectAll","getTotalAvailablePermissions","reduce","sum","cat","length","getTotalEnabledPermissions","Object","values","flatMap","filter","Boolean","handleRoleSelect","e","target","value","handleSelectAll","allEnabled","updated","forEach","p","handlePermissionChange","prev","openConfirm","preventDefault","confirmAndSave","user","isSuperAdmin","role","hasRoleReadPermission","_user$permissions","_user$permissions$rol","hasRoleUpdatePermission","_user$permissions2","_user$permissions2$ro","availableRoles","label","children","className","map","fileName","_jsxFileName","lineNumber","columnNumber","permission","_formData$permissions","isChecked","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport './RoleAccessManagement.css';\r\n\r\nconst RoleAccessManagement = () => {\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectedRoleData] = useState(null);\r\n  const [selectedRoleUserCount] = useState(0);\r\n\r\n  // ✅ Structured categories instead of flat array\r\n  const [availablePermissions] = useState([\r\n    {\r\n      category: 'users',\r\n      name: 'Users',\r\n      permissions: [\r\n        { id: 'create', name: 'Create Users', description: 'Can create new users' },\r\n        { id: 'read', name: 'Read Users', description: 'Can view user details' },\r\n        { id: 'update', name: 'Update Users', description: 'Can update user info' },\r\n        { id: 'delete', name: 'Delete Users', description: 'Can delete users' },\r\n      ]\r\n    },\r\n    {\r\n      category: 'attendance',\r\n      name: 'Attendance',\r\n      permissions: [\r\n        { id: 'create', name: 'Create Attendance', description: 'Can create attendance records' },\r\n        { id: 'read', name: 'Read Attendance', description: 'Can view attendance data' },\r\n        { id: 'update', name: 'Update Attendance', description: 'Can modify attendance records' },\r\n        { id: 'delete', name: 'Delete Attendance', description: 'Can delete attendance data' },\r\n      ]\r\n    },\r\n    {\r\n      category: 'reports',\r\n      name: 'Reports',\r\n      permissions: [\r\n        { id: 'create', name: 'Create Reports', description: 'Can create reports' },\r\n        { id: 'read', name: 'Read Reports', description: 'Can view reports' },\r\n        { id: 'update', name: 'Update Reports', description: 'Can modify reports' },\r\n        { id: 'delete', name: 'Delete Reports', description: 'Can delete reports' },\r\n      ]\r\n    },\r\n    {\r\n      category: 'roles',\r\n      name: 'Roles',\r\n      permissions: [\r\n        { id: 'create', name: 'Create Roles', description: 'Can create new roles' },\r\n        { id: 'read', name: 'Read Roles', description: 'Can view roles' },\r\n        { id: 'update', name: 'Update Roles', description: 'Can modify roles' },\r\n        { id: 'delete', name: 'Delete Roles', description: 'Can delete roles' },\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  // ✅ formData should match structured permissions\r\n  const [formData, setFormData] = useState({\r\n    permissions: {\r\n      users: { create: true, read: true, update: false, delete: false },\r\n      attendance: { create: true, read: true, update: false, delete: false },\r\n      reports: { create: true, read: true, update: false, delete: false },\r\n      roles: { create: true, read: true, update: false, delete: false },\r\n    }\r\n  });\r\n\r\n  const [submitting] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successDetails] = useState({});\r\n  const selectAll = false;\r\n\r\n  const getTotalAvailablePermissions = () =>\r\n    availablePermissions.reduce((sum, cat) => sum + cat.permissions.length, 0);\r\n\r\n  const getTotalEnabledPermissions = () =>\r\n    Object.values(formData.permissions)\r\n      .flatMap(cat => Object.values(cat))\r\n      .filter(Boolean).length;\r\n\r\n  const handleRoleSelect = (e) => setSelectedRole(e.target.value);\r\n\r\n  const handleSelectAll = () => {\r\n    const allEnabled = !selectAll;\r\n    const updated = {};\r\n    availablePermissions.forEach(cat => {\r\n      updated[cat.category] = {};\r\n      cat.permissions.forEach(p => {\r\n        updated[cat.category][p.id] = allEnabled;\r\n      });\r\n    });\r\n    setFormData({ permissions: updated });\r\n  };\r\n\r\n  const handlePermissionChange = (category, id) => {\r\n    setFormData(prev => ({\r\n      permissions: {\r\n        ...prev.permissions,\r\n        [category]: {\r\n          ...prev.permissions[category],\r\n          [id]: !prev.permissions[category][id]\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  const openConfirm = (e) => { e.preventDefault(); setShowConfirm(true); };\r\n  const confirmAndSave = () => {};\r\n\r\n  const { user } = useContext(AuthContext);\r\n  const isSuperAdmin = user?.role === 'super_admin';\r\n\r\n  const hasRoleReadPermission = () => isSuperAdmin || user?.permissions?.roles?.read;\r\n  const hasRoleUpdatePermission = () => isSuperAdmin || user?.permissions?.roles?.update;\r\n\r\n  const [availableRoles] = useState([\r\n    { value: 'super_admin', label: 'Super Admin', description: 'Highest level system administrator' },\r\n    { value: 'admin', label: 'Administrator', description: 'System administrator with management rights' },\r\n    { value: 'clerk', label: 'Clerk', description: 'General office clerk' },\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"role-access-wrapper\">\r\n        {/* ... keep your existing JSX ... */}\r\n\r\n        {/* Permissions Grid by Category */}\r\n        {selectedRole && (\r\n          <div className=\"form-section\">\r\n            {availablePermissions.map(category => (\r\n              <div key={category.category} className=\"permission-category\">\r\n                <h4>{category.name}</h4>\r\n                <div className=\"checkbox-grid\">\r\n                  {category.permissions.map(permission => {\r\n                    const isChecked = formData.permissions[category.category]?.[permission.id] || false;\r\n                    return (\r\n                      <div key={`${category.category}_${permission.id}`}>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={isChecked}\r\n                          onChange={() => handlePermissionChange(category.category, permission.id)}\r\n                        />\r\n                        <label>{permission.name}</label>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}