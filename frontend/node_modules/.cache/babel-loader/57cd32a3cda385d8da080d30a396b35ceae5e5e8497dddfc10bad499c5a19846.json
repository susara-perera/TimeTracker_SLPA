{"ast":null,"code":"var _jsxFileName = \"B:\\\\PortAuthProject\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\RoleAccessManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport './RoleAccessManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoleAccessManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectedRoleId, setSelectedRoleId] = useState('');\n  const [selectAll, setSelectAll] = useState(false);\n  const [formData, setFormData] = useState({\n    permissions: {}\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [toastVisible, setToastVisible] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successDetails, setSuccessDetails] = useState({});\n  const {\n    user\n  } = useContext(AuthContext);\n  const isSuperAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'super_admin';\n\n  // Add function to check if user has roles.read permission\n  const hasRoleReadPermission = () => {\n    var _user$permissions, _user$permissions$rol, _user$permissions2, _user$permissions2$ro;\n    if (isSuperAdmin) return true; // Super admin always has access\n    // Allow access when either the generic 'roles.read' or the 'rolesManage.read' is granted\n    const roleRead = (user === null || user === void 0 ? void 0 : (_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : (_user$permissions$rol = _user$permissions.roles) === null || _user$permissions$rol === void 0 ? void 0 : _user$permissions$rol.read) === true;\n    const rolesManageRead = (user === null || user === void 0 ? void 0 : (_user$permissions2 = user.permissions) === null || _user$permissions2 === void 0 ? void 0 : (_user$permissions2$ro = _user$permissions2.rolesManage) === null || _user$permissions2$ro === void 0 ? void 0 : _user$permissions2$ro.read) === true;\n    return roleRead || rolesManageRead;\n  };\n\n  // Add function to check if user has roles.update permission\n  const hasRoleUpdatePermission = () => {\n    var _user$permissions3, _user$permissions3$ro;\n    if (isSuperAdmin) return true; // Super admin always has access\n    return (user === null || user === void 0 ? void 0 : (_user$permissions3 = user.permissions) === null || _user$permissions3 === void 0 ? void 0 : (_user$permissions3$ro = _user$permissions3.roles) === null || _user$permissions3$ro === void 0 ? void 0 : _user$permissions3$ro.update) === true;\n  };\n\n  // Show professional success modal for permission updates\n  const showPermissionSuccessModal = (roleData, userCount, permissionCount) => {\n    setSuccessDetails({\n      roleName: (roleData === null || roleData === void 0 ? void 0 : roleData.label) || 'Unknown Role',\n      userCount: userCount || 0,\n      permissionCount: permissionCount || 0,\n      timestamp: new Date().toLocaleString()\n    });\n    setShowSuccessModal(true);\n  };\n\n  // Available roles (moved to state so runtime additions are possible)\n  const [availableRoles, setAvailableRoles] = useState([{\n    value: 'super_admin',\n    label: 'Super Admin',\n    description: 'Highest level system administrator'\n  }, {\n    value: 'admin',\n    label: 'Administrator',\n    description: 'System administrator with management rights'\n  }, {\n    value: 'administrative_clerk',\n    label: 'Administrative Clerk',\n    description: 'Administrative support staff'\n  }, {\n    value: 'clerk',\n    label: 'Clerk',\n    description: 'General office clerk'\n  }, {\n    value: 'employee',\n    label: 'Employee',\n    description: 'Regular system user'\n  }]);\n\n  // Available permissions list based on User model\n  const availablePermissions = [{\n    category: 'users',\n    name: 'User Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Users',\n      description: 'Add new users to the system'\n    }, {\n      id: 'read',\n      name: 'View Users',\n      description: 'View user information and lists'\n    }, {\n      id: 'update',\n      name: 'Update Users',\n      description: 'Edit user information and profiles'\n    }, {\n      id: 'delete',\n      name: 'Delete Users',\n      description: 'Remove users from the system'\n    }]\n  }, {\n    category: 'attendance',\n    name: 'Attendance Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Attendance',\n      description: 'Add attendance records'\n    }, {\n      id: 'read',\n      name: 'View Attendance',\n      description: 'View attendance records and reports'\n    }, {\n      id: 'update',\n      name: 'Update Attendance',\n      description: 'Edit attendance records'\n    }, {\n      id: 'delete',\n      name: 'Delete Attendance',\n      description: 'Remove attendance records'\n    }]\n  }, {\n    category: 'reports',\n    name: 'Reports Management',\n    permissions: [{\n      id: 'create',\n      name: 'Generate Reports',\n      description: 'Create system reports'\n    }, {\n      id: 'read',\n      name: 'View Reports',\n      description: 'Access and view reports'\n    }]\n  }, {\n    category: 'divisions',\n    name: 'Division Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Divisions',\n      description: 'Add new company divisions'\n    }, {\n      id: 'read',\n      name: 'View Divisions',\n      description: 'View division information'\n    }, {\n      id: 'update',\n      name: 'Update Divisions',\n      description: 'Edit division details'\n    }, {\n      id: 'delete',\n      name: 'Delete Divisions',\n      description: 'Remove divisions'\n    }]\n  }, {\n    category: 'sections',\n    name: 'Section Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Sections',\n      description: 'Add new sections within divisions'\n    }, {\n      id: 'read',\n      name: 'View Sections',\n      description: 'View section information and lists'\n    }, {\n      id: 'update',\n      name: 'Update Sections',\n      description: 'Edit section details and assignments'\n    }, {\n      id: 'delete',\n      name: 'Delete Sections',\n      description: 'Remove sections from divisions'\n    }]\n  }, {\n    category: 'roles',\n    name: 'Role & Permission Management',\n    permissions: [{\n      id: 'read',\n      name: 'View Roles & Permissions',\n      description: 'Access role and permission management pages'\n    }, {\n      id: 'update',\n      name: 'Update Role Permissions',\n      description: 'Modify permissions assigned to roles'\n    }]\n  }, {\n    category: 'rolesManage',\n    name: 'Roles Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Roles',\n      description: 'Add new user roles to the system'\n    }, {\n      id: 'read',\n      name: 'View Roles & Permissions',\n      description: 'Access roles and permissions management pages'\n    }, {\n      id: 'update',\n      name: 'Update Role Permissions',\n      description: 'Modify roles'\n    }, {\n      id: 'delete',\n      name: 'Delete Roles',\n      description: 'Remove roles '\n    }]\n  }, {\n    category: 'settings',\n    name: 'System Settings',\n    permissions: [{\n      id: 'create',\n      name: 'Create Settings',\n      description: 'Add new system configurations'\n    }, {\n      id: 'read',\n      name: 'View Settings',\n      description: 'Access system settings'\n    }, {\n      id: 'update',\n      name: 'Update Settings',\n      description: 'Modify system configurations'\n    }, {\n      id: 'delete',\n      name: 'Delete Settings',\n      description: 'Remove system settings'\n    }]\n  }];\n  useEffect(() => {\n    fetchUsers();\n\n    // Load roles from backend\n    (async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await fetch('http://localhost:5000/api/roles', {\n          headers: {\n            'Content-Type': 'application/json',\n            ...(token ? {\n              'Authorization': `Bearer ${token}`\n            } : {})\n          }\n        });\n        if (res.ok) {\n          const result = await res.json();\n          if (Array.isArray(result.data) && result.data.length) {\n            // include the database id so we can fetch role permissions\n            setAvailableRoles(result.data.map(r => ({\n              id: r._id,\n              value: r.value,\n              label: r.label,\n              description: r.description || ''\n            })));\n          }\n        } else {\n          console.warn('Failed to fetch roles from backend, using defaults');\n        }\n      } catch (err) {\n        console.warn('Error fetching roles:', err);\n      }\n    })();\n\n    // Listen for roles added via other components\n    const handler = e => {\n      const payload = e === null || e === void 0 ? void 0 : e.detail;\n      if (payload && payload.value && payload.label) {\n        // Avoid duplicates\n        setAvailableRoles(prev => {\n          if (prev.find(r => r.value === payload.value)) return prev;\n          return [...prev, {\n            value: payload.value,\n            label: payload.label,\n            description: ''\n          }];\n        });\n      }\n    };\n    window.addEventListener('roleAdded', handler);\n    return () => window.removeEventListener('roleAdded', handler);\n  }, []);\n\n  // Fetch users from API\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users');\n      if (response.ok) {\n        const data = await response.json();\n        setUsers(data.data || []);\n      } else {\n        console.error('Failed to fetch users');\n        setMessage('Failed to load users');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setMessage('Error loading users');\n      setMessageType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle role selection\n  const handleRoleSelect = e => {\n    const roleValue = e.target.value;\n    setSelectedRole(roleValue);\n    if (roleValue) {\n      // Find available role metadata (contains id)\n      const roleMeta = availableRoles.find(r => r.value === roleValue);\n      const roleId = roleMeta === null || roleMeta === void 0 ? void 0 : roleMeta.id;\n      setSelectedRoleId(roleId || '');\n      if (roleId) {\n        (async () => {\n          try {\n            const token = localStorage.getItem('token');\n            const res = await fetch(`http://localhost:5000/api/roles/${roleId}`, {\n              headers: {\n                'Content-Type': 'application/json',\n                ...(token ? {\n                  'Authorization': `Bearer ${token}`\n                } : {})\n              }\n            });\n            if (res.ok) {\n              const result = await res.json();\n              const roleDoc = result.data;\n              setFormData({\n                permissions: roleDoc.permissions || {}\n              });\n              updateSelectAllStatus(roleDoc.permissions || {});\n            } else {\n              // fallback to user-based permissions if role doc cannot be fetched\n              const userWithRole = users.find(u => u.role === roleValue);\n              setFormData({\n                permissions: (userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {}\n              });\n              updateSelectAllStatus((userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {});\n            }\n          } catch (err) {\n            console.warn('Error fetching role document:', err);\n            const userWithRole = users.find(u => u.role === roleValue);\n            setFormData({\n              permissions: (userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {}\n            });\n            updateSelectAllStatus((userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {});\n          }\n        })();\n      } else {\n        // If no role id available, fallback to user-based permissions\n        const userWithRole = users.find(u => u.role === roleValue);\n        setFormData({\n          permissions: (userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {}\n        });\n        updateSelectAllStatus((userWithRole === null || userWithRole === void 0 ? void 0 : userWithRole.permissions) || {});\n      }\n    } else {\n      setFormData({\n        permissions: {}\n      });\n      setSelectAll(false);\n    }\n  };\n\n  // Handle permission checkbox changes\n  const handlePermissionChange = (category, permissionId) => {\n    if (!hasRoleUpdatePermission()) return; // prevent users without roles.update from making changes\n    const newPermissions = {\n      ...formData.permissions\n    };\n    if (!newPermissions[category]) {\n      newPermissions[category] = {};\n    }\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\n    setFormData(prev => ({\n      ...prev,\n      permissions: newPermissions\n    }));\n    updateSelectAllStatus(newPermissions);\n  };\n\n  // Handle select all toggle\n  const handleSelectAll = () => {\n    if (!hasRoleUpdatePermission()) return; // prevent users without roles.update from making changes\n    const newSelectAll = !selectAll;\n    setSelectAll(newSelectAll);\n    const newPermissions = {};\n    if (newSelectAll) {\n      availablePermissions.forEach(category => {\n        newPermissions[category.category] = {};\n        category.permissions.forEach(perm => {\n          newPermissions[category.category][perm.id] = true;\n        });\n      });\n    } else {\n      availablePermissions.forEach(category => {\n        newPermissions[category.category] = {};\n        category.permissions.forEach(perm => {\n          newPermissions[category.category][perm.id] = false;\n        });\n      });\n    }\n    setFormData(prev => ({\n      ...prev,\n      permissions: newPermissions\n    }));\n  };\n\n  // Update select all status\n  const updateSelectAllStatus = permissions => {\n    let totalPermissions = 0;\n    let enabledPermissions = 0;\n    availablePermissions.forEach(category => {\n      category.permissions.forEach(perm => {\n        totalPermissions++;\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\n          enabledPermissions++;\n        }\n      });\n    });\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\n  };\n\n  // Get total enabled permissions count\n  const getTotalEnabledPermissions = () => {\n    let count = 0;\n    availablePermissions.forEach(category => {\n      category.permissions.forEach(perm => {\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\n          count++;\n        }\n      });\n    });\n    return count;\n  };\n\n  // Get total available permissions count\n  const getTotalAvailablePermissions = () => {\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\n  };\n\n  // Show confirmation modal instead of immediate submit\n  const openConfirm = e => {\n    e.preventDefault();\n    if (!hasRoleUpdatePermission()) {\n      setMessage('You do not have permission to modify role permissions. The \"Update Role Permissions\" access is required.');\n      setMessageType('error');\n      setToastVisible(true);\n      setTimeout(() => setToastVisible(false), 4000);\n      return;\n    }\n    if (!selectedRole) {\n      setMessage('Please select a role first');\n      setMessageType('error');\n      setToastVisible(true);\n      setTimeout(() => setToastVisible(false), 4000);\n      return;\n    }\n    setShowConfirm(true);\n  };\n\n  // Confirm and perform save: persist to role doc then update users\n  const confirmAndSave = async () => {\n    setShowConfirm(false);\n    setSubmitting(true);\n    try {\n      // Persist permissions to role document (if we have an id)\n      const token = localStorage.getItem('token');\n      let roleSaved = false;\n      let savedRoleResponse = null;\n      if (selectedRoleId) {\n        const res = await fetch(`http://localhost:5000/api/permissions/roles/${selectedRoleId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(token ? {\n              'Authorization': `Bearer ${token}`\n            } : {})\n          },\n          body: JSON.stringify({\n            permissions: formData.permissions\n          })\n        });\n        const resJson = await res.json().catch(() => ({}));\n        if (!res.ok) {\n          // include server message if available\n          throw new Error(resJson.message || 'Failed to save role permissions');\n        }\n        roleSaved = true;\n        savedRoleResponse = resJson.data || null;\n\n        // Update local formData with authoritative permissions returned (if any)\n        if (savedRoleResponse && savedRoleResponse.permissions) {\n          setFormData({\n            permissions: savedRoleResponse.permissions\n          });\n        }\n      }\n\n      // Now update users with the selected role\n      const usersWithRole = users.filter(u => u.role === selectedRole);\n      if (usersWithRole.length === 0) {\n        // If we saved the role document, treat that as a successful save even if no users exist for the role\n        if (roleSaved) {\n          const permissionCount = getTotalEnabledPermissions();\n\n          // Show professional success modal for role permissions saved\n          showPermissionSuccessModal(selectedRoleData, 0, permissionCount);\n          setMessage(`Role permissions saved successfully. No users found with role ${selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label}`);\n          setMessageType('success');\n          setToastVisible(true);\n          setTimeout(() => setToastVisible(false), 4000);\n          setTimeout(() => {\n            setMessage('');\n            setMessageType('');\n          }, 5000);\n          setSubmitting(false);\n          return;\n        }\n        setMessage('No users found with the selected role');\n        setMessageType('error');\n        setToastVisible(true);\n        setTimeout(() => setToastVisible(false), 4000);\n        setSubmitting(false);\n        return;\n      }\n\n      // Use auth token for user updates as well (backend typically requires auth)\n      const updatePromises = usersWithRole.map(user => fetch(`http://localhost:5000/api/users/${user._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          permissions: formData.permissions\n        })\n      }).then(async r => ({\n        ok: r.ok,\n        status: r.status,\n        body: await r.json().catch(() => ({})),\n        userId: user._id\n      })));\n      const results = await Promise.all(updatePromises);\n      const failed = results.filter(r => !r.ok);\n      if (failed.length === 0) {\n        setUsers(prevUsers => prevUsers.map(u => u.role === selectedRole ? {\n          ...u,\n          permissions: formData.permissions\n        } : u));\n\n        // Calculate permission count\n        const permissionCount = getTotalEnabledPermissions();\n\n        // Show professional success modal\n        showPermissionSuccessModal(selectedRoleData, usersWithRole.length, permissionCount);\n\n        // Also set the regular message for backup\n        setMessage(`Permissions updated successfully for ${usersWithRole.length} user(s)`);\n        setMessageType('success');\n        setToastVisible(true);\n        console.log('RoleAccessManagement: permissions updated successfully for users', usersWithRole.map(u => u._id));\n        setTimeout(() => setToastVisible(false), 4000);\n        // Auto-hide message area too\n        setTimeout(() => {\n          setMessage('');\n          setMessageType('');\n        }, 5000);\n        // Notify the app that permissions have changed so current sessions can refresh\n        try {\n          window.dispatchEvent(new CustomEvent('permissionsChanged', {\n            detail: {\n              role: selectedRole\n            }\n          }));\n        } catch (e) {/* ignore */}\n      } else {\n        // Build an informative message\n        const failedIds = failed.map(f => f.userId).slice(0, 5);\n        // collect server messages from failed responses\n        const serverMsgs = failed.map(f => f.body && f.body.message ? `${f.userId}: ${f.body.message}` : `${f.userId}: status ${f.status}`).slice(0, 5);\n        setMessage(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Failed for: ${failedIds.join(', ')}${failed.length > 5 ? '...' : ''}`);\n        setMessageType('error');\n        setToastVisible(true);\n        setTimeout(() => setToastVisible(false), 7000);\n        console.warn('RoleAccessManagement: some user updates failed', failed);\n        try {\n          window.alert(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Some updates failed.\\nDetails:\\n${serverMsgs.join('\\n')}`);\n        } catch (e) {}\n        // Even on partial failure, notify app (some users may have new permissions)\n        try {\n          window.dispatchEvent(new CustomEvent('permissionsChanged', {\n            detail: {\n              role: selectedRole\n            }\n          }));\n        } catch (e) {/* ignore */}\n      }\n    } catch (err) {\n      console.error('Error saving permissions:', err);\n      setMessage(err.message || 'Error updating role permissions');\n      setMessageType('error');\n      setToastVisible(true);\n      setTimeout(() => setToastVisible(false), 4000);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Get users count for selected role\n  const getUsersCountForRole = () => {\n    if (!selectedRole) return 0;\n    return users.filter(user => user.role === selectedRole).length;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-access-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this);\n  }\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\n  const selectedRoleUserCount = getUsersCountForRole();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-access-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decorative-elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header-custom\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-content\",\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"icon-wrapper-large\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-shield-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"page-title\",\n                children: \"Role Access Management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"page-subtitle\",\n                children: \"Configure permissions for user roles - changes apply to all users with the selected role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-professional btn-secondary\",\n              onClick: () => hasRoleReadPermission() && window.dispatchEvent(new CustomEvent('navigateTo', {\n                detail: 'role-management'\n              })),\n              title: !hasRoleReadPermission() ? 'You need \"View Roles & Permissions\" access to manage roles' : 'Manage Roles',\n              style: {\n                padding: '10px 16px',\n                fontSize: '14px',\n                cursor: !hasRoleReadPermission() ? 'not-allowed' : 'pointer',\n                opacity: !hasRoleReadPermission() ? 0.6 : 1\n              },\n              disabled: !hasRoleReadPermission(),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-gear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), \" Manage Roles\", !hasRoleReadPermission() && /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-lock-fill ml-2\",\n                style: {\n                  color: '#dc3545',\n                  fontSize: '12px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-custom\",\n          children: [toastVisible && message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `toast-popup ${messageType === 'success' ? 'toast-success' : 'toast-error'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), message && !toastVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), !hasRoleReadPermission() && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-lock-fill mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), \"You do not have permission to view roles and permissions. The \\\"View Roles & Permissions\\\" access is required to use this feature.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this), hasRoleReadPermission() && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-number\",\n                  children: availableRoles.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-label\",\n                  children: \"Available Roles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-number\",\n                  children: getTotalAvailablePermissions()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-label\",\n                  children: \"Available Permissions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 15\n              }, this), selectedRole && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stats-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stats-number\",\n                    children: selectedRoleUserCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stats-label\",\n                    children: \"Users with this Role\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stats-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stats-number\",\n                    children: getTotalEnabledPermissions()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"stats-label\",\n                    children: \"Granted Permissions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"role\",\n                className: \"form-label-modern\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-person-gear text-primary mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 17\n                }, this), \"Select Role to Manage\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"role\",\n                id: \"role\",\n                className: \"form-control form-control-modern\",\n                value: selectedRole,\n                onChange: handleRoleSelect,\n                disabled: !hasRoleReadPermission(),\n                title: !hasRoleReadPermission() ? 'You need \"View Roles & Permissions\" access to select roles' : '',\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Choose a role to configure --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 17\n                }, this), availableRoles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: role.value,\n                  children: [role.label, \" - \", role.description]\n                }, role.value, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 15\n              }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted mt-2 d-block\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-info-circle mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 19\n                }, this), \"This will update permissions for \", selectedRoleUserCount, \" user(s) with the role: \", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 17\n              }, this), !isSuperAdmin && !hasRoleUpdatePermission() && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-lock-fill mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 19\n                }, this), \"You have view-only access. To modify role permissions, you need the \\\"Update Role Permissions\\\" access.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 13\n            }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-section\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: openConfirm,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    color: '#333',\n                    marginBottom: '20px',\n                    fontWeight: '600'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-shield-alt text-primary mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 21\n                  }, this), \"Configure Access Permissions for Role: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#667eea'\n                    },\n                    children: selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 60\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-info\",\n                  style: {\n                    backgroundColor: '#e3f2fd',\n                    border: '1px solid #bbdefb',\n                    borderRadius: '6px',\n                    padding: '12px',\n                    marginBottom: '20px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-info-circle text-primary mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 652,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Note:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 21\n                  }, this), \" Changes will be applied to all \", selectedRoleUserCount, \" user(s) with the role \\\"\", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label, \"\\\"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"select-all-section\",\n                  style: {\n                    opacity: hasRoleUpdatePermission() ? 1 : 0.6,\n                    cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'default'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"select-all\",\n                    checked: selectAll,\n                    onChange: handleSelectAll,\n                    disabled: !isSuperAdmin && !hasRoleUpdatePermission(),\n                    style: {\n                      cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 661,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"select-all\",\n                    style: {\n                      cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-check2-all mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 23\n                    }, this), \"Select All Permissions\", !isSuperAdmin && !hasRoleUpdatePermission() && /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-lock-fill ml-2\",\n                      style: {\n                        color: '#dc3545',\n                        fontSize: '12px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 672,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"permission-counter\",\n                    children: [getTotalEnabledPermissions(), \"/\", getTotalAvailablePermissions(), \" permissions selected\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 675,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 19\n                }, this), availablePermissions.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"permission-category\",\n                  style: {\n                    opacity: hasRoleUpdatePermission() ? 1 : 0.6\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"category-title\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-folder text-primary mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 686,\n                      columnNumber: 25\n                    }, this), category.name, !isSuperAdmin && !hasRoleUpdatePermission() && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge badge-secondary ml-2\",\n                      style: {\n                        fontSize: '10px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-eye\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 690,\n                        columnNumber: 29\n                      }, this), \" View Only\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"checkbox-grid\",\n                    children: category.permissions.map(permission => {\n                      const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `checkbox-item ${isChecked ? 'selected' : ''} ${!isSuperAdmin && !hasRoleUpdatePermission() ? 'disabled' : ''}`,\n                        onClick: () => (isSuperAdmin || hasRoleUpdatePermission()) && handlePermissionChange(category.category, permission.id),\n                        style: {\n                          cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer',\n                          opacity: hasRoleUpdatePermission() ? 1 : 0.7\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          checked: isChecked || false,\n                          onChange: () => handlePermissionChange(category.category, permission.id),\n                          id: `perm_${category.category}_${permission.id}`,\n                          disabled: !isSuperAdmin && !hasRoleUpdatePermission(),\n                          style: {\n                            cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 707,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"checkmark\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 715,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: `perm_${category.category}_${permission.id}`,\n                          style: {\n                            cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"permission-title\",\n                            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-file-text text-muted mr-2\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 720,\n                              columnNumber: 35\n                            }, this), permission.name, !isSuperAdmin && !hasRoleUpdatePermission() && /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"bi bi-lock-fill ml-2\",\n                              style: {\n                                color: '#dc3545',\n                                fontSize: '11px'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 723,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 719,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"permission-description\",\n                            children: permission.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 726,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 716,\n                          columnNumber: 31\n                        }, this)]\n                      }, `${category.category}_${permission.id}`, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 23\n                  }, this)]\n                }, category.category, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center mt-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    className: \"btn-save-modern\",\n                    disabled: submitting || !isSuperAdmin && !hasRoleUpdatePermission(),\n                    title: !isSuperAdmin && !hasRoleUpdatePermission() ? 'You need \"Update Role Permissions\" access to apply changes' : '',\n                    onClick: openConfirm,\n                    style: {\n                      cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer'\n                    },\n                    children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"spinner-border spinner-border-sm mr-2\",\n                        role: \"status\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"visually-hidden\",\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 752,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 751,\n                        columnNumber: 27\n                      }, this), \"Updating \", selectedRoleUserCount, \" user(s)...\"]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-save mr-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 758,\n                        columnNumber: 27\n                      }, this), \"Apply to All \", selectedRoleUserCount, \" User(s) with Role: \", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 9\n    }, this), showConfirm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowConfirm(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content confirm-modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Confirm Permission Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You're about to apply the selected permissions to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedRoleUserCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 68\n            }, this), \" user(s) with the role \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 131\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This action will update both the role's permission document and the users' effective permissions. Are you sure you want to continue?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-professional btn-secondary\",\n            onClick: () => setShowConfirm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-professional btn-success\",\n            onClick: confirmAndSave,\n            children: \"Yes, apply changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 9\n    }, this), showSuccessModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      style: {\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        zIndex: 10000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        style: {\n          maxWidth: '600px',\n          background: 'linear-gradient(135deg, #ffffff, #f8f9fa)',\n          border: '2px solid #28a745',\n          borderRadius: '12px',\n          boxShadow: '0 15px 35px rgba(40, 167, 69, 0.2)',\n          animation: 'fadeInUp 0.3s ease-out'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #28a745, #20c997)',\n            color: 'white',\n            padding: '25px 30px',\n            borderRadius: '10px 10px 0 0',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '48px',\n              marginBottom: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-shield-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              margin: 0,\n              fontWeight: 'bold',\n              fontSize: '24px'\n            },\n            children: \"Permission Update Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '5px 0 0 0',\n              opacity: 0.9,\n              fontSize: '14px'\n            },\n            children: \"System Access Control Updated Successfully\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#f8f9fa',\n              border: '1px solid #e9ecef',\n              borderRadius: '8px',\n              padding: '20px',\n              marginBottom: '25px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: '#495057',\n                marginBottom: '15px',\n                fontSize: '18px',\n                fontWeight: '600'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-info-circle\",\n                style: {\n                  color: '#28a745',\n                  marginRight: '8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 19\n              }, this), \"Update Summary\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'grid',\n                gridTemplateColumns: '1fr 1fr',\n                gap: '15px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#6c757d',\n                    fontSize: '14px'\n                  },\n                  children: \"Role Updated:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    color: '#28a745'\n                  },\n                  children: successDetails.roleName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#6c757d',\n                    fontSize: '14px'\n                  },\n                  children: \"Users Affected:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    color: '#28a745'\n                  },\n                  children: [successDetails.userCount, \" \", successDetails.userCount === 1 ? 'User' : 'Users']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#6c757d',\n                    fontSize: '14px'\n                  },\n                  children: \"Permissions Granted:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 864,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '16px',\n                    fontWeight: 'bold',\n                    color: '#28a745'\n                  },\n                  children: [successDetails.permissionCount, \" Permissions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 865,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: '#6c757d',\n                    fontSize: '14px'\n                  },\n                  children: \"Updated At:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '14px',\n                    color: '#495057'\n                  },\n                  children: successDetails.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 872,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: '#d4edda',\n              border: '1px solid #c3e6cb',\n              borderRadius: '8px',\n              padding: '15px',\n              marginBottom: '25px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0,\n                color: '#155724',\n                fontSize: '14px',\n                lineHeight: '1.5'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-check-circle-fill\",\n                style: {\n                  marginRight: '8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 892,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"All permission changes have been successfully applied to the system.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 893,\n                columnNumber: 19\n              }, this), successDetails.userCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Affected users will see the updated permissions on their next login or page refresh.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 895,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-professional btn-success\",\n              onClick: () => setShowSuccessModal(false),\n              style: {\n                padding: '12px 40px',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                minWidth: '150px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-check2-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 19\n              }, this), \" Acknowledged\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleAccessManagement, \"iV9gzONIAidJpBeMQ5rjpJ4yODs=\");\n_c = RoleAccessManagement;\nexport default RoleAccessManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleAccessManagement\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","RoleAccessManagement","_s","users","setUsers","loading","setLoading","selectedRole","setSelectedRole","selectedRoleId","setSelectedRoleId","selectAll","setSelectAll","formData","setFormData","permissions","submitting","setSubmitting","message","setMessage","messageType","setMessageType","showConfirm","setShowConfirm","toastVisible","setToastVisible","showSuccessModal","setShowSuccessModal","successDetails","setSuccessDetails","user","isSuperAdmin","role","hasRoleReadPermission","_user$permissions","_user$permissions$rol","_user$permissions2","_user$permissions2$ro","roleRead","roles","read","rolesManageRead","rolesManage","hasRoleUpdatePermission","_user$permissions3","_user$permissions3$ro","update","showPermissionSuccessModal","roleData","userCount","permissionCount","roleName","label","timestamp","Date","toLocaleString","availableRoles","setAvailableRoles","value","description","availablePermissions","category","name","id","fetchUsers","token","localStorage","getItem","res","fetch","headers","ok","result","json","Array","isArray","data","length","map","r","_id","console","warn","err","handler","e","payload","detail","prev","find","window","addEventListener","removeEventListener","response","error","handleRoleSelect","roleValue","target","roleMeta","roleId","roleDoc","updateSelectAllStatus","userWithRole","u","handlePermissionChange","permissionId","newPermissions","handleSelectAll","newSelectAll","forEach","perm","totalPermissions","enabledPermissions","getTotalEnabledPermissions","count","getTotalAvailablePermissions","reduce","total","openConfirm","preventDefault","setTimeout","confirmAndSave","roleSaved","savedRoleResponse","method","body","JSON","stringify","resJson","catch","Error","usersWithRole","filter","selectedRoleData","updatePromises","then","status","userId","results","Promise","all","failed","prevUsers","log","dispatchEvent","CustomEvent","failedIds","f","slice","serverMsgs","join","alert","getUsersCountForRole","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedRoleUserCount","style","display","justifyContent","alignItems","width","onClick","title","padding","fontSize","cursor","opacity","disabled","color","htmlFor","onChange","onSubmit","marginBottom","fontWeight","backgroundColor","border","borderRadius","type","checked","permission","isChecked","stopPropagation","zIndex","maxWidth","background","boxShadow","animation","textAlign","margin","marginRight","gridTemplateColumns","gap","lineHeight","minWidth","_c","$RefreshReg$"],"sources":["B:/PortAuthProject/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport './RoleAccessManagement.css';\r\n\r\nconst RoleAccessManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectedRoleId, setSelectedRoleId] = useState('');\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    permissions: {}\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [toastVisible, setToastVisible] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successDetails, setSuccessDetails] = useState({});\r\n  const { user } = useContext(AuthContext);\r\n  const isSuperAdmin = user?.role === 'super_admin';\r\n\r\n  // Add function to check if user has roles.read permission\r\n  const hasRoleReadPermission = () => {\r\n  if (isSuperAdmin) return true; // Super admin always has access\r\n  // Allow access when either the generic 'roles.read' or the 'rolesManage.read' is granted\r\n  const roleRead = user?.permissions?.roles?.read === true;\r\n  const rolesManageRead = user?.permissions?.rolesManage?.read === true;\r\n  return roleRead || rolesManageRead;\r\n  };\r\n\r\n  // Add function to check if user has roles.update permission\r\n  const hasRoleUpdatePermission = () => {\r\n    if (isSuperAdmin) return true; // Super admin always has access\r\n    return user?.permissions?.roles?.update === true;\r\n  };\r\n\r\n  // Show professional success modal for permission updates\r\n  const showPermissionSuccessModal = (roleData, userCount, permissionCount) => {\r\n    setSuccessDetails({\r\n      roleName: roleData?.label || 'Unknown Role',\r\n      userCount: userCount || 0,\r\n      permissionCount: permissionCount || 0,\r\n      timestamp: new Date().toLocaleString()\r\n    });\r\n    setShowSuccessModal(true);\r\n  };\r\n\r\n  // Available roles (moved to state so runtime additions are possible)\r\n  const [availableRoles, setAvailableRoles] = useState([\r\n    { value: 'super_admin', label: 'Super Admin', description: 'Highest level system administrator' },\r\n    { value: 'admin', label: 'Administrator', description: 'System administrator with management rights' },\r\n    { value: 'administrative_clerk', label: 'Administrative Clerk', description: 'Administrative support staff' },\r\n    { value: 'clerk', label: 'Clerk', description: 'General office clerk' },\r\n    { value: 'employee', label: 'Employee', description: 'Regular system user' }\r\n  ]);\r\n\r\n  // Available permissions list based on User model\r\n  const availablePermissions = [\r\n    { \r\n      category: 'users', \r\n      name: 'User Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Users', description: 'Add new users to the system' },\r\n        { id: 'read', name: 'View Users', description: 'View user information and lists' },\r\n        { id: 'update', name: 'Update Users', description: 'Edit user information and profiles' },\r\n        { id: 'delete', name: 'Delete Users', description: 'Remove users from the system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'attendance', \r\n      name: 'Attendance Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Attendance', description: 'Add attendance records' },\r\n        { id: 'read', name: 'View Attendance', description: 'View attendance records and reports' },\r\n        { id: 'update', name: 'Update Attendance', description: 'Edit attendance records' },\r\n        { id: 'delete', name: 'Delete Attendance', description: 'Remove attendance records' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'reports', \r\n      name: 'Reports Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Generate Reports', description: 'Create system reports' },\r\n        { id: 'read', name: 'View Reports', description: 'Access and view reports' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'divisions', \r\n      name: 'Division Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Divisions', description: 'Add new company divisions' },\r\n        { id: 'read', name: 'View Divisions', description: 'View division information' },\r\n        { id: 'update', name: 'Update Divisions', description: 'Edit division details' },\r\n        { id: 'delete', name: 'Delete Divisions', description: 'Remove divisions' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'sections', \r\n      name: 'Section Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Sections', description: 'Add new sections within divisions' },\r\n        { id: 'read', name: 'View Sections', description: 'View section information and lists' },\r\n        { id: 'update', name: 'Update Sections', description: 'Edit section details and assignments' },\r\n        { id: 'delete', name: 'Delete Sections', description: 'Remove sections from divisions' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'roles', \r\n      name: 'Role & Permission Management', \r\n      permissions: [\r\n       \r\n        { id: 'read', name: 'View Roles & Permissions', description: 'Access role and permission management pages' },\r\n        { id: 'update', name: 'Update Role Permissions', description: 'Modify permissions assigned to roles' },\r\n        \r\n      ]\r\n    },\r\n     { \r\n      category: 'rolesManage', \r\n      name: 'Roles Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Roles', description: 'Add new user roles to the system' },\r\n        { id: 'read', name: 'View Roles & Permissions', description: 'Access roles and permissions management pages' },\r\n        { id: 'update', name: 'Update Role Permissions', description: 'Modify roles' },\r\n        { id: 'delete', name: 'Delete Roles', description: 'Remove roles ' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'settings', \r\n      name: 'System Settings', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Settings', description: 'Add new system configurations' },\r\n        { id: 'read', name: 'View Settings', description: 'Access system settings' },\r\n        { id: 'update', name: 'Update Settings', description: 'Modify system configurations' },\r\n        { id: 'delete', name: 'Delete Settings', description: 'Remove system settings' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n\r\n    // Load roles from backend\r\n    (async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await fetch('http://localhost:5000/api/roles', {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          }\r\n        });\r\n\r\n        if (res.ok) {\r\n          const result = await res.json();\r\n          if (Array.isArray(result.data) && result.data.length) {\r\n            // include the database id so we can fetch role permissions\r\n            setAvailableRoles(result.data.map(r => ({ id: r._id, value: r.value, label: r.label, description: r.description || '' })));\r\n          }\r\n        } else {\r\n          console.warn('Failed to fetch roles from backend, using defaults');\r\n        }\r\n      } catch (err) {\r\n        console.warn('Error fetching roles:', err);\r\n      }\r\n    })();\r\n\r\n    // Listen for roles added via other components\r\n    const handler = (e) => {\r\n      const payload = e?.detail;\r\n      if (payload && payload.value && payload.label) {\r\n        // Avoid duplicates\r\n        setAvailableRoles(prev => {\r\n          if (prev.find(r => r.value === payload.value)) return prev;\r\n          return [...prev, { value: payload.value, label: payload.label, description: '' }];\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('roleAdded', handler);\r\n    return () => window.removeEventListener('roleAdded', handler);\r\n  }, []);\r\n\r\n  // Fetch users from API\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsers(data.data || []);\r\n      } else {\r\n        console.error('Failed to fetch users');\r\n        setMessage('Failed to load users');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setMessage('Error loading users');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle role selection\r\n  const handleRoleSelect = (e) => {\r\n    const roleValue = e.target.value;\r\n    setSelectedRole(roleValue);\r\n    \r\n    if (roleValue) {\r\n      // Find available role metadata (contains id)\r\n      const roleMeta = availableRoles.find(r => r.value === roleValue);\r\n      const roleId = roleMeta?.id;\r\n      setSelectedRoleId(roleId || '');\r\n\r\n      if (roleId) {\r\n        (async () => {\r\n          try {\r\n            const token = localStorage.getItem('token');\r\n            const res = await fetch(`http://localhost:5000/api/roles/${roleId}`, {\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n              }\r\n            });\r\n\r\n            if (res.ok) {\r\n              const result = await res.json();\r\n              const roleDoc = result.data;\r\n              setFormData({ permissions: roleDoc.permissions || {} });\r\n              updateSelectAllStatus(roleDoc.permissions || {});\r\n            } else {\r\n              // fallback to user-based permissions if role doc cannot be fetched\r\n              const userWithRole = users.find(u => u.role === roleValue);\r\n              setFormData({ permissions: userWithRole?.permissions || {} });\r\n              updateSelectAllStatus(userWithRole?.permissions || {});\r\n            }\r\n          } catch (err) {\r\n            console.warn('Error fetching role document:', err);\r\n            const userWithRole = users.find(u => u.role === roleValue);\r\n            setFormData({ permissions: userWithRole?.permissions || {} });\r\n            updateSelectAllStatus(userWithRole?.permissions || {});\r\n          }\r\n        })();\r\n      } else {\r\n        // If no role id available, fallback to user-based permissions\r\n        const userWithRole = users.find(u => u.role === roleValue);\r\n        setFormData({ permissions: userWithRole?.permissions || {} });\r\n        updateSelectAllStatus(userWithRole?.permissions || {});\r\n      }\r\n    } else {\r\n      setFormData({\r\n        permissions: {}\r\n      });\r\n      setSelectAll(false);\r\n    }\r\n  };\r\n\r\n  // Handle permission checkbox changes\r\n  const handlePermissionChange = (category, permissionId) => {\r\n    if (!hasRoleUpdatePermission()) return; // prevent users without roles.update from making changes\r\n    const newPermissions = { ...formData.permissions };\r\n    \r\n    if (!newPermissions[category]) {\r\n      newPermissions[category] = {};\r\n    }\r\n    \r\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n    \r\n    updateSelectAllStatus(newPermissions);\r\n  };\r\n\r\n  // Handle select all toggle\r\n  const handleSelectAll = () => {\r\n    if (!hasRoleUpdatePermission()) return; // prevent users without roles.update from making changes\r\n    const newSelectAll = !selectAll;\r\n    setSelectAll(newSelectAll);\r\n    \r\n    const newPermissions = {};\r\n    \r\n    if (newSelectAll) {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = true;\r\n        });\r\n      });\r\n    } else {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = false;\r\n        });\r\n      });\r\n    }\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n  };\r\n\r\n  // Update select all status\r\n  const updateSelectAllStatus = (permissions) => {\r\n    let totalPermissions = 0;\r\n    let enabledPermissions = 0;\r\n    \r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        totalPermissions++;\r\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\r\n          enabledPermissions++;\r\n        }\r\n      });\r\n    });\r\n    \r\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\r\n  };\r\n\r\n  // Get total enabled permissions count\r\n  const getTotalEnabledPermissions = () => {\r\n    let count = 0;\r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  };\r\n\r\n  // Get total available permissions count\r\n  const getTotalAvailablePermissions = () => {\r\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\r\n  };\r\n\r\n  // Show confirmation modal instead of immediate submit\r\n  const openConfirm = (e) => {\r\n    e.preventDefault();\r\n    if (!hasRoleUpdatePermission()) {\r\n      setMessage('You do not have permission to modify role permissions. The \"Update Role Permissions\" access is required.');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n      return;\r\n    }\r\n\r\n    if (!selectedRole) {\r\n      setMessage('Please select a role first');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n      return;\r\n    }\r\n\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  // Confirm and perform save: persist to role doc then update users\r\n  const confirmAndSave = async () => {\r\n    setShowConfirm(false);\r\n    setSubmitting(true);\r\n    try {\r\n      // Persist permissions to role document (if we have an id)\r\n      const token = localStorage.getItem('token');\r\n      let roleSaved = false;\r\n      let savedRoleResponse = null;\r\n      if (selectedRoleId) {\r\n        const res = await fetch(`http://localhost:5000/api/permissions/roles/${selectedRoleId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          },\r\n          body: JSON.stringify({ permissions: formData.permissions })\r\n        });\r\n\r\n        const resJson = await res.json().catch(() => ({}));\r\n        if (!res.ok) {\r\n          // include server message if available\r\n          throw new Error(resJson.message || 'Failed to save role permissions');\r\n        }\r\n\r\n        roleSaved = true;\r\n        savedRoleResponse = resJson.data || null;\r\n\r\n        // Update local formData with authoritative permissions returned (if any)\r\n        if (savedRoleResponse && savedRoleResponse.permissions) {\r\n          setFormData({ permissions: savedRoleResponse.permissions });\r\n        }\r\n      }\r\n\r\n      // Now update users with the selected role\r\n      const usersWithRole = users.filter(u => u.role === selectedRole);\r\n      if (usersWithRole.length === 0) {\r\n        // If we saved the role document, treat that as a successful save even if no users exist for the role\r\n        if (roleSaved) {\r\n          const permissionCount = getTotalEnabledPermissions();\r\n          \r\n          // Show professional success modal for role permissions saved\r\n          showPermissionSuccessModal(selectedRoleData, 0, permissionCount);\r\n          \r\n          setMessage(`Role permissions saved successfully. No users found with role ${selectedRoleData?.label}`);\r\n          setMessageType('success');\r\n          setToastVisible(true);\r\n          setTimeout(() => setToastVisible(false), 4000);\r\n          setTimeout(() => { setMessage(''); setMessageType(''); }, 5000);\r\n          setSubmitting(false);\r\n          return;\r\n        }\r\n\r\n        setMessage('No users found with the selected role');\r\n        setMessageType('error');\r\n        setToastVisible(true);\r\n        setTimeout(() => setToastVisible(false), 4000);\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Use auth token for user updates as well (backend typically requires auth)\r\n      const updatePromises = usersWithRole.map(user =>\r\n        fetch(`http://localhost:5000/api/users/${user._id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          },\r\n          body: JSON.stringify({ permissions: formData.permissions })\r\n        }).then(async r => ({ ok: r.ok, status: r.status, body: await r.json().catch(() => ({})), userId: user._id }))\r\n      );\r\n\r\n      const results = await Promise.all(updatePromises);\r\n      const failed = results.filter(r => !r.ok);\r\n\r\n      if (failed.length === 0) {\r\n        setUsers(prevUsers => prevUsers.map(u => u.role === selectedRole ? { ...u, permissions: formData.permissions } : u));\r\n        \r\n        // Calculate permission count\r\n        const permissionCount = getTotalEnabledPermissions();\r\n        \r\n        // Show professional success modal\r\n        showPermissionSuccessModal(selectedRoleData, usersWithRole.length, permissionCount);\r\n        \r\n        // Also set the regular message for backup\r\n        setMessage(`Permissions updated successfully for ${usersWithRole.length} user(s)`);\r\n        setMessageType('success');\r\n        setToastVisible(true);\r\n        console.log('RoleAccessManagement: permissions updated successfully for users', usersWithRole.map(u => u._id));\r\n        \r\n        setTimeout(() => setToastVisible(false), 4000);\r\n        // Auto-hide message area too\r\n        setTimeout(() => { setMessage(''); setMessageType(''); }, 5000);\r\n        // Notify the app that permissions have changed so current sessions can refresh\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('permissionsChanged', { detail: { role: selectedRole } }));\r\n        } catch (e) { /* ignore */ }\r\n      } else {\r\n        // Build an informative message\r\n        const failedIds = failed.map(f => f.userId).slice(0, 5);\r\n        // collect server messages from failed responses\r\n        const serverMsgs = failed.map(f => (f.body && f.body.message) ? `${f.userId}: ${f.body.message}` : `${f.userId}: status ${f.status}`).slice(0,5);\r\n        setMessage(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Failed for: ${failedIds.join(', ')}${failed.length > 5 ? '...' : ''}`);\r\n        setMessageType('error');\r\n        setToastVisible(true);\r\n        setTimeout(() => setToastVisible(false), 7000);\r\n        console.warn('RoleAccessManagement: some user updates failed', failed);\r\n        try { window.alert(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Some updates failed.\\nDetails:\\n${serverMsgs.join('\\n')}`); } catch (e) {}\r\n        // Even on partial failure, notify app (some users may have new permissions)\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('permissionsChanged', { detail: { role: selectedRole } }));\r\n        } catch (e) { /* ignore */ }\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Error saving permissions:', err);\r\n      setMessage(err.message || 'Error updating role permissions');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Get users count for selected role\r\n  const getUsersCountForRole = () => {\r\n    if (!selectedRole) return 0;\r\n    return users.filter(user => user.role === selectedRole).length;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"role-access-wrapper\">\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\r\n  const selectedRoleUserCount = getUsersCountForRole();\r\n\r\n  return (\r\n    <div className=\"role-access-wrapper\">\r\n      {/* Decorative Elements */}\r\n      <div className=\"decorative-elements\">\r\n        <div className=\"geometric-shape shape-1\"></div>\r\n        <div className=\"geometric-shape shape-2\"></div>\r\n        <div className=\"geometric-shape shape-3\"></div>\r\n        <div className=\"geometric-shape shape-4\"></div>\r\n      </div>\r\n\r\n      <div className=\"container-fluid px-4\">\r\n        <div className=\"main-card\">\r\n          <div className=\"card-header-custom\">\r\n            <div className=\"header-content\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n              <div className=\"header-text\">\r\n                <div className=\"icon-wrapper-large\">\r\n                  <i className=\"bi bi-shield-check\"></i>\r\n                </div>\r\n                <h1 className=\"page-title\">Role Access Management</h1>\r\n                <p className=\"page-subtitle\">Configure permissions for user roles - changes apply to all users with the selected role</p>\r\n              </div>\r\n              \r\n              {/* Always show Manage Roles button, but disable it if no permission */}\r\n              <button\r\n                className=\"btn-professional btn-secondary\"\r\n                onClick={() => hasRoleReadPermission() && window.dispatchEvent(new CustomEvent('navigateTo', { detail: 'role-management' }))}\r\n                title={!hasRoleReadPermission() ? 'You need \"View Roles & Permissions\" access to manage roles' : 'Manage Roles'}\r\n                style={{ \r\n                  padding: '10px 16px', \r\n                  fontSize: '14px',\r\n                  cursor: !hasRoleReadPermission() ? 'not-allowed' : 'pointer',\r\n                  opacity: !hasRoleReadPermission() ? 0.6 : 1\r\n                }}\r\n                disabled={!hasRoleReadPermission()}\r\n              >\r\n                <i className=\"bi bi-gear\"></i> Manage Roles\r\n                {!hasRoleReadPermission() && (\r\n                  <i className=\"bi bi-lock-fill ml-2\" style={{ color: '#dc3545', fontSize: '12px' }}></i>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"card-body-custom\">\r\n            {/* Toast popup */}\r\n            {toastVisible && message && (\r\n              <div className={`toast-popup ${messageType === 'success' ? 'toast-success' : 'toast-error'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Inline message area */}\r\n            {message && !toastVisible && (\r\n              <div className={`alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Add access denied message for users without roles.read permission */}\r\n            {!hasRoleReadPermission() && (\r\n              <div className=\"alert alert-warning mt-3\">\r\n                <i className=\"bi bi-lock-fill mr-2\"></i>\r\n                You do not have permission to view roles and permissions. The \"View Roles & Permissions\" access is required to use this feature.\r\n              </div>\r\n            )}\r\n\r\n            {/* Only show the rest of the component if user has roles.read permission */}\r\n            {hasRoleReadPermission() && (\r\n              <>\r\n                {/* Stats Section */}\r\n                <div className=\"stats-section\">\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{availableRoles.length}</span>\r\n                <span className=\"stats-label\">Available Roles</span>\r\n              </div>\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{getTotalAvailablePermissions()}</span>\r\n                <span className=\"stats-label\">Available Permissions</span>\r\n              </div>\r\n              {selectedRole && (\r\n                <>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{selectedRoleUserCount}</span>\r\n                    <span className=\"stats-label\">Users with this Role</span>\r\n                  </div>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{getTotalEnabledPermissions()}</span>\r\n                    <span className=\"stats-label\">Granted Permissions</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Role Selection */}\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"role\" className=\"form-label-modern\">\r\n                <i className=\"bi bi-person-gear text-primary mr-2\"></i>Select Role to Manage\r\n              </label>\r\n              <select \r\n                name=\"role\" \r\n                id=\"role\" \r\n                className=\"form-control form-control-modern\" \r\n                value={selectedRole}\r\n                onChange={handleRoleSelect}\r\n                disabled={!hasRoleReadPermission()}\r\n                title={!hasRoleReadPermission() ? 'You need \"View Roles & Permissions\" access to select roles' : ''}\r\n              >\r\n                <option value=\"\">-- Choose a role to configure --</option>\r\n                {availableRoles.map(role => (\r\n                  <option key={role.value} value={role.value}>\r\n                    {role.label} - {role.description}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {selectedRole && (\r\n                <small className=\"text-muted mt-2 d-block\">\r\n                  <i className=\"bi bi-info-circle mr-1\"></i>\r\n                  This will update permissions for {selectedRoleUserCount} user(s) with the role: {selectedRoleData?.label}\r\n                </small>\r\n              )}\r\n\r\n              {!isSuperAdmin && !hasRoleUpdatePermission() && (\r\n                <div className=\"alert alert-warning mt-3\">\r\n                  <i className=\"bi bi-lock-fill mr-2\"></i>\r\n                  You have view-only access. To modify role permissions, you need the \"Update Role Permissions\" access.\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Permissions Configuration */}\r\n            {selectedRole && (\r\n              <div className=\"form-section\">\r\n                <form onSubmit={openConfirm}>\r\n                  <h3 style={{ color: '#333', marginBottom: '20px', fontWeight: '600' }}>\r\n                    <i className=\"bi bi-shield-alt text-primary mr-2\"></i>\r\n                    Configure Access Permissions for Role: <span style={{ color: '#667eea' }}>{selectedRoleData?.label}</span>\r\n                  </h3>\r\n\r\n                  <div className=\"alert alert-info\" style={{ backgroundColor: '#e3f2fd', border: '1px solid #bbdefb', borderRadius: '6px', padding: '12px', marginBottom: '20px' }}>\r\n                    <i className=\"bi bi-info-circle text-primary mr-2\"></i>\r\n                    <strong>Note:</strong> Changes will be applied to all {selectedRoleUserCount} user(s) with the role \"{selectedRoleData?.label}\"\r\n                  </div>\r\n\r\n                  {/* Select All Section */}\r\n                  <div className=\"select-all-section\" style={{ \r\n                    opacity: hasRoleUpdatePermission() ? 1 : 0.6,\r\n                    cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'default'\r\n                  }}>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      id=\"select-all\"\r\n                      checked={selectAll}\r\n                      onChange={handleSelectAll}\r\n                      disabled={!isSuperAdmin && !hasRoleUpdatePermission()}\r\n                      style={{ cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer' }}\r\n                    />\r\n                    <label htmlFor=\"select-all\" style={{ cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer' }}>\r\n                      <i className=\"bi bi-check2-all mr-2\"></i>Select All Permissions\r\n                      {!isSuperAdmin && !hasRoleUpdatePermission() && (\r\n                        <i className=\"bi bi-lock-fill ml-2\" style={{ color: '#dc3545', fontSize: '12px' }}></i>\r\n                      )}\r\n                    </label>\r\n                    <span className=\"permission-counter\">\r\n                      {getTotalEnabledPermissions()}/{getTotalAvailablePermissions()} permissions selected\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Permissions Grid by Category */}\r\n                  {availablePermissions.map(category => (\r\n                    <div key={category.category} className=\"permission-category\" style={{ \r\n                      opacity: hasRoleUpdatePermission() ? 1 : 0.6 \r\n                    }}>\r\n                      <h4 className=\"category-title\">\r\n                        <i className=\"bi bi-folder text-primary mr-2\"></i>\r\n                        {category.name}\r\n                        {!isSuperAdmin && !hasRoleUpdatePermission() && (\r\n                          <span className=\"badge badge-secondary ml-2\" style={{ fontSize: '10px' }}>\r\n                            <i className=\"bi bi-eye\"></i> View Only\r\n                          </span>\r\n                        )}\r\n                      </h4>\r\n                      <div className=\"checkbox-grid\">\r\n                        {category.permissions.map(permission => {\r\n                          const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\r\n                          return (\r\n                            <div \r\n                              key={`${category.category}_${permission.id}`} \r\n                              className={`checkbox-item ${isChecked ? 'selected' : ''} ${!isSuperAdmin && !hasRoleUpdatePermission() ? 'disabled' : ''}`}\r\n                              onClick={() => (isSuperAdmin || hasRoleUpdatePermission()) && handlePermissionChange(category.category, permission.id)}\r\n                              style={{ \r\n                                cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer',\r\n                                opacity: hasRoleUpdatePermission() ? 1 : 0.7\r\n                              }}\r\n                            >\r\n                              <input \r\n                                type=\"checkbox\" \r\n                                checked={isChecked || false}\r\n                                onChange={() => handlePermissionChange(category.category, permission.id)}\r\n                                id={`perm_${category.category}_${permission.id}`}\r\n                                disabled={!isSuperAdmin && !hasRoleUpdatePermission()}\r\n                                style={{ cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer' }}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                              <label htmlFor={`perm_${category.category}_${permission.id}`} style={{ \r\n                                cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer' \r\n                              }}>\r\n                                <div className=\"permission-title\">\r\n                                  <i className=\"bi bi-file-text text-muted mr-2\"></i>\r\n                                  {permission.name}\r\n                                  {!isSuperAdmin && !hasRoleUpdatePermission() && (\r\n                                    <i className=\"bi bi-lock-fill ml-2\" style={{ color: '#dc3545', fontSize: '11px' }}></i>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"permission-description\">\r\n                                  {permission.description}\r\n                                </div>\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Submit Button */}\r\n                  <div className=\"text-center mt-4\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"btn-save-modern\"\r\n                      disabled={submitting || (!isSuperAdmin && !hasRoleUpdatePermission())}\r\n                      title={!isSuperAdmin && !hasRoleUpdatePermission() ? 'You need \"Update Role Permissions\" access to apply changes' : ''}\r\n                      onClick={openConfirm}\r\n                      style={{ \r\n                        cursor: !isSuperAdmin && !hasRoleUpdatePermission() ? 'not-allowed' : 'pointer' \r\n                      }}\r\n                    >\r\n                      {submitting ? (\r\n                        <>\r\n                          <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                          </div>\r\n                          Updating {selectedRoleUserCount} user(s)...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <i className=\"bi bi-save mr-2\"></i>\r\n                          Apply to All {selectedRoleUserCount} User(s) with Role: {selectedRoleData?.label}\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      {/* Loading Overlay */}\r\n      {submitting && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirmation Modal */}\r\n      {showConfirm && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowConfirm(false)}>\r\n          <div className=\"modal-content confirm-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h4>Confirm Permission Changes</h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>You're about to apply the selected permissions to <strong>{selectedRoleUserCount}</strong> user(s) with the role <strong>{selectedRoleData?.label}</strong>.</p>\r\n              <p>This action will update both the role's permission document and the users' effective permissions. Are you sure you want to continue?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn-professional btn-secondary\" onClick={() => setShowConfirm(false)}>Cancel</button>\r\n              <button className=\"btn-professional btn-success\" onClick={confirmAndSave}>Yes, apply changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Professional Permission Update Success Modal */}\r\n      {showSuccessModal && (\r\n        <div className=\"modal-overlay\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.6)', zIndex: 10000 }}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()} style={{ \r\n            maxWidth: '600px', \r\n            background: 'linear-gradient(135deg, #ffffff, #f8f9fa)',\r\n            border: '2px solid #28a745',\r\n            borderRadius: '12px',\r\n            boxShadow: '0 15px 35px rgba(40, 167, 69, 0.2)',\r\n            animation: 'fadeInUp 0.3s ease-out'\r\n          }}>\r\n            {/* Header */}\r\n            <div style={{ \r\n              background: 'linear-gradient(135deg, #28a745, #20c997)',\r\n              color: 'white',\r\n              padding: '25px 30px',\r\n              borderRadius: '10px 10px 0 0',\r\n              textAlign: 'center'\r\n            }}>\r\n              <div style={{ fontSize: '48px', marginBottom: '10px' }}>\r\n                <i className=\"bi bi-shield-check\"></i>\r\n              </div>\r\n              <h2 style={{ margin: 0, fontWeight: 'bold', fontSize: '24px' }}>\r\n                Permission Update Completed\r\n              </h2>\r\n              <p style={{ margin: '5px 0 0 0', opacity: 0.9, fontSize: '14px' }}>\r\n                System Access Control Updated Successfully\r\n              </p>\r\n            </div>\r\n\r\n            {/* Body */}\r\n            <div style={{ padding: '30px' }}>\r\n              <div style={{ \r\n                background: '#f8f9fa',\r\n                border: '1px solid #e9ecef',\r\n                borderRadius: '8px',\r\n                padding: '20px',\r\n                marginBottom: '25px'\r\n              }}>\r\n                <h4 style={{ \r\n                  color: '#495057',\r\n                  marginBottom: '15px',\r\n                  fontSize: '18px',\r\n                  fontWeight: '600'\r\n                }}>\r\n                  <i className=\"bi bi-info-circle\" style={{ color: '#28a745', marginRight: '8px' }}></i>\r\n                  Update Summary\r\n                </h4>\r\n                \r\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Role Updated:</strong>\r\n                    <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#28a745' }}>\r\n                      {successDetails.roleName}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Users Affected:</strong>\r\n                    <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#28a745' }}>\r\n                      {successDetails.userCount} {successDetails.userCount === 1 ? 'User' : 'Users'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Permissions Granted:</strong>\r\n                    <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#28a745' }}>\r\n                      {successDetails.permissionCount} Permissions\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Updated At:</strong>\r\n                    <div style={{ fontSize: '14px', color: '#495057' }}>\r\n                      {successDetails.timestamp}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ \r\n                background: '#d4edda',\r\n                border: '1px solid #c3e6cb',\r\n                borderRadius: '8px',\r\n                padding: '15px',\r\n                marginBottom: '25px'\r\n              }}>\r\n                <p style={{ \r\n                  margin: 0,\r\n                  color: '#155724',\r\n                  fontSize: '14px',\r\n                  lineHeight: '1.5'\r\n                }}>\r\n                  <i className=\"bi bi-check-circle-fill\" style={{ marginRight: '8px' }}></i>\r\n                  <strong>All permission changes have been successfully applied to the system.</strong>\r\n                  {successDetails.userCount > 0 && (\r\n                    <span> Affected users will see the updated permissions on their next login or page refresh.</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n\r\n              <div style={{ textAlign: 'center' }}>\r\n                <button \r\n                  className=\"btn-professional btn-success\"\r\n                  onClick={() => setShowSuccessModal(false)}\r\n                  style={{ \r\n                    padding: '12px 40px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    minWidth: '150px'\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-check2-circle\"></i> Acknowledged\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}