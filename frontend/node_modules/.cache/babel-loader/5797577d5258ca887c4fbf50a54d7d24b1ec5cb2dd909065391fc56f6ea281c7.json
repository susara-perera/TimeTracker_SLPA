{"ast":null,"code":"var _jsxFileName = \"B:\\\\PortAuthProject\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing token on app start\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Verify token with backend\n          const response = await fetch('http://localhost:5000/api/auth/verify', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            },\n            credentials: 'include'\n          });\n          if (response.ok) {\n            const data = await response.json();\n            if (data.success && data.user) {\n              setUser(data.user);\n            } else {\n              localStorage.removeItem('token');\n            }\n          } else {\n            localStorage.removeItem('token');\n          }\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n        localStorage.removeItem('token');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async credentials => {\n    try {\n      console.log('Attempting login with credentials:', credentials);\n\n      // Make API call to backend for authentication\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(credentials)\n      });\n      console.log('Login response status:', response.status);\n      const data = await response.json();\n      console.log('Login response data:', data);\n      if (!response.ok) {\n        // Handle specific error cases\n        if (response.status === 401) {\n          throw new Error(data.message || 'Invalid credentials');\n        } else if (response.status === 423) {\n          throw new Error('Account locked due to multiple failed attempts');\n        } else if (response.status === 403) {\n          throw new Error('Account deactivated. Contact administrator');\n        } else {\n          throw new Error(data.message || 'Login failed');\n        }\n      }\n      if (!data.success) {\n        throw new Error(data.message || 'Login failed');\n      }\n\n      // Validate user data\n      if (!data.user || !data.user.id) {\n        throw new Error('Invalid user data received');\n      }\n\n      // Check if user is active\n      if (data.user.isActive === false) {\n        throw new Error('Your account has been deactivated');\n      }\n\n      // Store token and user data\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n      }\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        // Call backend logout\n        await fetch('http://localhost:5000/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Always clean up local state\n      localStorage.removeItem('token');\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","response","fetch","method","headers","credentials","ok","data","json","success","removeItem","error","console","login","log","body","JSON","stringify","status","Error","message","id","isActive","setItem","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["B:/PortAuthProject/TimeTracker_SLPA/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check for existing token on app start\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          // Verify token with backend\r\n          const response = await fetch('http://localhost:5000/api/auth/verify', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            if (data.success && data.user) {\r\n              setUser(data.user);\r\n            } else {\r\n              localStorage.removeItem('token');\r\n            }\r\n          } else {\r\n            localStorage.removeItem('token');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth check error:', error);\r\n        localStorage.removeItem('token');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      console.log('Attempting login with credentials:', credentials);\r\n      \r\n      // Make API call to backend for authentication\r\n      const response = await fetch('http://localhost:5000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(credentials)\r\n      });\r\n\r\n      console.log('Login response status:', response.status);\r\n      const data = await response.json();\r\n      console.log('Login response data:', data);\r\n\r\n      if (!response.ok) {\r\n        // Handle specific error cases\r\n        if (response.status === 401) {\r\n          throw new Error(data.message || 'Invalid credentials');\r\n        } else if (response.status === 423) {\r\n          throw new Error('Account locked due to multiple failed attempts');\r\n        } else if (response.status === 403) {\r\n          throw new Error('Account deactivated. Contact administrator');\r\n        } else {\r\n          throw new Error(data.message || 'Login failed');\r\n        }\r\n      }\r\n\r\n      if (!data.success) {\r\n        throw new Error(data.message || 'Login failed');\r\n      }\r\n\r\n      // Validate user data\r\n      if (!data.user || !data.user.id) {\r\n        throw new Error('Invalid user data received');\r\n      }\r\n\r\n      // Check if user is active\r\n      if (data.user.isActive === false) {\r\n        throw new Error('Your account has been deactivated');\r\n      }\r\n\r\n      // Store token and user data\r\n      if (data.token) {\r\n        localStorage.setItem('token', data.token);\r\n      }\r\n      \r\n      setUser(data.user);\r\n      return data;\r\n\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        // Call backend logout\r\n        await fetch('http://localhost:5000/api/auth/logout', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      // Always clean up local state\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    logout,\r\n    loading,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}