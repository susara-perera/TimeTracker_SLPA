{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./RoleAccessManagement.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RoleAccessManagement=()=>{const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[selectedRole,setSelectedRole]=useState('');const[selectAll,setSelectAll]=useState(false);const[formData,setFormData]=useState({permissions:{}});const[submitting,setSubmitting]=useState(false);const[message,setMessage]=useState('');const[messageType,setMessageType]=useState('');// Available roles\nconst availableRoles=[{value:'super_admin',label:'Super Admin',description:'Highest level system administrator'},{value:'admin',label:'Administrator',description:'System administrator with management rights'},{value:'administrative_clerk',label:'Administrative Clerk',description:'Administrative support staff'},{value:'clerk',label:'Clerk',description:'General office clerk'},{value:'employee',label:'Employee',description:'Regular system user'}];// Available permissions list based on User model\nconst availablePermissions=[{category:'users',name:'User Management',permissions:[{id:'create',name:'Create Users',description:'Add new users to the system'},{id:'read',name:'View Users',description:'View user information and lists'},{id:'update',name:'Update Users',description:'Edit user information and profiles'},{id:'delete',name:'Delete Users',description:'Remove users from the system'}]},{category:'attendance',name:'Attendance Management',permissions:[{id:'create',name:'Create Attendance',description:'Add attendance records'},{id:'read',name:'View Attendance',description:'View attendance records and reports'},{id:'update',name:'Update Attendance',description:'Edit attendance records'},{id:'delete',name:'Delete Attendance',description:'Remove attendance records'}]},{category:'reports',name:'Reports Management',permissions:[{id:'create',name:'Generate Reports',description:'Create system reports'},{id:'read',name:'View Reports',description:'Access and view reports'},{id:'update',name:'Update Reports',description:'Modify report settings'},{id:'delete',name:'Delete Reports',description:'Remove reports from system'}]},{category:'divisions',name:'Division Management',permissions:[{id:'create',name:'Create Divisions',description:'Add new company divisions'},{id:'read',name:'View Divisions',description:'View division information'},{id:'update',name:'Update Divisions',description:'Edit division details'},{id:'delete',name:'Delete Divisions',description:'Remove divisions'}]},{category:'settings',name:'System Settings',permissions:[{id:'create',name:'Create Settings',description:'Add new system configurations'},{id:'read',name:'View Settings',description:'Access system settings'},{id:'update',name:'Update Settings',description:'Modify system configurations'},{id:'delete',name:'Delete Settings',description:'Remove system settings'}]}];useEffect(()=>{fetchUsers();},[]);// Fetch users from API\nconst fetchUsers=async()=>{try{const response=await fetch('http://localhost:5000/api/users');if(response.ok){const data=await response.json();setUsers(data.data||[]);}else{console.error('Failed to fetch users');setMessage('Failed to load users');setMessageType('error');}}catch(error){console.error('Error fetching users:',error);setMessage('Error loading users');setMessageType('error');}finally{setLoading(false);}};// Handle role selection\nconst handleRoleSelect=e=>{const roleValue=e.target.value;setSelectedRole(roleValue);if(roleValue){// Find a user with this role to get current permissions\nconst userWithRole=users.find(u=>u.role===roleValue);if(userWithRole){setFormData({permissions:userWithRole.permissions||{}});updateSelectAllStatus(userWithRole.permissions||{});}else{// If no user with this role exists, start with empty permissions\nsetFormData({permissions:{}});setSelectAll(false);}}else{setFormData({permissions:{}});setSelectAll(false);}};// Handle permission checkbox changes\nconst handlePermissionChange=(category,permissionId)=>{const newPermissions={...formData.permissions};if(!newPermissions[category]){newPermissions[category]={};}newPermissions[category][permissionId]=!newPermissions[category][permissionId];setFormData(prev=>({...prev,permissions:newPermissions}));updateSelectAllStatus(newPermissions);};// Handle select all toggle\nconst handleSelectAll=()=>{const newSelectAll=!selectAll;setSelectAll(newSelectAll);const newPermissions={};if(newSelectAll){availablePermissions.forEach(category=>{newPermissions[category.category]={};category.permissions.forEach(perm=>{newPermissions[category.category][perm.id]=true;});});}else{availablePermissions.forEach(category=>{newPermissions[category.category]={};category.permissions.forEach(perm=>{newPermissions[category.category][perm.id]=false;});});}setFormData(prev=>({...prev,permissions:newPermissions}));};// Update select all status\nconst updateSelectAllStatus=permissions=>{let totalPermissions=0;let enabledPermissions=0;availablePermissions.forEach(category=>{category.permissions.forEach(perm=>{totalPermissions++;if(permissions[category.category]&&permissions[category.category][perm.id]){enabledPermissions++;}});});setSelectAll(enabledPermissions===totalPermissions&&totalPermissions>0);};// Get total enabled permissions count\nconst getTotalEnabledPermissions=()=>{let count=0;availablePermissions.forEach(category=>{category.permissions.forEach(perm=>{if(formData.permissions[category.category]&&formData.permissions[category.category][perm.id]){count++;}});});return count;};// Get total available permissions count\nconst getTotalAvailablePermissions=()=>{return availablePermissions.reduce((total,category)=>total+category.permissions.length,0);};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();if(!selectedRole){setMessage('Please select a role first');setMessageType('error');return;}setSubmitting(true);try{// Get all users with the selected role\nconst usersWithRole=users.filter(user=>user.role===selectedRole);if(usersWithRole.length===0){setMessage('No users found with the selected role');setMessageType('error');setSubmitting(false);return;}// Update permissions for all users with this role\nconst updatePromises=usersWithRole.map(user=>fetch(`http://localhost:5000/api/users/${user._id}`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({permissions:formData.permissions})}));const responses=await Promise.all(updatePromises);// Check if all updates were successful\nconst allSuccessful=responses.every(response=>response.ok);if(allSuccessful){// Update the users in state\nsetUsers(prevUsers=>prevUsers.map(user=>user.role===selectedRole?{...user,permissions:formData.permissions}:user));setMessage(`Permissions updated successfully for all ${usersWithRole.length} users with role: ${selectedRole}`);setMessageType('success');// Auto-hide message after 5 seconds\nsetTimeout(()=>{setMessage('');setMessageType('');},5000);}else{setMessage('Some users could not be updated. Please try again.');setMessageType('error');}}catch(error){console.error('Error updating permissions:',error);setMessage('Error updating role permissions. Please try again.');setMessageType('error');}finally{setSubmitting(false);}};// Get users count for selected role\nconst getUsersCountForRole=()=>{if(!selectedRole)return 0;return users.filter(user=>user.role===selectedRole).length;};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"role-access-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"})})});}const selectedRoleData=availableRoles.find(r=>r.value===selectedRole);const selectedRoleUserCount=getUsersCountForRole();return/*#__PURE__*/_jsxs(\"div\",{className:\"role-access-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"decorative-elements\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-4\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid px-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header-custom\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon-wrapper-large\",children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-shield-check\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Role Access Management\"}),/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle\",children:\"Configure permissions for user roles - changes apply to all users with the selected role\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body-custom\",children:[message&&/*#__PURE__*/_jsxs(\"div\",{className:`alert ${messageType==='success'?'alert-success-modern':'alert-error-modern'}`,children:[/*#__PURE__*/_jsx(\"i\",{className:`bi ${messageType==='success'?'bi-check-circle':'bi-exclamation-circle'} mr-2`}),message]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:availableRoles.length}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Available Roles\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:getTotalAvailablePermissions()}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Available Permissions\"})]}),selectedRole&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:selectedRoleUserCount}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Users with this Role\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:getTotalEnabledPermissions()}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Granted Permissions\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"role\",className:\"form-label-modern\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-person-gear text-primary mr-2\"}),\"Select Role to Manage\"]}),/*#__PURE__*/_jsxs(\"select\",{name:\"role\",id:\"role\",className:\"form-control form-control-modern\",value:selectedRole,onChange:handleRoleSelect,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Choose a role to configure --\"}),availableRoles.map(role=>/*#__PURE__*/_jsxs(\"option\",{value:role.value,children:[role.label,\" - \",role.description]},role.value))]}),selectedRole&&/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted mt-2 d-block\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-info-circle mr-1\"}),\"This will update permissions for \",selectedRoleUserCount,\" user(s) with the role: \",selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label]})]}),selectedRole&&/*#__PURE__*/_jsx(\"div\",{className:\"form-section\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:'#333',marginBottom:'20px',fontWeight:'600'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-shield-alt text-primary mr-2\"}),\"Configure Access Permissions for Role: \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#667eea'},children:selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-info\",style:{backgroundColor:'#e3f2fd',border:'1px solid #bbdefb',borderRadius:'6px',padding:'12px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-info-circle text-primary mr-2\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" Changes will be applied to all \",selectedRoleUserCount,\" user(s) with the role \\\"\",selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label,\"\\\"\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-all-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"select-all\",checked:selectAll,onChange:handleSelectAll}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"select-all\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check2-all mr-2\"}),\"Select All Permissions\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"permission-counter\",children:[getTotalEnabledPermissions(),\"/\",getTotalAvailablePermissions(),\" permissions selected\"]})]}),availablePermissions.map(category=>/*#__PURE__*/_jsxs(\"div\",{className:\"permission-category\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"category-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-folder text-primary mr-2\"}),category.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-grid\",children:category.permissions.map(permission=>{const isChecked=formData.permissions[category.category]&&formData.permissions[category.category][permission.id];return/*#__PURE__*/_jsxs(\"div\",{className:`checkbox-item ${isChecked?'selected':''}`,onClick:()=>handlePermissionChange(category.category,permission.id),children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isChecked||false,onChange:()=>handlePermissionChange(category.category,permission.id),id:`perm_${category.category}_${permission.id}`}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:`perm_${category.category}_${permission.id}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"permission-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-file-text text-muted mr-2\"}),permission.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"permission-description\",children:permission.description})]})]},`${category.category}_${permission.id}`);})})]},category.category)),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-save-modern\",disabled:submitting,children:submitting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border spinner-border-sm mr-2\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),\"Updating \",selectedRoleUserCount,\" user(s)...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-save mr-2\"}),\"Apply to All \",selectedRoleUserCount,\" User(s) with Role: \",selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label]})})})]})})]})]})}),submitting&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"})})]});};export default RoleAccessManagement;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RoleAccessManagement","users","setUsers","loading","setLoading","selectedRole","setSelectedRole","selectAll","setSelectAll","formData","setFormData","permissions","submitting","setSubmitting","message","setMessage","messageType","setMessageType","availableRoles","value","label","description","availablePermissions","category","name","id","fetchUsers","response","fetch","ok","data","json","console","error","handleRoleSelect","e","roleValue","target","userWithRole","find","u","role","updateSelectAllStatus","handlePermissionChange","permissionId","newPermissions","prev","handleSelectAll","newSelectAll","forEach","perm","totalPermissions","enabledPermissions","getTotalEnabledPermissions","count","getTotalAvailablePermissions","reduce","total","length","handleSubmit","preventDefault","usersWithRole","filter","user","updatePromises","map","_id","method","headers","body","JSON","stringify","responses","Promise","all","allSuccessful","every","prevUsers","setTimeout","getUsersCountForRole","className","children","selectedRoleData","r","selectedRoleUserCount","htmlFor","onChange","onSubmit","style","color","marginBottom","fontWeight","backgroundColor","border","borderRadius","padding","type","checked","permission","isChecked","onClick","disabled"],"sources":["B:/PortAuthProject/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './RoleAccessManagement.css';\r\n\r\nconst RoleAccessManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    permissions: {}\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n\r\n  // Available roles\r\n  const availableRoles = [\r\n    { value: 'super_admin', label: 'Super Admin', description: 'Highest level system administrator' },\r\n    { value: 'admin', label: 'Administrator', description: 'System administrator with management rights' },\r\n    { value: 'administrative_clerk', label: 'Administrative Clerk', description: 'Administrative support staff' },\r\n    { value: 'clerk', label: 'Clerk', description: 'General office clerk' },\r\n    { value: 'employee', label: 'Employee', description: 'Regular system user' }\r\n  ];\r\n\r\n  // Available permissions list based on User model\r\n  const availablePermissions = [\r\n    { \r\n      category: 'users', \r\n      name: 'User Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Users', description: 'Add new users to the system' },\r\n        { id: 'read', name: 'View Users', description: 'View user information and lists' },\r\n        { id: 'update', name: 'Update Users', description: 'Edit user information and profiles' },\r\n        { id: 'delete', name: 'Delete Users', description: 'Remove users from the system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'attendance', \r\n      name: 'Attendance Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Attendance', description: 'Add attendance records' },\r\n        { id: 'read', name: 'View Attendance', description: 'View attendance records and reports' },\r\n        { id: 'update', name: 'Update Attendance', description: 'Edit attendance records' },\r\n        { id: 'delete', name: 'Delete Attendance', description: 'Remove attendance records' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'reports', \r\n      name: 'Reports Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Generate Reports', description: 'Create system reports' },\r\n        { id: 'read', name: 'View Reports', description: 'Access and view reports' },\r\n        { id: 'update', name: 'Update Reports', description: 'Modify report settings' },\r\n        { id: 'delete', name: 'Delete Reports', description: 'Remove reports from system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'divisions', \r\n      name: 'Division Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Divisions', description: 'Add new company divisions' },\r\n        { id: 'read', name: 'View Divisions', description: 'View division information' },\r\n        { id: 'update', name: 'Update Divisions', description: 'Edit division details' },\r\n        { id: 'delete', name: 'Delete Divisions', description: 'Remove divisions' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'settings', \r\n      name: 'System Settings', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Settings', description: 'Add new system configurations' },\r\n        { id: 'read', name: 'View Settings', description: 'Access system settings' },\r\n        { id: 'update', name: 'Update Settings', description: 'Modify system configurations' },\r\n        { id: 'delete', name: 'Delete Settings', description: 'Remove system settings' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch users from API\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsers(data.data || []);\r\n      } else {\r\n        console.error('Failed to fetch users');\r\n        setMessage('Failed to load users');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setMessage('Error loading users');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle role selection\r\n  const handleRoleSelect = (e) => {\r\n    const roleValue = e.target.value;\r\n    setSelectedRole(roleValue);\r\n    \r\n    if (roleValue) {\r\n      // Find a user with this role to get current permissions\r\n      const userWithRole = users.find(u => u.role === roleValue);\r\n      if (userWithRole) {\r\n        setFormData({\r\n          permissions: userWithRole.permissions || {}\r\n        });\r\n        updateSelectAllStatus(userWithRole.permissions || {});\r\n      } else {\r\n        // If no user with this role exists, start with empty permissions\r\n        setFormData({\r\n          permissions: {}\r\n        });\r\n        setSelectAll(false);\r\n      }\r\n    } else {\r\n      setFormData({\r\n        permissions: {}\r\n      });\r\n      setSelectAll(false);\r\n    }\r\n  };\r\n\r\n  // Handle permission checkbox changes\r\n  const handlePermissionChange = (category, permissionId) => {\r\n    const newPermissions = { ...formData.permissions };\r\n    \r\n    if (!newPermissions[category]) {\r\n      newPermissions[category] = {};\r\n    }\r\n    \r\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n    \r\n    updateSelectAllStatus(newPermissions);\r\n  };\r\n\r\n  // Handle select all toggle\r\n  const handleSelectAll = () => {\r\n    const newSelectAll = !selectAll;\r\n    setSelectAll(newSelectAll);\r\n    \r\n    const newPermissions = {};\r\n    \r\n    if (newSelectAll) {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = true;\r\n        });\r\n      });\r\n    } else {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = false;\r\n        });\r\n      });\r\n    }\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n  };\r\n\r\n  // Update select all status\r\n  const updateSelectAllStatus = (permissions) => {\r\n    let totalPermissions = 0;\r\n    let enabledPermissions = 0;\r\n    \r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        totalPermissions++;\r\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\r\n          enabledPermissions++;\r\n        }\r\n      });\r\n    });\r\n    \r\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\r\n  };\r\n\r\n  // Get total enabled permissions count\r\n  const getTotalEnabledPermissions = () => {\r\n    let count = 0;\r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  };\r\n\r\n  // Get total available permissions count\r\n  const getTotalAvailablePermissions = () => {\r\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedRole) {\r\n      setMessage('Please select a role first');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    \r\n    try {\r\n      // Get all users with the selected role\r\n      const usersWithRole = users.filter(user => user.role === selectedRole);\r\n      \r\n      if (usersWithRole.length === 0) {\r\n        setMessage('No users found with the selected role');\r\n        setMessageType('error');\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Update permissions for all users with this role\r\n      const updatePromises = usersWithRole.map(user => \r\n        fetch(`http://localhost:5000/api/users/${user._id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            permissions: formData.permissions\r\n          }),\r\n        })\r\n      );\r\n\r\n      const responses = await Promise.all(updatePromises);\r\n      \r\n      // Check if all updates were successful\r\n      const allSuccessful = responses.every(response => response.ok);\r\n      \r\n      if (allSuccessful) {\r\n        // Update the users in state\r\n        setUsers(prevUsers => \r\n          prevUsers.map(user => \r\n            user.role === selectedRole \r\n              ? { ...user, permissions: formData.permissions }\r\n              : user\r\n          )\r\n        );\r\n        \r\n        setMessage(`Permissions updated successfully for all ${usersWithRole.length} users with role: ${selectedRole}`);\r\n        setMessageType('success');\r\n        \r\n        // Auto-hide message after 5 seconds\r\n        setTimeout(() => {\r\n          setMessage('');\r\n          setMessageType('');\r\n        }, 5000);\r\n      } else {\r\n        setMessage('Some users could not be updated. Please try again.');\r\n        setMessageType('error');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating permissions:', error);\r\n      setMessage('Error updating role permissions. Please try again.');\r\n      setMessageType('error');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Get users count for selected role\r\n  const getUsersCountForRole = () => {\r\n    if (!selectedRole) return 0;\r\n    return users.filter(user => user.role === selectedRole).length;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"role-access-wrapper\">\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\r\n  const selectedRoleUserCount = getUsersCountForRole();\r\n\r\n  return (\r\n    <div className=\"role-access-wrapper\">\r\n      {/* Decorative Elements */}\r\n      <div className=\"decorative-elements\">\r\n        <div className=\"geometric-shape shape-1\"></div>\r\n        <div className=\"geometric-shape shape-2\"></div>\r\n        <div className=\"geometric-shape shape-3\"></div>\r\n        <div className=\"geometric-shape shape-4\"></div>\r\n      </div>\r\n\r\n      <div className=\"container-fluid px-4\">\r\n        <div className=\"main-card\">\r\n          <div className=\"card-header-custom\">\r\n            <div className=\"icon-wrapper-large\">\r\n              <i className=\"bi bi-shield-check\"></i>\r\n            </div>\r\n            <h1 className=\"page-title\">Role Access Management</h1>\r\n            <p className=\"page-subtitle\">Configure permissions for user roles - changes apply to all users with the selected role</p>\r\n          </div>\r\n          \r\n          <div className=\"card-body-custom\">\r\n            {/* Success/Error Messages */}\r\n            {message && (\r\n              <div className={`alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Stats Section */}\r\n            <div className=\"stats-section\">\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{availableRoles.length}</span>\r\n                <span className=\"stats-label\">Available Roles</span>\r\n              </div>\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{getTotalAvailablePermissions()}</span>\r\n                <span className=\"stats-label\">Available Permissions</span>\r\n              </div>\r\n              {selectedRole && (\r\n                <>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{selectedRoleUserCount}</span>\r\n                    <span className=\"stats-label\">Users with this Role</span>\r\n                  </div>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{getTotalEnabledPermissions()}</span>\r\n                    <span className=\"stats-label\">Granted Permissions</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Role Selection */}\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"role\" className=\"form-label-modern\">\r\n                <i className=\"bi bi-person-gear text-primary mr-2\"></i>Select Role to Manage\r\n              </label>\r\n              <select \r\n                name=\"role\" \r\n                id=\"role\" \r\n                className=\"form-control form-control-modern\" \r\n                value={selectedRole}\r\n                onChange={handleRoleSelect}\r\n              >\r\n                <option value=\"\">-- Choose a role to configure --</option>\r\n                {availableRoles.map(role => (\r\n                  <option key={role.value} value={role.value}>\r\n                    {role.label} - {role.description}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {selectedRole && (\r\n                <small className=\"text-muted mt-2 d-block\">\r\n                  <i className=\"bi bi-info-circle mr-1\"></i>\r\n                  This will update permissions for {selectedRoleUserCount} user(s) with the role: {selectedRoleData?.label}\r\n                </small>\r\n              )}\r\n            </div>\r\n\r\n            {/* Permissions Configuration */}\r\n            {selectedRole && (\r\n              <div className=\"form-section\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <h3 style={{ color: '#333', marginBottom: '20px', fontWeight: '600' }}>\r\n                    <i className=\"bi bi-shield-alt text-primary mr-2\"></i>\r\n                    Configure Access Permissions for Role: <span style={{ color: '#667eea' }}>{selectedRoleData?.label}</span>\r\n                  </h3>\r\n\r\n                  <div className=\"alert alert-info\" style={{ backgroundColor: '#e3f2fd', border: '1px solid #bbdefb', borderRadius: '6px', padding: '12px', marginBottom: '20px' }}>\r\n                    <i className=\"bi bi-info-circle text-primary mr-2\"></i>\r\n                    <strong>Note:</strong> Changes will be applied to all {selectedRoleUserCount} user(s) with the role \"{selectedRoleData?.label}\"\r\n                  </div>\r\n\r\n                  {/* Select All Section */}\r\n                  <div className=\"select-all-section\">\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      id=\"select-all\"\r\n                      checked={selectAll}\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                    <label htmlFor=\"select-all\">\r\n                      <i className=\"bi bi-check2-all mr-2\"></i>Select All Permissions\r\n                    </label>\r\n                    <span className=\"permission-counter\">\r\n                      {getTotalEnabledPermissions()}/{getTotalAvailablePermissions()} permissions selected\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Permissions Grid by Category */}\r\n                  {availablePermissions.map(category => (\r\n                    <div key={category.category} className=\"permission-category\">\r\n                      <h4 className=\"category-title\">\r\n                        <i className=\"bi bi-folder text-primary mr-2\"></i>\r\n                        {category.name}\r\n                      </h4>\r\n                      <div className=\"checkbox-grid\">\r\n                        {category.permissions.map(permission => {\r\n                          const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\r\n                          return (\r\n                            <div \r\n                              key={`${category.category}_${permission.id}`} \r\n                              className={`checkbox-item ${isChecked ? 'selected' : ''}`}\r\n                              onClick={() => handlePermissionChange(category.category, permission.id)}\r\n                            >\r\n                              <input \r\n                                type=\"checkbox\" \r\n                                checked={isChecked || false}\r\n                                onChange={() => handlePermissionChange(category.category, permission.id)}\r\n                                id={`perm_${category.category}_${permission.id}`}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                              <label htmlFor={`perm_${category.category}_${permission.id}`}>\r\n                                <div className=\"permission-title\">\r\n                                  <i className=\"bi bi-file-text text-muted mr-2\"></i>\r\n                                  {permission.name}\r\n                                </div>\r\n                                <div className=\"permission-description\">\r\n                                  {permission.description}\r\n                                </div>\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Submit Button */}\r\n                  <div className=\"text-center mt-4\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"btn-save-modern\"\r\n                      disabled={submitting}\r\n                    >\r\n                      {submitting ? (\r\n                        <>\r\n                          <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                          </div>\r\n                          Updating {selectedRoleUserCount} user(s)...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <i className=\"bi bi-save mr-2\"></i>\r\n                          Apply to All {selectedRoleUserCount} User(s) with Role: {selectedRoleData?.label}\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading Overlay */}\r\n      {submitting && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}