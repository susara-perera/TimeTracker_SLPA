{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\context\\\\PermissionContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PermissionContext = /*#__PURE__*/createContext();\nexport const usePermissions = () => {\n  _s();\n  const context = useContext(PermissionContext);\n  if (!context) {\n    throw new Error('usePermissions must be used within a PermissionProvider');\n  }\n  return context;\n};\n_s(usePermissions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PermissionProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [permissions, setPermissions] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (user) {\n      setPermissions(user.permissions || {});\n    } else {\n      setPermissions({});\n    }\n    setLoading(false);\n  }, [user]);\n\n  // Check if user has specific permission\n  const hasPermission = (category, action) => {\n    if (!user || !permissions) return false;\n\n    // Super admin has all permissions\n    if (user.role === 'super_admin') return true;\n\n    // Check specific permission\n    return permissions[category] && permissions[category][action] === true;\n  };\n\n  // Check if user has any permission in a category\n  const hasAnyPermission = category => {\n    if (!user || !permissions) return false;\n\n    // Super admin has all permissions\n    if (user.role === 'super_admin') return true;\n\n    // Check if user has any permission in the category\n    const categoryPermissions = permissions[category];\n    if (!categoryPermissions) return false;\n    return Object.values(categoryPermissions).some(permission => permission === true);\n  };\n\n  // Check if user can access a specific page/component\n  const canAccess = requiredPermissions => {\n    if (!user) return false;\n\n    // Super admin can access everything\n    if (user.role === 'super_admin') return true;\n\n    // If no specific permissions required, check if user is authenticated\n    if (!requiredPermissions || requiredPermissions.length === 0) return true;\n\n    // Check if user has any of the required permissions\n    return requiredPermissions.some(requirement => {\n      const [category, action] = requirement.split('.');\n      return hasPermission(category, action);\n    });\n  };\n\n  // Get accessible menu items based on user permissions\n  const getAccessibleMenuItems = () => {\n    if (!user) return [];\n    const menuItems = [{\n      id: 'dashboard',\n      name: 'Dashboard',\n      icon: 'bi-speedometer2',\n      path: '/dashboard',\n      requiredPermissions: [] // Dashboard accessible to all authenticated users\n    }, {\n      id: 'users',\n      name: 'User Management',\n      icon: 'bi-people',\n      path: '/dashboard/users',\n      requiredPermissions: ['users.read', 'users.create', 'users.update']\n    }, {\n      id: 'attendance',\n      name: 'Attendance',\n      icon: 'bi-clock',\n      path: '/dashboard/attendance',\n      requiredPermissions: ['attendance.read', 'attendance.create']\n    }, {\n      id: 'reports',\n      name: 'Reports',\n      icon: 'bi-file-earmark-text',\n      path: '/dashboard/reports',\n      requiredPermissions: ['reports.read', 'reports.create']\n    }, {\n      id: 'divisions',\n      name: 'Division Management',\n      icon: 'bi-building',\n      path: '/dashboard/divisions',\n      requiredPermissions: ['divisions.read', 'divisions.create']\n    }, {\n      id: 'sections',\n      name: 'Section Management',\n      icon: 'bi-diagram-3',\n      path: '/dashboard/sections',\n      requiredPermissions: ['divisions.read'] // Sections are part of divisions\n    }, {\n      id: 'role-access',\n      name: 'Role Access',\n      icon: 'bi-shield-check',\n      path: '/dashboard/role-access',\n      requiredPermissions: ['users.update'] // Need user update permission to manage roles\n    }, {\n      id: 'settings',\n      name: 'Settings',\n      icon: 'bi-gear',\n      path: '/dashboard/settings',\n      requiredPermissions: ['settings.read', 'settings.update']\n    }];\n\n    // Filter menu items based on user permissions\n    return menuItems.filter(item => canAccess(item.requiredPermissions));\n  };\n  const value = {\n    permissions,\n    hasPermission,\n    hasAnyPermission,\n    canAccess,\n    getAccessibleMenuItems,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(PermissionContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s2(PermissionProvider, \"EPL8+z5T2KU3RFjez0omAGi5+eY=\", false, function () {\n  return [useAuth];\n});\n_c = PermissionProvider;\nexport default PermissionContext;\nvar _c;\n$RefreshReg$(_c, \"PermissionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth","jsxDEV","_jsxDEV","PermissionContext","usePermissions","_s","context","Error","PermissionProvider","children","_s2","user","permissions","setPermissions","loading","setLoading","hasPermission","category","action","role","hasAnyPermission","categoryPermissions","Object","values","some","permission","canAccess","requiredPermissions","length","requirement","split","getAccessibleMenuItems","menuItems","id","name","icon","path","filter","item","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/context/PermissionContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst PermissionContext = createContext();\r\n\r\nexport const usePermissions = () => {\r\n  const context = useContext(PermissionContext);\r\n  if (!context) {\r\n    throw new Error('usePermissions must be used within a PermissionProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const PermissionProvider = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const [permissions, setPermissions] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setPermissions(user.permissions || {});\r\n    } else {\r\n      setPermissions({});\r\n    }\r\n    setLoading(false);\r\n  }, [user]);\r\n\r\n  // Check if user has specific permission\r\n  const hasPermission = (category, action) => {\r\n    if (!user || !permissions) return false;\r\n    \r\n    // Super admin has all permissions\r\n    if (user.role === 'super_admin') return true;\r\n    \r\n    // Check specific permission\r\n    return permissions[category] && permissions[category][action] === true;\r\n  };\r\n\r\n  // Check if user has any permission in a category\r\n  const hasAnyPermission = (category) => {\r\n    if (!user || !permissions) return false;\r\n    \r\n    // Super admin has all permissions\r\n    if (user.role === 'super_admin') return true;\r\n    \r\n    // Check if user has any permission in the category\r\n    const categoryPermissions = permissions[category];\r\n    if (!categoryPermissions) return false;\r\n    \r\n    return Object.values(categoryPermissions).some(permission => permission === true);\r\n  };\r\n\r\n  // Check if user can access a specific page/component\r\n  const canAccess = (requiredPermissions) => {\r\n    if (!user) return false;\r\n    \r\n    // Super admin can access everything\r\n    if (user.role === 'super_admin') return true;\r\n    \r\n    // If no specific permissions required, check if user is authenticated\r\n    if (!requiredPermissions || requiredPermissions.length === 0) return true;\r\n    \r\n    // Check if user has any of the required permissions\r\n    return requiredPermissions.some(requirement => {\r\n      const [category, action] = requirement.split('.');\r\n      return hasPermission(category, action);\r\n    });\r\n  };\r\n\r\n  // Get accessible menu items based on user permissions\r\n  const getAccessibleMenuItems = () => {\r\n    if (!user) return [];\r\n\r\n    const menuItems = [\r\n      {\r\n        id: 'dashboard',\r\n        name: 'Dashboard',\r\n        icon: 'bi-speedometer2',\r\n        path: '/dashboard',\r\n        requiredPermissions: [] // Dashboard accessible to all authenticated users\r\n      },\r\n      {\r\n        id: 'users',\r\n        name: 'User Management',\r\n        icon: 'bi-people',\r\n        path: '/dashboard/users',\r\n        requiredPermissions: ['users.read', 'users.create', 'users.update']\r\n      },\r\n      {\r\n        id: 'attendance',\r\n        name: 'Attendance',\r\n        icon: 'bi-clock',\r\n        path: '/dashboard/attendance',\r\n        requiredPermissions: ['attendance.read', 'attendance.create']\r\n      },\r\n      {\r\n        id: 'reports',\r\n        name: 'Reports',\r\n        icon: 'bi-file-earmark-text',\r\n        path: '/dashboard/reports',\r\n        requiredPermissions: ['reports.read', 'reports.create']\r\n      },\r\n      {\r\n        id: 'divisions',\r\n        name: 'Division Management',\r\n        icon: 'bi-building',\r\n        path: '/dashboard/divisions',\r\n        requiredPermissions: ['divisions.read', 'divisions.create']\r\n      },\r\n      {\r\n        id: 'sections',\r\n        name: 'Section Management',\r\n        icon: 'bi-diagram-3',\r\n        path: '/dashboard/sections',\r\n        requiredPermissions: ['divisions.read'] // Sections are part of divisions\r\n      },\r\n      {\r\n        id: 'role-access',\r\n        name: 'Role Access',\r\n        icon: 'bi-shield-check',\r\n        path: '/dashboard/role-access',\r\n        requiredPermissions: ['users.update'] // Need user update permission to manage roles\r\n      },\r\n      {\r\n        id: 'settings',\r\n        name: 'Settings',\r\n        icon: 'bi-gear',\r\n        path: '/dashboard/settings',\r\n        requiredPermissions: ['settings.read', 'settings.update']\r\n      }\r\n    ];\r\n\r\n    // Filter menu items based on user permissions\r\n    return menuItems.filter(item => canAccess(item.requiredPermissions));\r\n  };\r\n\r\n  const value = {\r\n    permissions,\r\n    hasPermission,\r\n    hasAnyPermission,\r\n    canAccess,\r\n    getAccessibleMenuItems,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <PermissionContext.Provider value={value}>\r\n      {children}\r\n    </PermissionContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PermissionContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}