{"ast":null,"code":"import{useContext}from'react';import{AuthContext}from'../context/AuthContext';// usePermission(resource, action) -> boolean\n// resource: string like 'users', 'divisions', 'attendance'\n// action: 'read'|'create'|'update'|'delete'|'edit'\nexport default function usePermission(resource,action){const{user}=useContext(AuthContext)||{};if(!user)return false;if(user.role==='super_admin')return true;const perms=user.permissions;if(!perms)return false;// Normalize action aliases\nconst actionAliases={read:['read','view'],create:['create','add'],update:['update','edit'],delete:['delete','remove']};const actionsToCheck=actionAliases[action]||[action];// Check plural/singular resource variants\nconst resourcesToCheck=[resource];if(resource.endsWith('s'))resourcesToCheck.push(resource.slice(0,-1));else resourcesToCheck.push(resource+'s');for(const r of resourcesToCheck){const rPerm=perms[r];if(rPerm===undefined)continue;// boolean permission shortcut\nif(typeof rPerm==='boolean'){if(rPerm)return true;continue;}// array of allowed actions\nif(Array.isArray(rPerm)){for(const a of actionsToCheck)if(rPerm.includes(a))return true;continue;}// object mapping actions -> boolean\nif(typeof rPerm==='object'&&rPerm!==null){for(const a of actionsToCheck){const val=rPerm[a];if(val===true||val==='true'||val===1)return true;}}}// optional debug\ntry{if(typeof window!=='undefined'&&window.DEBUG_PERMS){console.debug('usePermission',{user:(user===null||user===void 0?void 0:user.id)||(user===null||user===void 0?void 0:user.email),resource,action,resourcesToCheck,actionsToCheck,perms});}}catch(e){}return false;}","map":{"version":3,"names":["useContext","AuthContext","usePermission","resource","action","user","role","perms","permissions","actionAliases","read","create","update","delete","actionsToCheck","resourcesToCheck","endsWith","push","slice","r","rPerm","undefined","Array","isArray","a","includes","val","window","DEBUG_PERMS","console","debug","id","email","e"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/hooks/usePermission.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\n// usePermission(resource, action) -> boolean\r\n// resource: string like 'users', 'divisions', 'attendance'\r\n// action: 'read'|'create'|'update'|'delete'|'edit'\r\nexport default function usePermission(resource, action) {\r\n  const { user } = useContext(AuthContext) || {};\r\n  if (!user) return false;\r\n  if (user.role === 'super_admin') return true;\r\n\r\n  const perms = user.permissions;\r\n  if (!perms) return false;\r\n\r\n  // Normalize action aliases\r\n  const actionAliases = {\r\n    read: ['read', 'view'],\r\n    create: ['create', 'add'],\r\n    update: ['update', 'edit'],\r\n    delete: ['delete', 'remove']\r\n  };\r\n\r\n  const actionsToCheck = actionAliases[action] || [action];\r\n\r\n  // Check plural/singular resource variants\r\n  const resourcesToCheck = [resource];\r\n  if (resource.endsWith('s')) resourcesToCheck.push(resource.slice(0, -1));\r\n  else resourcesToCheck.push(resource + 's');\r\n\r\n  for (const r of resourcesToCheck) {\r\n    const rPerm = perms[r];\r\n    if (rPerm === undefined) continue;\r\n\r\n    // boolean permission shortcut\r\n    if (typeof rPerm === 'boolean') {\r\n      if (rPerm) return true;\r\n      continue;\r\n    }\r\n\r\n    // array of allowed actions\r\n    if (Array.isArray(rPerm)) {\r\n      for (const a of actionsToCheck) if (rPerm.includes(a)) return true;\r\n      continue;\r\n    }\r\n\r\n    // object mapping actions -> boolean\r\n    if (typeof rPerm === 'object' && rPerm !== null) {\r\n      for (const a of actionsToCheck) {\r\n        const val = rPerm[a];\r\n        if (val === true || val === 'true' || val === 1) return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  // optional debug\r\n  try {\r\n    if (typeof window !== 'undefined' && window.DEBUG_PERMS) {\r\n      console.debug('usePermission', { user: user?.id || user?.email, resource, action, resourcesToCheck, actionsToCheck, perms });\r\n    }\r\n  } catch (e) {}\r\n\r\n  return false;\r\n}\r\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,OAAO,CAClC,OAASC,WAAW,KAAQ,wBAAwB,CAEpD;AACA;AACA;AACA,cAAe,SAAS,CAAAC,aAAaA,CAACC,QAAQ,CAAEC,MAAM,CAAE,CACtD,KAAM,CAAEC,IAAK,CAAC,CAAGL,UAAU,CAACC,WAAW,CAAC,EAAI,CAAC,CAAC,CAC9C,GAAI,CAACI,IAAI,CAAE,MAAO,MAAK,CACvB,GAAIA,IAAI,CAACC,IAAI,GAAK,aAAa,CAAE,MAAO,KAAI,CAE5C,KAAM,CAAAC,KAAK,CAAGF,IAAI,CAACG,WAAW,CAC9B,GAAI,CAACD,KAAK,CAAE,MAAO,MAAK,CAExB;AACA,KAAM,CAAAE,aAAa,CAAG,CACpBC,IAAI,CAAE,CAAC,MAAM,CAAE,MAAM,CAAC,CACtBC,MAAM,CAAE,CAAC,QAAQ,CAAE,KAAK,CAAC,CACzBC,MAAM,CAAE,CAAC,QAAQ,CAAE,MAAM,CAAC,CAC1BC,MAAM,CAAE,CAAC,QAAQ,CAAE,QAAQ,CAC7B,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGL,aAAa,CAACL,MAAM,CAAC,EAAI,CAACA,MAAM,CAAC,CAExD;AACA,KAAM,CAAAW,gBAAgB,CAAG,CAACZ,QAAQ,CAAC,CACnC,GAAIA,QAAQ,CAACa,QAAQ,CAAC,GAAG,CAAC,CAAED,gBAAgB,CAACE,IAAI,CAACd,QAAQ,CAACe,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IACpE,CAAAH,gBAAgB,CAACE,IAAI,CAACd,QAAQ,CAAG,GAAG,CAAC,CAE1C,IAAK,KAAM,CAAAgB,CAAC,GAAI,CAAAJ,gBAAgB,CAAE,CAChC,KAAM,CAAAK,KAAK,CAAGb,KAAK,CAACY,CAAC,CAAC,CACtB,GAAIC,KAAK,GAAKC,SAAS,CAAE,SAEzB;AACA,GAAI,MAAO,CAAAD,KAAK,GAAK,SAAS,CAAE,CAC9B,GAAIA,KAAK,CAAE,MAAO,KAAI,CACtB,SACF,CAEA;AACA,GAAIE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,CAAE,CACxB,IAAK,KAAM,CAAAI,CAAC,GAAI,CAAAV,cAAc,CAAE,GAAIM,KAAK,CAACK,QAAQ,CAACD,CAAC,CAAC,CAAE,MAAO,KAAI,CAClE,SACF,CAEA;AACA,GAAI,MAAO,CAAAJ,KAAK,GAAK,QAAQ,EAAIA,KAAK,GAAK,IAAI,CAAE,CAC/C,IAAK,KAAM,CAAAI,CAAC,GAAI,CAAAV,cAAc,CAAE,CAC9B,KAAM,CAAAY,GAAG,CAAGN,KAAK,CAACI,CAAC,CAAC,CACpB,GAAIE,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,MAAM,EAAIA,GAAG,GAAK,CAAC,CAAE,MAAO,KAAI,CAC9D,CACF,CACF,CAEA;AACA,GAAI,CACF,GAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,EAAIA,MAAM,CAACC,WAAW,CAAE,CACvDC,OAAO,CAACC,KAAK,CAAC,eAAe,CAAE,CAAEzB,IAAI,CAAE,CAAAA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAE0B,EAAE,IAAI1B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAE2B,KAAK,EAAE7B,QAAQ,CAAEC,MAAM,CAAEW,gBAAgB,CAAED,cAAc,CAAEP,KAAM,CAAC,CAAC,CAC9H,CACF,CAAE,MAAO0B,CAAC,CAAE,CAAC,CAEb,MAAO,MAAK,CACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}