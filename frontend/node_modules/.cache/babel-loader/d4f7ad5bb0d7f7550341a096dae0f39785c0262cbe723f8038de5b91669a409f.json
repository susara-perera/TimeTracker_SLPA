{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\ReportGeneration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ReportGeneration.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReportGeneration = () => {\n  _s();\n  var _reportData$summary, _reportData$summary2, _divisions$find, _sections$find, _reportData$data, _reportData$data$, _reportData$data2, _reportData$data2$, _divisions$find2, _sections$find2, _reportData$data3, _reportData$data3$, _reportData$data3$$us, _reportData$data4, _reportData$data4$, _reportData$data5, _reportData$data5$, _reportData$data5$$us, _reportData$data6, _reportData$data6$, _reportData$data6$$us, _reportData$data7, _reportData$data7$, _reportData$data8, _reportData$data9, _reportData$data0, _reportData$data1, _reportData$data10, _reportData$data11, _reportData$data12, _divisions$find3, _sections$find3;\n  const [reportType, setReportType] = useState('attendance');\n  const [reportScope, setReportScope] = useState('individual');\n  const [employeeId, setEmployeeId] = useState('');\n  const [divisionId, setDivisionId] = useState('all');\n  const [sectionId, setSectionId] = useState('all');\n  const [divisions, setDivisions] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [allSections, setAllSections] = useState([]);\n  const [dateRange, setDateRange] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [reportData, setReportData] = useState(null);\n  const [error, setError] = useState('');\n\n  // Fetch divisions and sections on component mount\n  useEffect(() => {\n    fetchDivisions();\n    fetchAllSections();\n\n    // Set default date range to today\n    const today = new Date().toISOString().split('T')[0];\n    setDateRange({\n      startDate: today,\n      endDate: today\n    });\n  }, []);\n\n  // Fetch sections when division changes\n  useEffect(() => {\n    if (divisionId && divisionId !== 'all') {\n      fetchSectionsByDivision(divisionId);\n    } else {\n      setSections(allSections);\n      setSectionId('all');\n    }\n  }, [divisionId, allSections]);\n  const fetchDivisions = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/mysql/divisions', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setDivisions(data.divisions || []);\n      }\n    } catch (err) {\n      console.error('Error fetching divisions:', err);\n    }\n  };\n  const fetchAllSections = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/mysql/sections', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAllSections(data.sections || []);\n        setSections(data.sections || []);\n      }\n    } catch (err) {\n      console.error('Error fetching sections:', err);\n    }\n  };\n  const fetchSectionsByDivision = async divisionId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000/api/mysql/sections?division_id=${divisionId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setSections(data.sections || []);\n        setSectionId('all'); // Reset section selection\n      }\n    } catch (err) {\n      console.error('Error fetching sections by division:', err);\n    }\n  };\n  const generateReport = async () => {\n    if (!dateRange.startDate || !dateRange.endDate) {\n      setError('Please select both start and end dates');\n      return;\n    }\n    if (reportScope === 'individual' && !employeeId && (reportType === 'attendance' || reportType === 'meal')) {\n      setError(`Please enter Employee ID for individual ${reportType} reports`);\n      return;\n    }\n    console.log('Generating report with:', {\n      reportType,\n      reportScope,\n      employeeId,\n      divisionId,\n      sectionId,\n      dateRange\n    });\n    setLoading(true);\n    setError('');\n    setReportData(null);\n    try {\n      let endpoint = '';\n      let requestData = {\n        from_date: dateRange.startDate,\n        to_date: dateRange.endDate,\n        report_type: reportScope\n      };\n\n      // Add employee ID for individual reports\n      if (reportScope === 'individual' && employeeId) {\n        requestData.employee_id = employeeId;\n      }\n\n      // Add division and section filters for group attendance reports\n      if (reportScope === 'group' && reportType === 'attendance') {\n        if (divisionId && divisionId !== 'all') {\n          requestData.division_id = divisionId;\n        }\n        if (sectionId && sectionId !== 'all') {\n          requestData.section_id = sectionId;\n        }\n      }\n\n      // Determine endpoint based on report type\n      switch (reportType) {\n        case 'attendance':\n          endpoint = '/api/reports/mysql/attendance';\n          break;\n        case 'meal':\n          endpoint = '/api/reports/meal';\n          requestData = {\n            startDate: dateRange.startDate,\n            endDate: dateRange.endDate,\n            filters: {},\n            groupBy: reportScope === 'individual' ? 'user' : 'date'\n          };\n          // Add employee filter for individual reports\n          if (reportScope === 'individual' && employeeId) {\n            requestData.filters.employeeId = employeeId;\n          }\n          // Add division and section filters for meal reports\n          if (divisionId && divisionId !== 'all') {\n            requestData.filters.divisionId = divisionId;\n          }\n          if (sectionId && sectionId !== 'all') {\n            requestData.filters.sectionId = sectionId;\n          }\n          break;\n        case 'audit':\n          endpoint = '/api/reports/audit';\n          break;\n        default:\n          endpoint = '/api/reports/mysql/attendance';\n      }\n      console.log('Making request to:', `http://localhost:5000${endpoint}`);\n      console.log('Request data:', requestData);\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      console.log('Response:', {\n        status: response.status,\n        data\n      });\n      if (response.ok && data.success) {\n        setReportData(data);\n        console.log('Report generated successfully:', data);\n      } else {\n        setError(data.message || 'Failed to generate report');\n      }\n    } catch (err) {\n      console.error('Report generation error:', err);\n      setError('Network error occurred while generating report');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const printReport = () => {\n    console.log('Print function called');\n    console.log('Report data:', reportData);\n    console.log('Report scope:', reportScope);\n    if (!reportData || !reportData.data) {\n      console.error('No report data available for printing');\n      setError('No data to print. Please generate a report first.');\n      return;\n    }\n    if (!reportData.data.length) {\n      console.error('Empty report data');\n      setError('No records found to print');\n      return;\n    }\n    try {\n      console.log('Starting print process...');\n      // Get employee info from first record for individual reports\n      const firstRecord = reportData.data[0];\n      const isIndividualReport = reportScope === 'individual';\n      console.log('First record:', firstRecord);\n      console.log('Is individual report:', isIndividualReport);\n\n      // Group data by date for individual reports\n      const groupedData = {};\n      if (isIndividualReport) {\n        reportData.data.forEach(record => {\n          const date = record.date_;\n          if (!groupedData[date]) {\n            groupedData[date] = [];\n          }\n          groupedData[date].push(record);\n        });\n      }\n\n      // Create print content matching the image format\n      let printContent = `\n        <html>\n          <head>\n            <title>Attendance Report</title>\n            <style>\n              @page {\n                margin: 0.5in;\n                size: A4;\n              }\n              \n              body { \n                font-family: 'Courier New', monospace;\n                margin: 0;\n                padding: 0;\n                font-size: 11px;\n                line-height: 1.2;\n                color: #000;\n                -webkit-print-color-adjust: exact;\n                print-color-adjust: exact;\n              }\n              \n              .report-header { \n                margin-bottom: 15px;\n              }\n              \n              .report-title {\n                font-weight: bold;\n                font-size: 14px;\n                margin-bottom: 3px;\n                text-align: center;\n              }\n              \n              .report-subtitle {\n                font-size: 11px;\n                margin-bottom: 10px;\n                text-align: center;\n              }\n              \n              .header-info {\n                display: flex;\n                justify-content: space-between;\n                margin-bottom: 10px;\n              }\n              \n              .left-info, .right-info {\n                font-size: 10px;\n              }\n              \n              .employee-info {\n                margin-bottom: 10px;\n                font-size: 11px;\n              }\n              \n              .date-range {\n                margin-bottom: 15px;\n                font-size: 11px;\n                text-align: center;\n              }\n              \n              .data-table { \n                width: 100%;\n                border-collapse: collapse;\n                font-size: 10px;\n                margin-bottom: 20px;\n                border: 1px solid #000;\n                table-layout: fixed;\n              }\n              \n              .data-table th { \n                border: 1px solid #000;\n                padding: 4px 6px;\n                text-align: center;\n                font-weight: bold;\n                background: #f5f5f5;\n                font-size: 10px;\n              }\n              \n              .data-table td { \n                border: 1px solid #000;\n                padding: 4px 6px;\n                text-align: center;\n                margin: 0;\n                vertical-align: top;\n                font-size: 10px;\n              }\n              \n              .date-cell {\n                text-align: left;\n                vertical-align: top;\n                padding: 4px 6px;\n                font-weight: bold;\n                line-height: 1.2;\n              }\n              \n              .date-cell-empty {\n                padding: 4px 6px;\n                text-align: center;\n              }\n              \n              .function-col {\n                text-align: center;\n                font-weight: bold;\n              }\n              \n              .on-status {\n                font-weight: bold;\n              }\n              \n              .off-status {\n                font-weight: bold;\n              }\n              \n              .signature-section {\n                margin-top: 50px;\n                display: flex;\n                justify-content: space-between;\n                font-size: 10px;\n                align-items: flex-end;\n              }\n              \n              .signature-block {\n                text-align: center;\n                min-width: 150px;\n              }\n              \n              .signature-line {\n                border-bottom: 1px solid #000;\n                height: 40px;\n                margin-bottom: 5px;\n                width: 100%;\n              }\n              \n              .signature-label {\n                font-size: 10px;\n                font-weight: normal;\n              }\n            </style>\n          </head>\n          <body>\n            <div class=\"report-header\">\n              <div class=\"report-title\">${reportType === 'meal' ? isIndividualReport ? 'Individual Meal Report' : 'Group Meal Report' : isIndividualReport ? 'Unit Attendance Report' : 'Group Attendance Report'}</div>\n              <div class=\"report-subtitle\">${reportType === 'meal' ? 'All Meal Consumption Records' : 'All Granted(ID & FP) Records'}</div>\n              \n              <div class=\"header-info\">\n                <div class=\"left-info\">`;\n      if (isIndividualReport && firstRecord) {\n        printContent += `\n                  <div>Emp No :- ${firstRecord.employee_ID || 'N/A'}</div>\n                  <div>Emp Name :- ${firstRecord.employee_name || 'Unknown'}</div>`;\n      }\n      printContent += `\n                </div>\n                <div class=\"right-info\">\n                  <div>Printed Date : ${new Date().toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      })}</div>\n                  <div>Printed Time : ${new Date().toLocaleTimeString('en-GB', {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })}</div>\n                  <div>Page 1 of 1</div>\n                </div>\n              </div>\n              \n              <div class=\"date-range\">\n                <strong>Date From</strong> ${new Date(dateRange.startDate).toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      })} \n                <strong style=\"margin-left: 40px;\">To</strong> ${new Date(dateRange.endDate).toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short',\n        year: '2-digit'\n      })}\n              </div>\n            </div>`;\n\n      // Create table with proper format\n      printContent += `\n            <table class=\"data-table\">\n              <thead>\n                <tr>`;\n      if (reportType === 'meal') {\n        if (isIndividualReport) {\n          printContent += `\n                    <th style=\"width: 15%;\">Date</th>\n                    <th style=\"width: 12%;\">Time</th>\n                    <th style=\"width: 15%;\">Meal Type</th>\n                    <th style=\"width: 18%;\">Location</th>\n                    <th style=\"width: 10%;\">Quantity</th>\n                    <th style=\"width: 30%;\">Items</th>`;\n        } else {\n          printContent += `\n                    <th style=\"width: 10%;\">Emp No</th>\n                    <th style=\"width: 15%;\">Emp Name</th>\n                    <th style=\"width: 12%;\">Date</th>\n                    <th style=\"width: 10%;\">Time</th>\n                    <th style=\"width: 12%;\">Meal Type</th>\n                    <th style=\"width: 12%;\">Location</th>\n                    <th style=\"width: 8%;\">Quantity</th>\n                    <th style=\"width: 21%;\">Items</th>`;\n        }\n      } else {\n        if (isIndividualReport) {\n          printContent += `\n                    <th style=\"width: 18%;\">Date</th>\n                    <th style=\"width: 12%;\">Time</th>\n                    <th style=\"width: 10%;\">Function</th>\n                    <th style=\"width: 20%;\">Status</th>\n                    <th style=\"width: 40%;\">Verification</th>`;\n        } else {\n          printContent += `\n                    <th style=\"width: 12%;\">Emp No</th>\n                    <th style=\"width: 20%;\">Emp Name</th>\n                    <th style=\"width: 15%;\">Date</th>\n                    <th style=\"width: 10%;\">Time</th>\n                    <th style=\"width: 8%;\">Function</th>\n                    <th style=\"width: 35%;\">Event Description</th>`;\n        }\n      }\n      printContent += `\n                </tr>\n              </thead>\n              <tbody>`;\n      if (reportType === 'meal') {\n        if (isIndividualReport) {\n          // For individual meal reports, group by date\n          const mealGroupedData = {};\n          reportData.data.forEach(record => {\n            const dateKey = record.date || record.meal_date || record.mealTime;\n            if (!mealGroupedData[dateKey]) {\n              mealGroupedData[dateKey] = [];\n            }\n            mealGroupedData[dateKey].push(record);\n          });\n          const sortedDates = Object.keys(mealGroupedData).sort();\n          sortedDates.forEach(date => {\n            const records = mealGroupedData[date];\n            const day = new Date(date).getDate().toString().padStart(2, '0');\n            const month = new Date(date).toLocaleDateString('en-GB', {\n              month: 'short'\n            });\n            const year = new Date(date).getFullYear().toString().slice(-2);\n            const dayName = new Date(date).toLocaleDateString('en-US', {\n              weekday: 'short'\n            });\n            const formattedDate = `${day}-${month}-${year}`;\n\n            // Sort records by time for each date\n            records.sort((a, b) => {\n              const aTime = new Date(a.mealTime || a.meal_time).getTime();\n              const bTime = new Date(b.mealTime || b.meal_time).getTime();\n              return aTime - bTime;\n            });\n            records.forEach((record, index) => {\n              var _record$items, _record$items2;\n              const showDate = index === 0;\n              const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n                hour: '2-digit',\n                minute: '2-digit'\n              });\n              const items = ((_record$items = record.items) === null || _record$items === void 0 ? void 0 : _record$items.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal';\n              const quantity = ((_record$items2 = record.items) === null || _record$items2 === void 0 ? void 0 : _record$items2.reduce((total, item) => total + item.quantity, 0)) || 1;\n              printContent += `\n                  <tr>\n                    <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\n                      ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\n                    </td>\n                    <td style=\"text-align: center;\">${mealTime}</td>\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\n                    <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\n                    <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\n                  </tr>`;\n            });\n          });\n        } else {\n          // For group meal reports, show all records with employee info\n          reportData.data.forEach((record, index) => {\n            var _record$items3, _record$items4, _record$user, _record$user2, _record$user3;\n            const date = new Date(record.date || record.meal_date || record.mealTime);\n            const day = date.getDate().toString().padStart(2, '0');\n            const month = date.toLocaleDateString('en-GB', {\n              month: 'short'\n            });\n            const year = date.getFullYear().toString().slice(-2);\n            const dayName = date.toLocaleDateString('en-US', {\n              weekday: 'short'\n            });\n            const formattedDate = `${day}-${month}-${year}`;\n            const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n              hour: '2-digit',\n              minute: '2-digit'\n            });\n            const items = ((_record$items3 = record.items) === null || _record$items3 === void 0 ? void 0 : _record$items3.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal';\n            const quantity = ((_record$items4 = record.items) === null || _record$items4 === void 0 ? void 0 : _record$items4.reduce((total, item) => total + item.quantity, 0)) || 1;\n            const empName = (_record$user = record.user) !== null && _record$user !== void 0 && _record$user.firstName && (_record$user2 = record.user) !== null && _record$user2 !== void 0 && _record$user2.lastName ? `${record.user.firstName} ${record.user.lastName}` : record.employee_name || 'Unknown';\n            printContent += `\n                <tr>\n                  <td style=\"font-weight: bold; text-align: center;\">${((_record$user3 = record.user) === null || _record$user3 === void 0 ? void 0 : _record$user3.employeeId) || record.employee_id || 'N/A'}</td>\n                  <td style=\"text-align: left; padding-left: 8px;\">${empName}</td>\n                  <td style=\"text-align: center;\">${formattedDate}<br/>${dayName}</td>\n                  <td style=\"text-align: center;\">${mealTime}</td>\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\n                  <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\n                  <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\n                </tr>`;\n          });\n        }\n      } else {\n        // Attendance report logic\n        if (isIndividualReport) {\n          // Sort dates and group data properly\n          const sortedDates = Object.keys(groupedData).sort();\n          sortedDates.forEach(date => {\n            const records = groupedData[date];\n            const dayName = new Date(date).toLocaleDateString('en-US', {\n              weekday: 'long'\n            });\n            const day = new Date(date).getDate().toString().padStart(2, '0');\n            const month = new Date(date).toLocaleDateString('en-GB', {\n              month: 'short'\n            });\n            const year = new Date(date).getFullYear().toString().slice(-2);\n            const formattedDate = `${day}-${month}-${year}`;\n\n            // Sort records by time for each date\n            records.sort((a, b) => (a.time_ || '').localeCompare(b.time_ || ''));\n            records.forEach((record, index) => {\n              var _record$scan_type;\n              const isOnScan = ((_record$scan_type = record.scan_type) === null || _record$scan_type === void 0 ? void 0 : _record$scan_type.toUpperCase()) === 'IN';\n              const functionCode = isOnScan ? 'F1-0' : 'F4-0';\n              const status = isOnScan ? 'ON' : 'OFF';\n              const showDate = index === 0; // Only show date on first row for each date group\n\n              printContent += `\n                <tr>\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\n                  </td>\n                  <td>${record.time_ || ''}</td>\n                  <td class=\"function-col\">${functionCode}</td>\n                  <td class=\"${isOnScan ? 'on-status' : 'off-status'}\">${status}</td>\n                  <td>Granted(ID & F) COM0002</td>\n                </tr>`;\n            });\n          });\n        } else {\n          // Group report - group by date and show employee details\n          const groupedData = {};\n          reportData.data.forEach(record => {\n            const dateKey = record.date_;\n            if (!groupedData[dateKey]) {\n              groupedData[dateKey] = [];\n            }\n            groupedData[dateKey].push(record);\n          });\n          const sortedDates = Object.keys(groupedData).sort();\n          sortedDates.forEach(dateKey => {\n            const records = groupedData[dateKey];\n            records.sort((a, b) => {\n              // Sort by employee ID first, then by time\n              const aEmpId = String(a.employee_ID || a.employee_id || '');\n              const bEmpId = String(b.employee_ID || b.employee_id || '');\n              const empCompare = aEmpId.localeCompare(bEmpId);\n              if (empCompare !== 0) return empCompare;\n              const aTime = String(a.time_ || '');\n              const bTime = String(b.time_ || '');\n              return aTime.localeCompare(bTime);\n            });\n            records.forEach((record, index) => {\n              var _record$scan_type2;\n              const isOnScan = ((_record$scan_type2 = record.scan_type) === null || _record$scan_type2 === void 0 ? void 0 : _record$scan_type2.toUpperCase()) === 'IN';\n              const functionCode = isOnScan ? 'F1-0' : 'F4-0';\n              const status = isOnScan ? 'ON' : 'OFF';\n              const showDate = index === 0;\n              const day = new Date(record.date_).getDate().toString().padStart(2, '0');\n              const month = new Date(record.date_).toLocaleDateString('en-GB', {\n                month: 'short'\n              });\n              const year = new Date(record.date_).getFullYear().toString().slice(-2);\n              const dayName = new Date(record.date_).toLocaleDateString('en-US', {\n                weekday: 'short'\n              });\n              const formattedDate = `${day}-${month}-${year}`;\n              printContent += `\n                <tr>\n                  <td style=\"font-weight: bold; text-align: center;\">${record.employee_ID || record.employee_id || 'N/A'}</td>\n                  <td style=\"text-align: left; padding-left: 8px;\">${record.employee_name || record.name || 'Unknown'}</td>\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\n                  </td>\n                  <td>${record.time_ || ''}</td>\n                  <td class=\"function-col\">${functionCode}</td>\n                  <td style=\"text-align: left; padding-left: 5px;\">${status} Granted(ID & F COM0002)</td>\n                </tr>`;\n            });\n          });\n        } // End of attendance group report\n      } // End of attendance report logic\n\n      printContent += `\n              </tbody>\n            </table>\n            \n            <div class=\"signature-section\">\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">User</div>\n              </div>\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">Date</div>\n              </div>\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">Authorized Signature 1</div>\n              </div>\n              <div class=\"signature-block\">\n                <div class=\"signature-line\"></div>\n                <div class=\"signature-label\">Authorized Signature 2</div>\n              </div>\n            </div>\n          </body>\n        </html>`;\n      console.log('Print content prepared, opening print window...');\n\n      // Open print window\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        throw new Error('Could not open print window. Please check if popup blocker is enabled.');\n      }\n      console.log('Print window opened successfully');\n      printWindow.document.write(printContent);\n      printWindow.document.close();\n      console.log('Content written to print window');\n\n      // Wait for content to load then print\n      setTimeout(() => {\n        try {\n          printWindow.print();\n          printWindow.close();\n          console.log('Print dialog opened successfully');\n          setError(''); // Clear any previous errors\n        } catch (printErr) {\n          console.error('Error during print:', printErr);\n          printWindow.close();\n          throw new Error('Failed to open print dialog');\n        }\n      }, 250);\n    } catch (err) {\n      console.error('Print error:', err);\n      setError(`Failed to print report: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"report-generation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-graph-up-arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this), \"Report Generation Center\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header-subtitle\",\n          children: \"Generate comprehensive attendance, meal, and audit reports with advanced filtering and export capabilities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"report-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"controls-title\",\n            children: \"Report Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"controls-subtitle\",\n            children: \"Configure your report parameters and generate detailed analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Report Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"field-input\",\n              value: reportType,\n              onChange: e => setReportType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"attendance\",\n                children: \"\\uD83D\\uDCCA Attendance Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"meal\",\n                children: \"\\uD83C\\uDF7D\\uFE0F Meal Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"audit\",\n                children: \"\\uD83D\\uDD0D Audit Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), (reportType === 'attendance' || reportType === 'meal') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Report Scope\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"field-input\",\n              value: reportScope,\n              onChange: e => setReportScope(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"individual\",\n                children: \"\\uD83D\\uDC64 Individual Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"group\",\n                children: \"\\uD83D\\uDC65 Group Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this), reportScope === 'group' && (reportType === 'attendance' || reportType === 'meal') && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"Division Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"field-input\",\n                value: divisionId,\n                onChange: e => setDivisionId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"all\",\n                  children: \"\\uD83C\\uDFE2 All Divisions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 21\n                }, this), divisions.map(division => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: division.division_id,\n                  children: [\"\\uD83D\\uDCCB \", division.division_name]\n                }, division.division_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"Section Filter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"field-input\",\n                value: sectionId,\n                onChange: e => setSectionId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"all\",\n                  children: \"\\uD83C\\uDFE2 All Sections\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 21\n                }, this), sections.map(section => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: section.section_id,\n                  children: [\"\\uD83D\\uDCCB \", section.section_name, \" \", section.division_name ? `(${section.division_name})` : '']\n                }, section.section_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), reportScope === 'individual' && (reportType === 'attendance' || reportType === 'meal') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"field-label\",\n              children: \"Employee ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"field-input\",\n              placeholder: \"Enter Employee ID (e.g., SA1001, 006, etc.)\",\n              value: employeeId,\n              onChange: e => setEmployeeId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-range-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"Start Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"field-input\",\n                value: dateRange.startDate,\n                onChange: e => setDateRange({\n                  ...dateRange,\n                  startDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"field-label\",\n                children: \"End Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"field-input\",\n                value: dateRange.endDate,\n                onChange: e => setDateRange({\n                  ...dateRange,\n                  endDate: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-exclamation-triangle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 19\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '1rem'\n            },\n            children: [reportData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"export-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"export-btn print\",\n                onClick: printReport,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-printer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 845,\n                  columnNumber: 21\n                }, this), \"Print Report\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 841,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"generate-btn\",\n              onClick: generateReport,\n              disabled: loading,\n              children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-arrow-clockwise spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 21\n                }, this), \"Generating...\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-play-fill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 863,\n                  columnNumber: 21\n                }, this), \"Generate Report\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this), reportData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"results-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-clipboard-data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 17\n            }, this), \"Report Results\", reportScope === 'group' && (reportType === 'attendance' || reportType === 'meal') && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"filter-info\",\n              children: [((_reportData$summary = reportData.summary) === null || _reportData$summary === void 0 ? void 0 : _reportData$summary.division_filter) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"division-info\",\n                children: [\" - \", reportData.summary.division_filter]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 23\n              }, this), ((_reportData$summary2 = reportData.summary) === null || _reportData$summary2 === void 0 ? void 0 : _reportData$summary2.section_filter) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"section-info\",\n                children: [\" - \", reportData.summary.section_filter]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 23\n              }, this), reportType === 'meal' && divisionId !== 'all' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"division-info\",\n                children: [\" - \", ((_divisions$find = divisions.find(d => d.division_id === divisionId)) === null || _divisions$find === void 0 ? void 0 : _divisions$find.division_name) || `Division ID: ${divisionId}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 23\n              }, this), reportType === 'meal' && sectionId !== 'all' && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"section-info\",\n                children: [\" - \", ((_sections$find = sections.find(s => s.section_id === sectionId)) === null || _sections$find === void 0 ? void 0 : _sections$find.section_name) || `Section ID: ${sectionId}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [reportType === 'attendance' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: reportScope === 'individual' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data = reportData.data) === null || _reportData$data === void 0 ? void 0 : (_reportData$data$ = _reportData$data[0]) === null || _reportData$data$ === void 0 ? void 0 : _reportData$data$.employee_ID) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 911,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Employee ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data2 = reportData.data) === null || _reportData$data2 === void 0 ? void 0 : (_reportData$data2$ = _reportData$data2[0]) === null || _reportData$data2$ === void 0 ? void 0 : _reportData$data2$.employee_name) || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 915,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Employee Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 914,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: reportData.summary.total_records\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Records\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 920,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 918,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: `${dateRange.startDate} - ${dateRange.endDate}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Time Range\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 924,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: divisionId === 'all' ? 'All Divisions' : ((_divisions$find2 = divisions.find(d => d.division_id === divisionId)) === null || _divisions$find2 === void 0 ? void 0 : _divisions$find2.division_name) || `Division ID: ${divisionId}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Division\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 930,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: sectionId === 'all' ? 'All Sections' : ((_sections$find2 = sections.find(s => s.section_id === sectionId)) === null || _sections$find2 === void 0 ? void 0 : _sections$find2.section_name) || `Section ID: ${sectionId}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 938,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Section\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 942,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: reportData.summary.total_records\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 945,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Records\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: reportData.summary.unique_employees\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 949,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Unique Employees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 950,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 948,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false), reportType === 'meal' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: reportScope === 'individual' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data3 = reportData.data) === null || _reportData$data3 === void 0 ? void 0 : (_reportData$data3$ = _reportData$data3[0]) === null || _reportData$data3$ === void 0 ? void 0 : (_reportData$data3$$us = _reportData$data3$.user) === null || _reportData$data3$$us === void 0 ? void 0 : _reportData$data3$$us.employeeId) || ((_reportData$data4 = reportData.data) === null || _reportData$data4 === void 0 ? void 0 : (_reportData$data4$ = _reportData$data4[0]) === null || _reportData$data4$ === void 0 ? void 0 : _reportData$data4$.employee_id) || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 963,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Employee ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: (_reportData$data5 = reportData.data) !== null && _reportData$data5 !== void 0 && (_reportData$data5$ = _reportData$data5[0]) !== null && _reportData$data5$ !== void 0 && (_reportData$data5$$us = _reportData$data5$.user) !== null && _reportData$data5$$us !== void 0 && _reportData$data5$$us.firstName && (_reportData$data6 = reportData.data) !== null && _reportData$data6 !== void 0 && (_reportData$data6$ = _reportData$data6[0]) !== null && _reportData$data6$ !== void 0 && (_reportData$data6$$us = _reportData$data6$.user) !== null && _reportData$data6$$us !== void 0 && _reportData$data6$$us.lastName ? `${reportData.data[0].user.firstName} ${reportData.data[0].user.lastName}` : ((_reportData$data7 = reportData.data) === null || _reportData$data7 === void 0 ? void 0 : (_reportData$data7$ = _reportData$data7[0]) === null || _reportData$data7$ === void 0 ? void 0 : _reportData$data7$.employee_name) || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Employee Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data8 = reportData.data) === null || _reportData$data8 === void 0 ? void 0 : _reportData$data8.length) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 975,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Meals\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 976,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data9 = reportData.data) === null || _reportData$data9 === void 0 ? void 0 : _reportData$data9.reduce((total, meal) => {\n                    var _meal$items;\n                    return total + (((_meal$items = meal.items) === null || _meal$items === void 0 ? void 0 : _meal$items.reduce((sum, item) => sum + item.quantity, 0)) || 1);\n                  }, 0)) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 979,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data0 = reportData.data) === null || _reportData$data0 === void 0 ? void 0 : _reportData$data0.length) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Meals\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: reportData.data ? new Set(reportData.data.map(meal => {\n                    var _meal$user;\n                    return ((_meal$user = meal.user) === null || _meal$user === void 0 ? void 0 : _meal$user.employeeId) || meal.employee_id;\n                  })).size : 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 994,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Unique Employees\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data1 = reportData.data) === null || _reportData$data1 === void 0 ? void 0 : _reportData$data1.filter(meal => (meal.mealType || meal.meal_type) === 'breakfast').length) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Breakfast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1008,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data10 = reportData.data) === null || _reportData$data10 === void 0 ? void 0 : _reportData$data10.filter(meal => (meal.mealType || meal.meal_type) === 'lunch').length) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1011,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Lunch\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1016,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data11 = reportData.data) === null || _reportData$data11 === void 0 ? void 0 : _reportData$data11.filter(meal => (meal.mealType || meal.meal_type) === 'dinner').length) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Dinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1024,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: ((_reportData$data12 = reportData.data) === null || _reportData$data12 === void 0 ? void 0 : _reportData$data12.filter(meal => (meal.mealType || meal.meal_type) === 'snack').length) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1027,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Snacks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1032,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 23\n              }, this), divisionId !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                style: {\n                  background: 'linear-gradient(135deg, #e17055 0%, #fdcb6e 100%)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  style: {\n                    fontSize: '0.9rem'\n                  },\n                  children: ((_divisions$find3 = divisions.find(d => d.division_id === divisionId)) === null || _divisions$find3 === void 0 ? void 0 : _divisions$find3.division_name) || 'Selected Division'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1037,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Division Filter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1036,\n                columnNumber: 25\n              }, this), sectionId !== 'all' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-card\",\n                style: {\n                  background: 'linear-gradient(135deg, #81ecec 0%, #00b894 100%)'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  style: {\n                    fontSize: '0.9rem'\n                  },\n                  children: ((_sections$find3 = sections.find(s => s.section_id === sectionId)) === null || _sections$find3 === void 0 ? void 0 : _sections$find3.section_name) || 'Selected Section'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Section Filter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"record-count\",\n              children: [reportData.data.length, \" records\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 15\n          }, this), reportData.data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"data-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [reportType === 'attendance' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: reportScope === 'individual' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '20%'\n                        },\n                        children: \"PUNCH DATE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1073,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"PUNCH TIME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1074,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"FUNCTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1075,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '20%'\n                        },\n                        children: \"EVENT DESCRIPTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1076,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '30%'\n                        },\n                        children: \"REMARKS\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1077,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"EMP NO\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1081,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '20%'\n                        },\n                        children: \"EMP NAME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1082,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"PUNCH DATE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1083,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"PUNCH TIME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1084,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"FUNCTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1085,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '35%'\n                        },\n                        children: \"EVENT DESCRIPTION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1086,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false), reportType === 'meal' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: reportScope === 'individual' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"MEAL DATE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1095,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"MEAL TIME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1096,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"MEAL TYPE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1097,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '20%'\n                        },\n                        children: \"LOCATION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1098,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"QUANTITY\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1099,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '25%'\n                        },\n                        children: \"ITEMS\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1100,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"EMP NO\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1104,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '15%'\n                        },\n                        children: \"EMP NAME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1105,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '12%'\n                        },\n                        children: \"MEAL DATE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1106,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '10%'\n                        },\n                        children: \"MEAL TIME\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1107,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '12%'\n                        },\n                        children: \"MEAL TYPE\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1108,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '12%'\n                        },\n                        children: \"LOCATION\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1109,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '8%'\n                        },\n                        children: \"QUANTITY\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1110,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        style: {\n                          width: '21%'\n                        },\n                        children: \"ITEMS\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1111,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true)\n                  }, void 0, false)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1068,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [reportType === 'attendance' && (() => {\n                  if (reportScope === 'individual') {\n                    // Individual report - show by date without employee columns\n                    const groupedData = {};\n                    reportData.data.forEach(record => {\n                      const dateKey = record.date_;\n                      if (!groupedData[dateKey]) {\n                        groupedData[dateKey] = [];\n                      }\n                      groupedData[dateKey].push(record);\n                    });\n                    const sortedDates = Object.keys(groupedData).sort();\n                    const rows = [];\n                    sortedDates.forEach(dateKey => {\n                      const records = groupedData[dateKey];\n                      // Sort records by time only for individual reports\n                      records.sort((a, b) => {\n                        const aTime = String(a.time_ || '');\n                        const bTime = String(b.time_ || '');\n                        return aTime.localeCompare(bTime);\n                      });\n                      records.forEach((record, index) => {\n                        var _record$scan_type3, _record$scan_type4;\n                        const showDate = index === 0;\n                        const date = new Date(record.date_);\n                        const day = date.getDate().toString().padStart(2, '0');\n                        const month = date.toLocaleDateString('en-GB', {\n                          month: 'short'\n                        });\n                        const year = date.getFullYear().toString().slice(-2);\n                        const weekday = date.toLocaleDateString('en-GB', {\n                          weekday: 'short'\n                        });\n                        const formattedDate = `${day}-${month}-${year}`;\n                        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: showDate ? 'date-group-row' : 'time-row',\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            className: showDate ? 'date-cell-with-data' : 'date-cell-empty',\n                            children: showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"date-line\",\n                                children: formattedDate\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1157,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"weekday-line\",\n                                children: weekday\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1158,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1156,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1154,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"time-column\",\n                            children: record.time_\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1162,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"function-column\",\n                            children: ((_record$scan_type3 = record.scan_type) === null || _record$scan_type3 === void 0 ? void 0 : _record$scan_type3.toUpperCase()) === 'IN' ? 'F1-0' : 'F4-0'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1163,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"event-description\",\n                            children: ((_record$scan_type4 = record.scan_type) === null || _record$scan_type4 === void 0 ? void 0 : _record$scan_type4.toUpperCase()) === 'IN' ? 'ON' : 'OFF'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1166,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"remarks-column\",\n                            children: \"Granted(ID & F) COM0002\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1169,\n                            columnNumber: 35\n                          }, this)]\n                        }, `${dateKey}-${index}`, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1153,\n                          columnNumber: 33\n                        }, this));\n                      });\n                    });\n                    return rows;\n                  } else {\n                    // Group report - show with employee columns\n                    const groupedData = {};\n                    reportData.data.forEach(record => {\n                      const dateKey = record.date_;\n                      if (!groupedData[dateKey]) {\n                        groupedData[dateKey] = [];\n                      }\n                      groupedData[dateKey].push(record);\n                    });\n                    const sortedDates = Object.keys(groupedData).sort();\n                    const rows = [];\n                    sortedDates.forEach(dateKey => {\n                      const records = groupedData[dateKey];\n                      // Sort records by employee ID first, then by time\n                      records.sort((a, b) => {\n                        const aEmpId = String(a.employee_ID || a.employee_id || '');\n                        const bEmpId = String(b.employee_ID || b.employee_id || '');\n                        const empCompare = aEmpId.localeCompare(bEmpId);\n                        if (empCompare !== 0) return empCompare;\n                        const aTime = String(a.time_ || '');\n                        const bTime = String(b.time_ || '');\n                        return aTime.localeCompare(bTime);\n                      });\n                      records.forEach((record, index) => {\n                        var _record$scan_type5, _record$scan_type6;\n                        const showDate = index === 0;\n                        const date = new Date(record.date_);\n                        const day = date.getDate().toString().padStart(2, '0');\n                        const month = date.toLocaleDateString('en-GB', {\n                          month: 'short'\n                        });\n                        const year = date.getFullYear().toString().slice(-2);\n                        const weekday = date.toLocaleDateString('en-GB', {\n                          weekday: 'short'\n                        });\n                        const formattedDate = `${day}-${month}-${year}`;\n                        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                          className: showDate ? 'date-group-row' : 'time-row',\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"employee-id-column\",\n                            style: {\n                              fontWeight: 'bold',\n                              textAlign: 'center'\n                            },\n                            children: record.employee_ID || record.employee_id || 'N/A'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1213,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"employee-name-column\",\n                            style: {\n                              textAlign: 'left',\n                              paddingLeft: '8px'\n                            },\n                            children: record.employee_name || record.name || 'Unknown'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1216,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: showDate ? 'date-cell-with-data' : 'date-cell-empty',\n                            children: showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"date-line\",\n                                children: formattedDate\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1222,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"weekday-line\",\n                                children: weekday\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1223,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1221,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1219,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"time-column\",\n                            children: record.time_\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1227,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"function-column\",\n                            children: ((_record$scan_type5 = record.scan_type) === null || _record$scan_type5 === void 0 ? void 0 : _record$scan_type5.toUpperCase()) === 'IN' ? 'F1-0' : 'F4-0'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1228,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"event-description\",\n                            style: {\n                              textAlign: 'left',\n                              paddingLeft: '5px'\n                            },\n                            children: [((_record$scan_type6 = record.scan_type) === null || _record$scan_type6 === void 0 ? void 0 : _record$scan_type6.toUpperCase()) === 'IN' ? 'ON' : 'OFF', \"  Granted(ID & F COM0002)\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1231,\n                            columnNumber: 35\n                          }, this)]\n                        }, `${dateKey}-${index}`, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1212,\n                          columnNumber: 33\n                        }, this));\n                      });\n                    });\n                    return rows;\n                  }\n                })(), reportType === 'meal' && (() => {\n                  if (reportScope === 'individual') {\n                    // Individual meal report - group by date\n                    const groupedData = {};\n                    reportData.data.forEach(record => {\n                      const dateKey = record.date || record.meal_date || record.mealTime;\n                      if (!groupedData[dateKey]) {\n                        groupedData[dateKey] = [];\n                      }\n                      groupedData[dateKey].push(record);\n                    });\n                    const sortedDates = Object.keys(groupedData).sort();\n                    const rows = [];\n                    sortedDates.forEach(dateKey => {\n                      const records = groupedData[dateKey];\n                      // Sort records by meal time\n                      records.sort((a, b) => {\n                        const aTime = String(a.mealTime || a.meal_time || '');\n                        const bTime = String(b.mealTime || b.meal_time || '');\n                        return aTime.localeCompare(bTime);\n                      });\n                      records.forEach((record, index) => {\n                        var _record$items5, _record$items6;\n                        const showDate = index === 0;\n                        const date = new Date(record.date || record.meal_date || record.mealTime);\n                        const day = date.getDate().toString().padStart(2, '0');\n                        const month = date.toLocaleDateString('en-GB', {\n                          month: 'short'\n                        });\n                        const year = date.getFullYear().toString().slice(-2);\n                        const weekday = date.toLocaleDateString('en-GB', {\n                          weekday: 'short'\n                        });\n                        const formattedDate = `${day}-${month}-${year}`;\n                        rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            className: showDate ? 'date-cell' : 'date-cell-empty',\n                            children: showDate && /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"date-line\",\n                                children: formattedDate\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1280,\n                                columnNumber: 41\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"weekday-line\",\n                                children: weekday\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1281,\n                                columnNumber: 41\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1279,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1277,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"time-column\",\n                            children: new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n                              hour: '2-digit',\n                              minute: '2-digit'\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1285,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"meal-type-column\",\n                            style: {\n                              textAlign: 'center',\n                              textTransform: 'capitalize'\n                            },\n                            children: record.mealType || record.meal_type\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1290,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"location-column\",\n                            style: {\n                              textAlign: 'center',\n                              textTransform: 'capitalize'\n                            },\n                            children: record.location || 'Cafeteria'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1293,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"quantity-column\",\n                            style: {\n                              textAlign: 'center',\n                              fontWeight: 'bold'\n                            },\n                            children: ((_record$items5 = record.items) === null || _record$items5 === void 0 ? void 0 : _record$items5.reduce((total, item) => total + item.quantity, 0)) || 1\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1296,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"items-column\",\n                            style: {\n                              fontSize: '0.8rem'\n                            },\n                            children: ((_record$items6 = record.items) === null || _record$items6 === void 0 ? void 0 : _record$items6.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal'\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1299,\n                            columnNumber: 35\n                          }, this)]\n                        }, `${dateKey}-${index}`, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1276,\n                          columnNumber: 33\n                        }, this));\n                      });\n                    });\n                    return rows;\n                  } else {\n                    // Group meal report - show with employee columns\n                    const rows = [];\n                    reportData.data.forEach((record, index) => {\n                      var _record$user4, _record$user5, _record$user6, _record$items7, _record$items8;\n                      const date = new Date(record.date || record.meal_date || record.mealTime);\n                      const day = date.getDate().toString().padStart(2, '0');\n                      const month = date.toLocaleDateString('en-GB', {\n                        month: 'short'\n                      });\n                      const year = date.getFullYear().toString().slice(-2);\n                      const formattedDate = `${day}-${month}-${year}`;\n                      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"employee-id-column\",\n                          style: {\n                            fontWeight: 'bold',\n                            textAlign: 'center'\n                          },\n                          children: ((_record$user4 = record.user) === null || _record$user4 === void 0 ? void 0 : _record$user4.employeeId) || record.employee_id || 'N/A'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1319,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"employee-name-column\",\n                          style: {\n                            textAlign: 'left',\n                            paddingLeft: '8px'\n                          },\n                          children: (_record$user5 = record.user) !== null && _record$user5 !== void 0 && _record$user5.firstName && (_record$user6 = record.user) !== null && _record$user6 !== void 0 && _record$user6.lastName ? `${record.user.firstName} ${record.user.lastName}` : record.employee_name || 'Unknown'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1322,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"date-cell\",\n                          style: {\n                            textAlign: 'center'\n                          },\n                          children: formattedDate\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1327,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"time-column\",\n                          style: {\n                            textAlign: 'center'\n                          },\n                          children: new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1330,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"meal-type-column\",\n                          style: {\n                            textAlign: 'center',\n                            textTransform: 'capitalize'\n                          },\n                          children: record.mealType || record.meal_type\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1335,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"location-column\",\n                          style: {\n                            textAlign: 'center',\n                            textTransform: 'capitalize'\n                          },\n                          children: record.location || 'Cafeteria'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1338,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"quantity-column\",\n                          style: {\n                            textAlign: 'center',\n                            fontWeight: 'bold'\n                          },\n                          children: ((_record$items7 = record.items) === null || _record$items7 === void 0 ? void 0 : _record$items7.reduce((total, item) => total + item.quantity, 0)) || 1\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1341,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"items-column\",\n                          style: {\n                            fontSize: '0.8rem'\n                          },\n                          children: ((_record$items8 = record.items) === null || _record$items8 === void 0 ? void 0 : _record$items8.map(item => `${item.name} (${item.quantity})`).join(', ')) || 'Standard Meal'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1344,\n                          columnNumber: 33\n                        }, this)]\n                      }, index, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1318,\n                        columnNumber: 31\n                      }, this));\n                    });\n                    return rows;\n                  }\n                })()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 19\n            }, this), reportData.data.length > 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination-info\",\n              children: [\"Showing first 100 records of \", reportData.data.length, \" total records. Use export function to download complete data.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1357,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-inbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1366,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"empty-title\",\n              children: \"No Data Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-text\",\n              children: \"No records found for the selected criteria. Try adjusting your filters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1369,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 11\n      }, this) : !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-results\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-file-earmark-bar-graph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1378,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"empty-title\",\n            children: \"Ready to Generate Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-text\",\n            children: \"Configure your report parameters above and click \\\"Generate Report\\\" to start.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1376,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 707,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportGeneration, \"UwSSbh74AOzc/kd+eZSD+daW9uA=\");\n_c = ReportGeneration;\nexport default ReportGeneration;\nvar _c;\n$RefreshReg$(_c, \"ReportGeneration\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ReportGeneration","_s","_reportData$summary","_reportData$summary2","_divisions$find","_sections$find","_reportData$data","_reportData$data$","_reportData$data2","_reportData$data2$","_divisions$find2","_sections$find2","_reportData$data3","_reportData$data3$","_reportData$data3$$us","_reportData$data4","_reportData$data4$","_reportData$data5","_reportData$data5$","_reportData$data5$$us","_reportData$data6","_reportData$data6$","_reportData$data6$$us","_reportData$data7","_reportData$data7$","_reportData$data8","_reportData$data9","_reportData$data0","_reportData$data1","_reportData$data10","_reportData$data11","_reportData$data12","_divisions$find3","_sections$find3","reportType","setReportType","reportScope","setReportScope","employeeId","setEmployeeId","divisionId","setDivisionId","sectionId","setSectionId","divisions","setDivisions","sections","setSections","allSections","setAllSections","dateRange","setDateRange","startDate","endDate","loading","setLoading","reportData","setReportData","error","setError","fetchDivisions","fetchAllSections","today","Date","toISOString","split","fetchSectionsByDivision","token","localStorage","getItem","response","fetch","headers","ok","data","json","err","console","generateReport","log","endpoint","requestData","from_date","to_date","report_type","employee_id","division_id","section_id","filters","groupBy","method","body","JSON","stringify","status","success","message","printReport","length","firstRecord","isIndividualReport","groupedData","forEach","record","date","date_","push","printContent","employee_ID","employee_name","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","second","mealGroupedData","dateKey","meal_date","mealTime","sortedDates","Object","keys","sort","records","getDate","toString","padStart","getFullYear","slice","dayName","weekday","formattedDate","a","b","aTime","meal_time","getTime","bTime","index","_record$items","_record$items2","showDate","items","map","item","name","quantity","join","reduce","total","mealType","meal_type","location","_record$items3","_record$items4","_record$user","_record$user2","_record$user3","empName","user","firstName","lastName","time_","localeCompare","_record$scan_type","isOnScan","scan_type","toUpperCase","functionCode","aEmpId","String","bEmpId","empCompare","_record$scan_type2","printWindow","window","open","Error","document","write","close","setTimeout","print","printErr","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","division","division_name","section","section_name","type","placeholder","style","display","alignItems","gap","onClick","disabled","summary","division_filter","section_filter","find","d","s","total_records","unique_employees","meal","_meal$items","sum","Set","_meal$user","size","filter","background","fontSize","width","rows","_record$scan_type3","_record$scan_type4","_record$scan_type5","_record$scan_type6","fontWeight","textAlign","paddingLeft","_record$items5","_record$items6","textTransform","_record$user4","_record$user5","_record$user6","_record$items7","_record$items8","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/ReportGeneration.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ReportGeneration.css';\r\n\r\nconst ReportGeneration = () => {\r\n  const [reportType, setReportType] = useState('attendance');\r\n  const [reportScope, setReportScope] = useState('individual');\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [divisionId, setDivisionId] = useState('all');\r\n  const [sectionId, setSectionId] = useState('all');\r\n  const [divisions, setDivisions] = useState([]);\r\n  const [sections, setSections] = useState([]);\r\n  const [allSections, setAllSections] = useState([]);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [reportData, setReportData] = useState(null);\r\n  const [error, setError] = useState('');\r\n\r\n  // Fetch divisions and sections on component mount\r\n  useEffect(() => {\r\n    fetchDivisions();\r\n    fetchAllSections();\r\n    \r\n    // Set default date range to today\r\n    const today = new Date().toISOString().split('T')[0];\r\n    setDateRange({\r\n      startDate: today,\r\n      endDate: today\r\n    });\r\n  }, []);\r\n\r\n  // Fetch sections when division changes\r\n  useEffect(() => {\r\n    if (divisionId && divisionId !== 'all') {\r\n      fetchSectionsByDivision(divisionId);\r\n    } else {\r\n      setSections(allSections);\r\n      setSectionId('all');\r\n    }\r\n  }, [divisionId, allSections]);\r\n\r\n  const fetchDivisions = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/mysql/divisions', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setDivisions(data.divisions || []);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching divisions:', err);\r\n    }\r\n  };\r\n\r\n  const fetchAllSections = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/mysql/sections', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAllSections(data.sections || []);\r\n        setSections(data.sections || []);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching sections:', err);\r\n    }\r\n  };\r\n\r\n  const fetchSectionsByDivision = async (divisionId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000/api/mysql/sections?division_id=${divisionId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSections(data.sections || []);\r\n        setSectionId('all'); // Reset section selection\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching sections by division:', err);\r\n    }\r\n  };\r\n\r\n  const generateReport = async () => {\r\n    if (!dateRange.startDate || !dateRange.endDate) {\r\n      setError('Please select both start and end dates');\r\n      return;\r\n    }\r\n\r\n    if (reportScope === 'individual' && !employeeId && (reportType === 'attendance' || reportType === 'meal')) {\r\n      setError(`Please enter Employee ID for individual ${reportType} reports`);\r\n      return;\r\n    }\r\n\r\n    console.log('Generating report with:', {\r\n      reportType,\r\n      reportScope,\r\n      employeeId,\r\n      divisionId,\r\n      sectionId,\r\n      dateRange\r\n    });\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setReportData(null);\r\n\r\n    try {\r\n      let endpoint = '';\r\n      let requestData = {\r\n        from_date: dateRange.startDate,\r\n        to_date: dateRange.endDate,\r\n        report_type: reportScope\r\n      };\r\n\r\n      // Add employee ID for individual reports\r\n      if (reportScope === 'individual' && employeeId) {\r\n        requestData.employee_id = employeeId;\r\n      }\r\n\r\n      // Add division and section filters for group attendance reports\r\n      if (reportScope === 'group' && reportType === 'attendance') {\r\n        if (divisionId && divisionId !== 'all') {\r\n          requestData.division_id = divisionId;\r\n        }\r\n        if (sectionId && sectionId !== 'all') {\r\n          requestData.section_id = sectionId;\r\n        }\r\n      }\r\n\r\n      // Determine endpoint based on report type\r\n      switch (reportType) {\r\n        case 'attendance':\r\n          endpoint = '/api/reports/mysql/attendance';\r\n          break;\r\n        case 'meal':\r\n          endpoint = '/api/reports/meal';\r\n          requestData = {\r\n            startDate: dateRange.startDate,\r\n            endDate: dateRange.endDate,\r\n            filters: {},\r\n            groupBy: reportScope === 'individual' ? 'user' : 'date'\r\n          };\r\n          // Add employee filter for individual reports\r\n          if (reportScope === 'individual' && employeeId) {\r\n            requestData.filters.employeeId = employeeId;\r\n          }\r\n          // Add division and section filters for meal reports\r\n          if (divisionId && divisionId !== 'all') {\r\n            requestData.filters.divisionId = divisionId;\r\n          }\r\n          if (sectionId && sectionId !== 'all') {\r\n            requestData.filters.sectionId = sectionId;\r\n          }\r\n          break;\r\n        case 'audit':\r\n          endpoint = '/api/reports/audit';\r\n          break;\r\n        default:\r\n          endpoint = '/api/reports/mysql/attendance';\r\n      }\r\n\r\n      console.log('Making request to:', `http://localhost:5000${endpoint}`);\r\n      console.log('Request data:', requestData);\r\n\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(requestData)\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Response:', { status: response.status, data });\r\n\r\n      if (response.ok && data.success) {\r\n        setReportData(data);\r\n        console.log('Report generated successfully:', data);\r\n      } else {\r\n        setError(data.message || 'Failed to generate report');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Report generation error:', err);\r\n      setError('Network error occurred while generating report');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const printReport = () => {\r\n    console.log('Print function called');\r\n    console.log('Report data:', reportData);\r\n    console.log('Report scope:', reportScope);\r\n    \r\n    if (!reportData || !reportData.data) {\r\n      console.error('No report data available for printing');\r\n      setError('No data to print. Please generate a report first.');\r\n      return;\r\n    }\r\n\r\n    if (!reportData.data.length) {\r\n      console.error('Empty report data');\r\n      setError('No records found to print');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Starting print process...');\r\n      // Get employee info from first record for individual reports\r\n      const firstRecord = reportData.data[0];\r\n      const isIndividualReport = reportScope === 'individual';\r\n      \r\n      console.log('First record:', firstRecord);\r\n      console.log('Is individual report:', isIndividualReport);\r\n      \r\n      // Group data by date for individual reports\r\n      const groupedData = {};\r\n      if (isIndividualReport) {\r\n        reportData.data.forEach(record => {\r\n          const date = record.date_;\r\n          if (!groupedData[date]) {\r\n            groupedData[date] = [];\r\n          }\r\n          groupedData[date].push(record);\r\n        });\r\n      }\r\n\r\n      // Create print content matching the image format\r\n      let printContent = `\r\n        <html>\r\n          <head>\r\n            <title>Attendance Report</title>\r\n            <style>\r\n              @page {\r\n                margin: 0.5in;\r\n                size: A4;\r\n              }\r\n              \r\n              body { \r\n                font-family: 'Courier New', monospace;\r\n                margin: 0;\r\n                padding: 0;\r\n                font-size: 11px;\r\n                line-height: 1.2;\r\n                color: #000;\r\n                -webkit-print-color-adjust: exact;\r\n                print-color-adjust: exact;\r\n              }\r\n              \r\n              .report-header { \r\n                margin-bottom: 15px;\r\n              }\r\n              \r\n              .report-title {\r\n                font-weight: bold;\r\n                font-size: 14px;\r\n                margin-bottom: 3px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .report-subtitle {\r\n                font-size: 11px;\r\n                margin-bottom: 10px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .header-info {\r\n                display: flex;\r\n                justify-content: space-between;\r\n                margin-bottom: 10px;\r\n              }\r\n              \r\n              .left-info, .right-info {\r\n                font-size: 10px;\r\n              }\r\n              \r\n              .employee-info {\r\n                margin-bottom: 10px;\r\n                font-size: 11px;\r\n              }\r\n              \r\n              .date-range {\r\n                margin-bottom: 15px;\r\n                font-size: 11px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .data-table { \r\n                width: 100%;\r\n                border-collapse: collapse;\r\n                font-size: 10px;\r\n                margin-bottom: 20px;\r\n                border: 1px solid #000;\r\n                table-layout: fixed;\r\n              }\r\n              \r\n              .data-table th { \r\n                border: 1px solid #000;\r\n                padding: 4px 6px;\r\n                text-align: center;\r\n                font-weight: bold;\r\n                background: #f5f5f5;\r\n                font-size: 10px;\r\n              }\r\n              \r\n              .data-table td { \r\n                border: 1px solid #000;\r\n                padding: 4px 6px;\r\n                text-align: center;\r\n                margin: 0;\r\n                vertical-align: top;\r\n                font-size: 10px;\r\n              }\r\n              \r\n              .date-cell {\r\n                text-align: left;\r\n                vertical-align: top;\r\n                padding: 4px 6px;\r\n                font-weight: bold;\r\n                line-height: 1.2;\r\n              }\r\n              \r\n              .date-cell-empty {\r\n                padding: 4px 6px;\r\n                text-align: center;\r\n              }\r\n              \r\n              .function-col {\r\n                text-align: center;\r\n                font-weight: bold;\r\n              }\r\n              \r\n              .on-status {\r\n                font-weight: bold;\r\n              }\r\n              \r\n              .off-status {\r\n                font-weight: bold;\r\n              }\r\n              \r\n              .signature-section {\r\n                margin-top: 50px;\r\n                display: flex;\r\n                justify-content: space-between;\r\n                font-size: 10px;\r\n                align-items: flex-end;\r\n              }\r\n              \r\n              .signature-block {\r\n                text-align: center;\r\n                min-width: 150px;\r\n              }\r\n              \r\n              .signature-line {\r\n                border-bottom: 1px solid #000;\r\n                height: 40px;\r\n                margin-bottom: 5px;\r\n                width: 100%;\r\n              }\r\n              \r\n              .signature-label {\r\n                font-size: 10px;\r\n                font-weight: normal;\r\n              }\r\n            </style>\r\n          </head>\r\n          <body>\r\n            <div class=\"report-header\">\r\n              <div class=\"report-title\">${\r\n                reportType === 'meal' \r\n                  ? (isIndividualReport ? 'Individual Meal Report' : 'Group Meal Report')\r\n                  : (isIndividualReport ? 'Unit Attendance Report' : 'Group Attendance Report')\r\n              }</div>\r\n              <div class=\"report-subtitle\">${\r\n                reportType === 'meal' \r\n                  ? 'All Meal Consumption Records'\r\n                  : 'All Granted(ID & FP) Records'\r\n              }</div>\r\n              \r\n              <div class=\"header-info\">\r\n                <div class=\"left-info\">`;\r\n\r\n      if (isIndividualReport && firstRecord) {\r\n        printContent += `\r\n                  <div>Emp No :- ${firstRecord.employee_ID || 'N/A'}</div>\r\n                  <div>Emp Name :- ${firstRecord.employee_name || 'Unknown'}</div>`;\r\n      }\r\n\r\n      printContent += `\r\n                </div>\r\n                <div class=\"right-info\">\r\n                  <div>Printed Date : ${new Date().toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' })}</div>\r\n                  <div>Printed Time : ${new Date().toLocaleTimeString('en-GB', { hour: '2-digit', minute: '2-digit', second: '2-digit' })}</div>\r\n                  <div>Page 1 of 1</div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"date-range\">\r\n                <strong>Date From</strong> ${new Date(dateRange.startDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' })} \r\n                <strong style=\"margin-left: 40px;\">To</strong> ${new Date(dateRange.endDate).toLocaleDateString('en-GB', { day: '2-digit', month: 'short', year: '2-digit' })}\r\n              </div>\r\n            </div>`;\r\n\r\n      // Create table with proper format\r\n      printContent += `\r\n            <table class=\"data-table\">\r\n              <thead>\r\n                <tr>`;\r\n      \r\n      if (reportType === 'meal') {\r\n        if (isIndividualReport) {\r\n          printContent += `\r\n                    <th style=\"width: 15%;\">Date</th>\r\n                    <th style=\"width: 12%;\">Time</th>\r\n                    <th style=\"width: 15%;\">Meal Type</th>\r\n                    <th style=\"width: 18%;\">Location</th>\r\n                    <th style=\"width: 10%;\">Quantity</th>\r\n                    <th style=\"width: 30%;\">Items</th>`;\r\n        } else {\r\n          printContent += `\r\n                    <th style=\"width: 10%;\">Emp No</th>\r\n                    <th style=\"width: 15%;\">Emp Name</th>\r\n                    <th style=\"width: 12%;\">Date</th>\r\n                    <th style=\"width: 10%;\">Time</th>\r\n                    <th style=\"width: 12%;\">Meal Type</th>\r\n                    <th style=\"width: 12%;\">Location</th>\r\n                    <th style=\"width: 8%;\">Quantity</th>\r\n                    <th style=\"width: 21%;\">Items</th>`;\r\n        }\r\n      } else {\r\n        if (isIndividualReport) {\r\n          printContent += `\r\n                    <th style=\"width: 18%;\">Date</th>\r\n                    <th style=\"width: 12%;\">Time</th>\r\n                    <th style=\"width: 10%;\">Function</th>\r\n                    <th style=\"width: 20%;\">Status</th>\r\n                    <th style=\"width: 40%;\">Verification</th>`;\r\n        } else {\r\n          printContent += `\r\n                    <th style=\"width: 12%;\">Emp No</th>\r\n                    <th style=\"width: 20%;\">Emp Name</th>\r\n                    <th style=\"width: 15%;\">Date</th>\r\n                    <th style=\"width: 10%;\">Time</th>\r\n                    <th style=\"width: 8%;\">Function</th>\r\n                    <th style=\"width: 35%;\">Event Description</th>`;\r\n        }\r\n      }\r\n      \r\n      printContent += `\r\n                </tr>\r\n              </thead>\r\n              <tbody>`;\r\n\r\n      if (reportType === 'meal') {\r\n        if (isIndividualReport) {\r\n          // For individual meal reports, group by date\r\n          const mealGroupedData = {};\r\n          reportData.data.forEach(record => {\r\n            const dateKey = record.date || record.meal_date || record.mealTime;\r\n            if (!mealGroupedData[dateKey]) {\r\n              mealGroupedData[dateKey] = [];\r\n            }\r\n            mealGroupedData[dateKey].push(record);\r\n          });\r\n\r\n          const sortedDates = Object.keys(mealGroupedData).sort();\r\n          \r\n          sortedDates.forEach(date => {\r\n            const records = mealGroupedData[date];\r\n            const day = new Date(date).getDate().toString().padStart(2, '0');\r\n            const month = new Date(date).toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = new Date(date).getFullYear().toString().slice(-2);\r\n            const dayName = new Date(date).toLocaleDateString('en-US', { weekday: 'short' });\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            // Sort records by time for each date\r\n            records.sort((a, b) => {\r\n              const aTime = new Date(a.mealTime || a.meal_time).getTime();\r\n              const bTime = new Date(b.mealTime || b.meal_time).getTime();\r\n              return aTime - bTime;\r\n            });\r\n            \r\n            records.forEach((record, index) => {\r\n              const showDate = index === 0;\r\n              const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { \r\n                hour: '2-digit', minute: '2-digit' \r\n              });\r\n              const items = record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal';\r\n              const quantity = record.items?.reduce((total, item) => total + item.quantity, 0) || 1;\r\n              \r\n              printContent += `\r\n                  <tr>\r\n                    <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\r\n                      ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\r\n                    </td>\r\n                    <td style=\"text-align: center;\">${mealTime}</td>\r\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\r\n                    <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\r\n                    <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\r\n                    <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\r\n                  </tr>`;\r\n            });\r\n          });\r\n        } else {\r\n          // For group meal reports, show all records with employee info\r\n          reportData.data.forEach((record, index) => {\r\n            const date = new Date(record.date || record.meal_date || record.mealTime);\r\n            const day = date.getDate().toString().padStart(2, '0');\r\n            const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = date.getFullYear().toString().slice(-2);\r\n            const dayName = date.toLocaleDateString('en-US', { weekday: 'short' });\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            const mealTime = new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { \r\n              hour: '2-digit', minute: '2-digit' \r\n            });\r\n            const items = record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal';\r\n            const quantity = record.items?.reduce((total, item) => total + item.quantity, 0) || 1;\r\n            const empName = record.user?.firstName && record.user?.lastName \r\n              ? `${record.user.firstName} ${record.user.lastName}`\r\n              : record.employee_name || 'Unknown';\r\n            \r\n            printContent += `\r\n                <tr>\r\n                  <td style=\"font-weight: bold; text-align: center;\">${record.user?.employeeId || record.employee_id || 'N/A'}</td>\r\n                  <td style=\"text-align: left; padding-left: 8px;\">${empName}</td>\r\n                  <td style=\"text-align: center;\">${formattedDate}<br/>${dayName}</td>\r\n                  <td style=\"text-align: center;\">${mealTime}</td>\r\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.mealType || record.meal_type}</td>\r\n                  <td style=\"text-align: center; text-transform: capitalize;\">${record.location || 'Cafeteria'}</td>\r\n                  <td style=\"text-align: center; font-weight: bold;\">${quantity}</td>\r\n                  <td style=\"font-size: 9px; padding: 3px;\">${items}</td>\r\n                </tr>`;\r\n          });\r\n        }\r\n      } else {\r\n        // Attendance report logic\r\n        if (isIndividualReport) {\r\n          // Sort dates and group data properly\r\n          const sortedDates = Object.keys(groupedData).sort();\r\n          \r\n          sortedDates.forEach(date => {\r\n            const records = groupedData[date];\r\n            const dayName = new Date(date).toLocaleDateString('en-US', { weekday: 'long' });\r\n            const day = new Date(date).getDate().toString().padStart(2, '0');\r\n            const month = new Date(date).toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = new Date(date).getFullYear().toString().slice(-2);\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            // Sort records by time for each date\r\n            records.sort((a, b) => (a.time_ || '').localeCompare(b.time_ || ''));\r\n            \r\n            records.forEach((record, index) => {\r\n              const isOnScan = record.scan_type?.toUpperCase() === 'IN';\r\n              const functionCode = isOnScan ? 'F1-0' : 'F4-0';\r\n              const status = isOnScan ? 'ON' : 'OFF';\r\n              const showDate = index === 0; // Only show date on first row for each date group\r\n            \r\n            printContent += `\r\n                <tr>\r\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\r\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\r\n                  </td>\r\n                  <td>${record.time_ || ''}</td>\r\n                  <td class=\"function-col\">${functionCode}</td>\r\n                  <td class=\"${isOnScan ? 'on-status' : 'off-status'}\">${status}</td>\r\n                  <td>Granted(ID & F) COM0002</td>\r\n                </tr>`;\r\n          });\r\n        });\r\n      } else {\r\n        // Group report - group by date and show employee details\r\n        const groupedData = {};\r\n        reportData.data.forEach(record => {\r\n          const dateKey = record.date_;\r\n          if (!groupedData[dateKey]) {\r\n            groupedData[dateKey] = [];\r\n          }\r\n          groupedData[dateKey].push(record);\r\n        });\r\n\r\n        const sortedDates = Object.keys(groupedData).sort();\r\n        \r\n        sortedDates.forEach(dateKey => {\r\n          const records = groupedData[dateKey];\r\n          records.sort((a, b) => {\r\n            // Sort by employee ID first, then by time\r\n            const aEmpId = String(a.employee_ID || a.employee_id || '');\r\n            const bEmpId = String(b.employee_ID || b.employee_id || '');\r\n            const empCompare = aEmpId.localeCompare(bEmpId);\r\n            if (empCompare !== 0) return empCompare;\r\n            const aTime = String(a.time_ || '');\r\n            const bTime = String(b.time_ || '');\r\n            return aTime.localeCompare(bTime);\r\n          });\r\n          \r\n          records.forEach((record, index) => {\r\n            const isOnScan = record.scan_type?.toUpperCase() === 'IN';\r\n            const functionCode = isOnScan ? 'F1-0' : 'F4-0';\r\n            const status = isOnScan ? 'ON' : 'OFF';\r\n            const showDate = index === 0;\r\n            \r\n            const day = new Date(record.date_).getDate().toString().padStart(2, '0');\r\n            const month = new Date(record.date_).toLocaleDateString('en-GB', { month: 'short' });\r\n            const year = new Date(record.date_).getFullYear().toString().slice(-2);\r\n            const dayName = new Date(record.date_).toLocaleDateString('en-US', { weekday: 'short' });\r\n            const formattedDate = `${day}-${month}-${year}`;\r\n            \r\n            printContent += `\r\n                <tr>\r\n                  <td style=\"font-weight: bold; text-align: center;\">${record.employee_ID || record.employee_id || 'N/A'}</td>\r\n                  <td style=\"text-align: left; padding-left: 8px;\">${record.employee_name || record.name || 'Unknown'}</td>\r\n                  <td class=\"${showDate ? 'date-cell' : 'date-cell-empty'}\">\r\n                    ${showDate ? `${formattedDate}<br/>${dayName}` : ''}\r\n                  </td>\r\n                  <td>${record.time_ || ''}</td>\r\n                  <td class=\"function-col\">${functionCode}</td>\r\n                  <td style=\"text-align: left; padding-left: 5px;\">${status} Granted(ID & F COM0002)</td>\r\n                </tr>`;\r\n          });\r\n        });\r\n        } // End of attendance group report\r\n      } // End of attendance report logic\r\n\r\n      printContent += `\r\n              </tbody>\r\n            </table>\r\n            \r\n            <div class=\"signature-section\">\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">User</div>\r\n              </div>\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">Date</div>\r\n              </div>\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">Authorized Signature 1</div>\r\n              </div>\r\n              <div class=\"signature-block\">\r\n                <div class=\"signature-line\"></div>\r\n                <div class=\"signature-label\">Authorized Signature 2</div>\r\n              </div>\r\n            </div>\r\n          </body>\r\n        </html>`;\r\n\r\n      console.log('Print content prepared, opening print window...');\r\n      \r\n      // Open print window\r\n      const printWindow = window.open('', '_blank');\r\n      \r\n      if (!printWindow) {\r\n        throw new Error('Could not open print window. Please check if popup blocker is enabled.');\r\n      }\r\n      \r\n      console.log('Print window opened successfully');\r\n      \r\n      printWindow.document.write(printContent);\r\n      printWindow.document.close();\r\n      \r\n      console.log('Content written to print window');\r\n      \r\n      // Wait for content to load then print\r\n      setTimeout(() => {\r\n        try {\r\n          printWindow.print();\r\n          printWindow.close();\r\n          console.log('Print dialog opened successfully');\r\n          setError(''); // Clear any previous errors\r\n        } catch (printErr) {\r\n          console.error('Error during print:', printErr);\r\n          printWindow.close();\r\n          throw new Error('Failed to open print dialog');\r\n        }\r\n      }, 250);\r\n\r\n    } catch (err) {\r\n      console.error('Print error:', err);\r\n      setError(`Failed to print report: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"report-generation\">\r\n      {/* Header Section */}\r\n      <div className=\"report-header\">\r\n        <div className=\"header-content\">\r\n          <h1>\r\n            <i className=\"bi bi-graph-up-arrow\"></i>\r\n            Report Generation Center\r\n          </h1>\r\n          <p className=\"header-subtitle\">\r\n            Generate comprehensive attendance, meal, and audit reports with advanced filtering and export capabilities\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"report-container\">\r\n        {/* Report Controls */}\r\n        <div className=\"report-controls\">\r\n          <div className=\"controls-header\">\r\n            <h2 className=\"controls-title\">Report Configuration</h2>\r\n            <p className=\"controls-subtitle\">Configure your report parameters and generate detailed analytics</p>\r\n          </div>\r\n\r\n          <div className=\"form-grid\">\r\n            <div className=\"form-field\">\r\n              <label className=\"field-label\">Report Type</label>\r\n              <select \r\n                className=\"field-input\"\r\n                value={reportType}\r\n                onChange={(e) => setReportType(e.target.value)}\r\n              >\r\n                <option value=\"attendance\">📊 Attendance Report</option>\r\n                <option value=\"meal\">🍽️ Meal Report</option>\r\n                <option value=\"audit\">🔍 Audit Report</option>\r\n              </select>\r\n            </div>\r\n\r\n            {(reportType === 'attendance' || reportType === 'meal') && (\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">Report Scope</label>\r\n                <select \r\n                  className=\"field-input\"\r\n                  value={reportScope}\r\n                  onChange={(e) => setReportScope(e.target.value)}\r\n                >\r\n                  <option value=\"individual\">👤 Individual Report</option>\r\n                  <option value=\"group\">👥 Group Report</option>\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            {reportScope === 'group' && (reportType === 'attendance' || reportType === 'meal') && (\r\n              <>\r\n                <div className=\"form-field\">\r\n                  <label className=\"field-label\">Division Filter</label>\r\n                  <select \r\n                    className=\"field-input\"\r\n                    value={divisionId}\r\n                    onChange={(e) => setDivisionId(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">🏢 All Divisions</option>\r\n                    {divisions.map((division) => (\r\n                      <option key={division.division_id} value={division.division_id}>\r\n                        📋 {division.division_name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-field\">\r\n                  <label className=\"field-label\">Section Filter</label>\r\n                  <select \r\n                    className=\"field-input\"\r\n                    value={sectionId}\r\n                    onChange={(e) => setSectionId(e.target.value)}\r\n                  >\r\n                    <option value=\"all\">🏢 All Sections</option>\r\n                    {sections.map((section) => (\r\n                      <option key={section.section_id} value={section.section_id}>\r\n                        📋 {section.section_name} {section.division_name ? `(${section.division_name})` : ''}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {reportScope === 'individual' && (reportType === 'attendance' || reportType === 'meal') && (\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">Employee ID</label>\r\n                <input \r\n                  type=\"text\"\r\n                  className=\"field-input\"\r\n                  placeholder=\"Enter Employee ID (e.g., SA1001, 006, etc.)\"\r\n                  value={employeeId}\r\n                  onChange={(e) => setEmployeeId(e.target.value)}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"date-range-grid\">\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">Start Date</label>\r\n                <input \r\n                  type=\"date\"\r\n                  className=\"field-input\"\r\n                  value={dateRange.startDate}\r\n                  onChange={(e) => setDateRange({...dateRange, startDate: e.target.value})}\r\n                />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label className=\"field-label\">End Date</label>\r\n                <input \r\n                  type=\"date\"\r\n                  className=\"field-input\"\r\n                  value={dateRange.endDate}\r\n                  onChange={(e) => setDateRange({...dateRange, endDate: e.target.value})}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-section\">\r\n            <div>\r\n              {error && (\r\n                <div className=\"error-message\">\r\n                  <i className=\"bi bi-exclamation-triangle\"></i>\r\n                  {error}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\r\n              {reportData && (\r\n                <div className=\"export-actions\">\r\n                  <button \r\n                    className=\"export-btn print\"\r\n                    onClick={printReport}\r\n                  >\r\n                    <i className=\"bi bi-printer\"></i>\r\n                    Print Report\r\n                  </button>\r\n                </div>\r\n              )}\r\n              \r\n              <button \r\n                className=\"generate-btn\"\r\n                onClick={generateReport}\r\n                disabled={loading}\r\n              >\r\n                {loading ? (\r\n                  <>\r\n                    <i className=\"bi bi-arrow-clockwise spin\"></i>\r\n                    Generating...\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <i className=\"bi bi-play-fill\"></i>\r\n                    Generate Report\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Report Results */}\r\n        {reportData ? (\r\n          <div className=\"report-results\">\r\n            <div className=\"results-header\">\r\n              <h3 className=\"results-title\">\r\n                <i className=\"bi bi-clipboard-data\"></i>\r\n                Report Results\r\n                {reportScope === 'group' && (reportType === 'attendance' || reportType === 'meal') && (\r\n                  <span className=\"filter-info\">\r\n                    {reportData.summary?.division_filter && (\r\n                      <span className=\"division-info\"> - {reportData.summary.division_filter}</span>\r\n                    )}\r\n                    {reportData.summary?.section_filter && (\r\n                      <span className=\"section-info\"> - {reportData.summary.section_filter}</span>\r\n                    )}\r\n                    {/* Show selected division/section for meal reports */}\r\n                    {reportType === 'meal' && divisionId !== 'all' && (\r\n                      <span className=\"division-info\"> - {\r\n                        divisions.find(d => d.division_id === divisionId)?.division_name || `Division ID: ${divisionId}`\r\n                      }</span>\r\n                    )}\r\n                    {reportType === 'meal' && sectionId !== 'all' && (\r\n                      <span className=\"section-info\"> - {\r\n                        sections.find(s => s.section_id === sectionId)?.section_name || `Section ID: ${sectionId}`\r\n                      }</span>\r\n                    )}\r\n                  </span>\r\n                )}\r\n              </h3>\r\n            </div>\r\n\r\n            {/* Statistics Grid */}\r\n            <div className=\"stats-grid\">\r\n              {reportType === 'attendance' && (\r\n                <>\r\n                  {reportScope === 'individual' ? (\r\n                    <>\r\n                      {/* Individual Report Stats */}\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.data?.[0]?.employee_ID || 'N/A'}</span>\r\n                        <span className=\"stat-label\">Employee ID</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.data?.[0]?.employee_name || 'Unknown'}</span>\r\n                        <span className=\"stat-label\">Employee Name</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.summary.total_records}</span>\r\n                        <span className=\"stat-label\">Total Records</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{`${dateRange.startDate} - ${dateRange.endDate}`}</span>\r\n                        <span className=\"stat-label\">Time Range</span>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {/* Group Report Stats */}\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{\r\n                          divisionId === 'all' ? 'All Divisions' : \r\n                          divisions.find(d => d.division_id === divisionId)?.division_name || `Division ID: ${divisionId}`\r\n                        }</span>\r\n                        <span className=\"stat-label\">Division</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{\r\n                          sectionId === 'all' ? 'All Sections' : \r\n                          sections.find(s => s.section_id === sectionId)?.section_name || `Section ID: ${sectionId}`\r\n                        }</span>\r\n                        <span className=\"stat-label\">Section</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.summary.total_records}</span>\r\n                        <span className=\"stat-label\">Total Records</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.summary.unique_employees}</span>\r\n                        <span className=\"stat-label\">Unique Employees</span>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              \r\n              {reportType === 'meal' && (\r\n                <>\r\n                  {reportScope === 'individual' ? (\r\n                    <>\r\n                      {/* Individual Meal Report Stats */}\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.data?.[0]?.user?.employeeId || reportData.data?.[0]?.employee_id || 'N/A'}</span>\r\n                        <span className=\"stat-label\">Employee ID</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">\r\n                          {reportData.data?.[0]?.user?.firstName && reportData.data?.[0]?.user?.lastName \r\n                            ? `${reportData.data[0].user.firstName} ${reportData.data[0].user.lastName}`\r\n                            : reportData.data?.[0]?.employee_name || 'Unknown'}\r\n                        </span>\r\n                        <span className=\"stat-label\">Employee Name</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.data?.length || 0}</span>\r\n                        <span className=\"stat-label\">Total Meals</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">\r\n                          {reportData.data?.reduce((total, meal) => \r\n                            total + (meal.items?.reduce((sum, item) => sum + item.quantity, 0) || 1), 0) || 0}\r\n                        </span>\r\n                        <span className=\"stat-label\">Total Quantity</span>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {/* Group Meal Report Stats */}\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">{reportData.data?.length || 0}</span>\r\n                        <span className=\"stat-label\">Total Meals</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">\r\n                          {reportData.data ? \r\n                            new Set(reportData.data.map(meal => \r\n                              meal.user?.employeeId || meal.employee_id\r\n                            )).size : 0}\r\n                        </span>\r\n                        <span className=\"stat-label\">Unique Employees</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">\r\n                          {reportData.data?.filter(meal => \r\n                            (meal.mealType || meal.meal_type) === 'breakfast'\r\n                          ).length || 0}\r\n                        </span>\r\n                        <span className=\"stat-label\">Breakfast</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">\r\n                          {reportData.data?.filter(meal => \r\n                            (meal.mealType || meal.meal_type) === 'lunch'\r\n                          ).length || 0}\r\n                        </span>\r\n                        <span className=\"stat-label\">Lunch</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">\r\n                          {reportData.data?.filter(meal => \r\n                            (meal.mealType || meal.meal_type) === 'dinner'\r\n                          ).length || 0}\r\n                        </span>\r\n                        <span className=\"stat-label\">Dinner</span>\r\n                      </div>\r\n                      <div className=\"stat-card\">\r\n                        <span className=\"stat-number\">\r\n                          {reportData.data?.filter(meal => \r\n                            (meal.mealType || meal.meal_type) === 'snack'\r\n                          ).length || 0}\r\n                        </span>\r\n                        <span className=\"stat-label\">Snacks</span>\r\n                      </div>\r\n                      {/* Additional stats for filtered reports */}\r\n                      {divisionId !== 'all' && (\r\n                        <div className=\"stat-card\" style={{background: 'linear-gradient(135deg, #e17055 0%, #fdcb6e 100%)'}}>\r\n                          <span className=\"stat-number\" style={{fontSize: '0.9rem'}}>\r\n                            {divisions.find(d => d.division_id === divisionId)?.division_name || 'Selected Division'}\r\n                          </span>\r\n                          <span className=\"stat-label\">Division Filter</span>\r\n                        </div>\r\n                      )}\r\n                      {sectionId !== 'all' && (\r\n                        <div className=\"stat-card\" style={{background: 'linear-gradient(135deg, #81ecec 0%, #00b894 100%)'}}>\r\n                          <span className=\"stat-number\" style={{fontSize: '0.9rem'}}>\r\n                            {sections.find(s => s.section_id === sectionId)?.section_name || 'Selected Section'}\r\n                          </span>\r\n                          <span className=\"stat-label\">Section Filter</span>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Data Section */}\r\n            <div className=\"data-section\">\r\n              <div className=\"data-header\">\r\n                {/* <h4 className=\"data-title\">Unit Attendance Report</h4> */}\r\n                <span className=\"record-count\">{reportData.data.length} records</span>\r\n              </div>\r\n\r\n              {reportData.data.length > 0 ? (\r\n                <>\r\n                  <table className=\"data-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        {reportType === 'attendance' && (\r\n                          <>\r\n                            {reportScope === 'individual' ? (\r\n                              <>\r\n                                <th style={{width: '20%'}}>PUNCH DATE</th>\r\n                                <th style={{width: '15%'}}>PUNCH TIME</th>\r\n                                <th style={{width: '15%'}}>FUNCTION</th>\r\n                                <th style={{width: '20%'}}>EVENT DESCRIPTION</th>\r\n                                <th style={{width: '30%'}}>REMARKS</th>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <th style={{width: '10%'}}>EMP NO</th>\r\n                                <th style={{width: '20%'}}>EMP NAME</th>\r\n                                <th style={{width: '15%'}}>PUNCH DATE</th>\r\n                                <th style={{width: '10%'}}>PUNCH TIME</th>\r\n                                <th style={{width: '10%'}}>FUNCTION</th>\r\n                                <th style={{width: '35%'}}>EVENT DESCRIPTION</th>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                        {reportType === 'meal' && (\r\n                          <>\r\n                            {reportScope === 'individual' ? (\r\n                              <>\r\n                                <th style={{width: '15%'}}>MEAL DATE</th>\r\n                                <th style={{width: '15%'}}>MEAL TIME</th>\r\n                                <th style={{width: '15%'}}>MEAL TYPE</th>\r\n                                <th style={{width: '20%'}}>LOCATION</th>\r\n                                <th style={{width: '10%'}}>QUANTITY</th>\r\n                                <th style={{width: '25%'}}>ITEMS</th>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <th style={{width: '10%'}}>EMP NO</th>\r\n                                <th style={{width: '15%'}}>EMP NAME</th>\r\n                                <th style={{width: '12%'}}>MEAL DATE</th>\r\n                                <th style={{width: '10%'}}>MEAL TIME</th>\r\n                                <th style={{width: '12%'}}>MEAL TYPE</th>\r\n                                <th style={{width: '12%'}}>LOCATION</th>\r\n                                <th style={{width: '8%'}}>QUANTITY</th>\r\n                                <th style={{width: '21%'}}>ITEMS</th>\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {reportType === 'attendance' && (() => {\r\n                        if (reportScope === 'individual') {\r\n                          // Individual report - show by date without employee columns\r\n                          const groupedData = {};\r\n                          reportData.data.forEach(record => {\r\n                            const dateKey = record.date_;\r\n                            if (!groupedData[dateKey]) {\r\n                              groupedData[dateKey] = [];\r\n                            }\r\n                            groupedData[dateKey].push(record);\r\n                          });\r\n\r\n                          const sortedDates = Object.keys(groupedData).sort();\r\n                          const rows = [];\r\n\r\n                          sortedDates.forEach(dateKey => {\r\n                            const records = groupedData[dateKey];\r\n                            // Sort records by time only for individual reports\r\n                            records.sort((a, b) => {\r\n                              const aTime = String(a.time_ || '');\r\n                              const bTime = String(b.time_ || '');\r\n                              return aTime.localeCompare(bTime);\r\n                            });\r\n                            \r\n                            records.forEach((record, index) => {\r\n                              const showDate = index === 0;\r\n                              const date = new Date(record.date_);\r\n                              const day = date.getDate().toString().padStart(2, '0');\r\n                              const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n                              const year = date.getFullYear().toString().slice(-2);\r\n                              const weekday = date.toLocaleDateString('en-GB', { weekday: 'short' });\r\n                              const formattedDate = `${day}-${month}-${year}`;\r\n\r\n                              rows.push(\r\n                                <tr key={`${dateKey}-${index}`} className={showDate ? 'date-group-row' : 'time-row'}>\r\n                                  <td className={showDate ? 'date-cell-with-data' : 'date-cell-empty'}>\r\n                                    {showDate && (\r\n                                      <div>\r\n                                        <div className=\"date-line\">{formattedDate}</div>\r\n                                        <div className=\"weekday-line\">{weekday}</div>\r\n                                      </div>\r\n                                    )}\r\n                                  </td>\r\n                                  <td className=\"time-column\">{record.time_}</td>\r\n                                  <td className=\"function-column\">\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'F1-0' : 'F4-0'}\r\n                                  </td>\r\n                                  <td className=\"event-description\">\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF'}\r\n                                  </td>\r\n                                  <td className=\"remarks-column\">Granted(ID & F) COM0002</td>\r\n                                </tr>\r\n                              );\r\n                            });\r\n                          });\r\n                          return rows;\r\n                        } else {\r\n                          // Group report - show with employee columns\r\n                          const groupedData = {};\r\n                          reportData.data.forEach(record => {\r\n                            const dateKey = record.date_;\r\n                            if (!groupedData[dateKey]) {\r\n                              groupedData[dateKey] = [];\r\n                            }\r\n                            groupedData[dateKey].push(record);\r\n                          });\r\n\r\n                          const sortedDates = Object.keys(groupedData).sort();\r\n                          const rows = [];\r\n\r\n                          sortedDates.forEach(dateKey => {\r\n                            const records = groupedData[dateKey];\r\n                            // Sort records by employee ID first, then by time\r\n                            records.sort((a, b) => {\r\n                              const aEmpId = String(a.employee_ID || a.employee_id || '');\r\n                              const bEmpId = String(b.employee_ID || b.employee_id || '');\r\n                              const empCompare = aEmpId.localeCompare(bEmpId);\r\n                              if (empCompare !== 0) return empCompare;\r\n                              const aTime = String(a.time_ || '');\r\n                              const bTime = String(b.time_ || '');\r\n                              return aTime.localeCompare(bTime);\r\n                            });\r\n                            \r\n                            records.forEach((record, index) => {\r\n                              const showDate = index === 0;\r\n                              const date = new Date(record.date_);\r\n                              const day = date.getDate().toString().padStart(2, '0');\r\n                              const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n                              const year = date.getFullYear().toString().slice(-2);\r\n                              const weekday = date.toLocaleDateString('en-GB', { weekday: 'short' });\r\n                              const formattedDate = `${day}-${month}-${year}`;\r\n\r\n                              rows.push(\r\n                                <tr key={`${dateKey}-${index}`} className={showDate ? 'date-group-row' : 'time-row'}>\r\n                                  <td className=\"employee-id-column\" style={{fontWeight: 'bold', textAlign: 'center'}}>\r\n                                    {record.employee_ID || record.employee_id || 'N/A'}\r\n                                  </td>\r\n                                  <td className=\"employee-name-column\" style={{textAlign: 'left', paddingLeft: '8px'}}>\r\n                                    {record.employee_name || record.name || 'Unknown'}\r\n                                  </td>\r\n                                  <td className={showDate ? 'date-cell-with-data' : 'date-cell-empty'}>\r\n                                    {showDate && (\r\n                                      <div>\r\n                                        <div className=\"date-line\">{formattedDate}</div>\r\n                                        <div className=\"weekday-line\">{weekday}</div>\r\n                                      </div>\r\n                                    )}\r\n                                  </td>\r\n                                  <td className=\"time-column\">{record.time_}</td>\r\n                                  <td className=\"function-column\">\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'F1-0' : 'F4-0'}\r\n                                  </td>\r\n                                  <td className=\"event-description\" style={{textAlign: 'left', paddingLeft: '5px'}}>\r\n                                    {record.scan_type?.toUpperCase() === 'IN' ? 'ON' : 'OFF'}  Granted(ID & F COM0002)\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            });\r\n                          });\r\n                          return rows;\r\n                        }\r\n                      })()}\r\n                      \r\n                      {reportType === 'meal' && (() => {\r\n                        if (reportScope === 'individual') {\r\n                          // Individual meal report - group by date\r\n                          const groupedData = {};\r\n                          reportData.data.forEach(record => {\r\n                            const dateKey = record.date || record.meal_date || record.mealTime;\r\n                            if (!groupedData[dateKey]) {\r\n                              groupedData[dateKey] = [];\r\n                            }\r\n                            groupedData[dateKey].push(record);\r\n                          });\r\n\r\n                          const sortedDates = Object.keys(groupedData).sort();\r\n                          const rows = [];\r\n\r\n                          sortedDates.forEach(dateKey => {\r\n                            const records = groupedData[dateKey];\r\n                            // Sort records by meal time\r\n                            records.sort((a, b) => {\r\n                              const aTime = String(a.mealTime || a.meal_time || '');\r\n                              const bTime = String(b.mealTime || b.meal_time || '');\r\n                              return aTime.localeCompare(bTime);\r\n                            });\r\n                            \r\n                            records.forEach((record, index) => {\r\n                              const showDate = index === 0;\r\n                              const date = new Date(record.date || record.meal_date || record.mealTime);\r\n                              const day = date.getDate().toString().padStart(2, '0');\r\n                              const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n                              const year = date.getFullYear().toString().slice(-2);\r\n                              const weekday = date.toLocaleDateString('en-GB', { weekday: 'short' });\r\n                              const formattedDate = `${day}-${month}-${year}`;\r\n\r\n                              rows.push(\r\n                                <tr key={`${dateKey}-${index}`}>\r\n                                  <td className={showDate ? 'date-cell' : 'date-cell-empty'}>\r\n                                    {showDate && (\r\n                                      <div>\r\n                                        <div className=\"date-line\">{formattedDate}</div>\r\n                                        <div className=\"weekday-line\">{weekday}</div>\r\n                                      </div>\r\n                                    )}\r\n                                  </td>\r\n                                  <td className=\"time-column\">\r\n                                    {new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { \r\n                                      hour: '2-digit', minute: '2-digit' \r\n                                    })}\r\n                                  </td>\r\n                                  <td className=\"meal-type-column\" style={{textAlign: 'center', textTransform: 'capitalize'}}>\r\n                                    {record.mealType || record.meal_type}\r\n                                  </td>\r\n                                  <td className=\"location-column\" style={{textAlign: 'center', textTransform: 'capitalize'}}>\r\n                                    {record.location || 'Cafeteria'}\r\n                                  </td>\r\n                                  <td className=\"quantity-column\" style={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                                    {record.items?.reduce((total, item) => total + item.quantity, 0) || 1}\r\n                                  </td>\r\n                                  <td className=\"items-column\" style={{fontSize: '0.8rem'}}>\r\n                                    {record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal'}\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            });\r\n                          });\r\n                          return rows;\r\n                        } else {\r\n                          // Group meal report - show with employee columns\r\n                          const rows = [];\r\n                          reportData.data.forEach((record, index) => {\r\n                            const date = new Date(record.date || record.meal_date || record.mealTime);\r\n                            const day = date.getDate().toString().padStart(2, '0');\r\n                            const month = date.toLocaleDateString('en-GB', { month: 'short' });\r\n                            const year = date.getFullYear().toString().slice(-2);\r\n                            const formattedDate = `${day}-${month}-${year}`;\r\n\r\n                            rows.push(\r\n                              <tr key={index}>\r\n                                <td className=\"employee-id-column\" style={{fontWeight: 'bold', textAlign: 'center'}}>\r\n                                  {record.user?.employeeId || record.employee_id || 'N/A'}\r\n                                </td>\r\n                                <td className=\"employee-name-column\" style={{textAlign: 'left', paddingLeft: '8px'}}>\r\n                                  {record.user?.firstName && record.user?.lastName \r\n                                    ? `${record.user.firstName} ${record.user.lastName}`\r\n                                    : record.employee_name || 'Unknown'}\r\n                                </td>\r\n                                <td className=\"date-cell\" style={{textAlign: 'center'}}>\r\n                                  {formattedDate}\r\n                                </td>\r\n                                <td className=\"time-column\" style={{textAlign: 'center'}}>\r\n                                  {new Date(record.mealTime || record.meal_time).toLocaleTimeString('en-GB', { \r\n                                    hour: '2-digit', minute: '2-digit' \r\n                                  })}\r\n                                </td>\r\n                                <td className=\"meal-type-column\" style={{textAlign: 'center', textTransform: 'capitalize'}}>\r\n                                  {record.mealType || record.meal_type}\r\n                                </td>\r\n                                <td className=\"location-column\" style={{textAlign: 'center', textTransform: 'capitalize'}}>\r\n                                  {record.location || 'Cafeteria'}\r\n                                </td>\r\n                                <td className=\"quantity-column\" style={{textAlign: 'center', fontWeight: 'bold'}}>\r\n                                  {record.items?.reduce((total, item) => total + item.quantity, 0) || 1}\r\n                                </td>\r\n                                <td className=\"items-column\" style={{fontSize: '0.8rem'}}>\r\n                                  {record.items?.map(item => `${item.name} (${item.quantity})`).join(', ') || 'Standard Meal'}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          });\r\n                          return rows;\r\n                        }\r\n                      })()}\r\n                    </tbody>\r\n                  </table>\r\n                  \r\n                  {reportData.data.length > 100 && (\r\n                    <div className=\"pagination-info\">\r\n                      Showing first 100 records of {reportData.data.length} total records. \r\n                      Use export function to download complete data.\r\n                    </div>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <div className=\"empty-state\">\r\n                  <div className=\"empty-icon\">\r\n                    <i className=\"bi bi-inbox\"></i>\r\n                  </div>\r\n                  <h4 className=\"empty-title\">No Data Found</h4>\r\n                  <p className=\"empty-text\">No records found for the selected criteria. Try adjusting your filters.</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : !loading && (\r\n          <div className=\"report-results\">\r\n            <div className=\"empty-state\">\r\n              <div className=\"empty-icon\">\r\n                <i className=\"bi bi-file-earmark-bar-graph\"></i>\r\n              </div>\r\n              <h4 className=\"empty-title\">Ready to Generate Reports</h4>\r\n              <p className=\"empty-text\">Configure your report parameters above and click \"Generate Report\" to start.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportGeneration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}