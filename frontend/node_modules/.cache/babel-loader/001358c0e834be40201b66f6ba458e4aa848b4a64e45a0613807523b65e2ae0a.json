{"ast":null,"code":"var _jsxFileName = \"B:\\\\PortAuthProject\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\RoleAccessManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { rolePermissions } from \"../../context/permissions\";\nimport './RoleAccessManagement.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoleAccessManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectAll, setSelectAll] = useState(false);\n  const [formData, setFormData] = useState({\n    permissions: {}\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const {\n    user\n  } = useContext(AuthContext);\n  const permissions = rolePermissions[user.role] || {};\n  // Available roles (fetched from backend)\n  const [availableRoles, setAvailableRoles] = useState([]);\n  useEffect(() => {\n    fetchRoles();\n    fetchUsers();\n  }, []);\n\n  // Fetch roles from API\n  const fetchRoles = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/roles');\n      if (response.ok) {\n        const data = await response.json();\n        // Map to match previous structure\n        setAvailableRoles((data.data || []).map(role => ({\n          value: role.name,\n          label: role.name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\n          description: ''\n        })));\n      } else {\n        setAvailableRoles([]);\n      }\n    } catch (error) {\n      setAvailableRoles([]);\n    }\n  };\n\n  // Available permissions list based on User model\n  const availablePermissions = [{\n    category: 'users',\n    name: 'User Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Users',\n      description: 'Add new users to the system'\n    }, {\n      id: 'read',\n      name: 'View Users',\n      description: 'View user information and lists'\n    }, {\n      id: 'update',\n      name: 'Update Users',\n      description: 'Edit user information and profiles'\n    }, {\n      id: 'delete',\n      name: 'Delete Users',\n      description: 'Remove users from the system'\n    }]\n  }, {\n    category: 'attendance',\n    name: 'Attendance Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Attendance',\n      description: 'Add attendance records'\n    }, {\n      id: 'read',\n      name: 'View Attendance',\n      description: 'View attendance records and reports'\n    }, {\n      id: 'update',\n      name: 'Update Attendance',\n      description: 'Edit attendance records'\n    }, {\n      id: 'delete',\n      name: 'Delete Attendance',\n      description: 'Remove attendance records'\n    }]\n  }, {\n    category: 'reports',\n    name: 'Reports Management',\n    permissions: [{\n      id: 'create',\n      name: 'Generate Reports',\n      description: 'Create system reports'\n    }, {\n      id: 'read',\n      name: 'View Reports',\n      description: 'Access and view reports'\n    }, {\n      id: 'update',\n      name: 'Update Reports',\n      description: 'Modify report settings'\n    }, {\n      id: 'delete',\n      name: 'Delete Reports',\n      description: 'Remove reports from system'\n    }]\n  }, {\n    category: 'divisions',\n    name: 'Division Management',\n    permissions: [{\n      id: 'create',\n      name: 'Create Divisions',\n      description: 'Add new company divisions'\n    }, {\n      id: 'read',\n      name: 'View Divisions',\n      description: 'View division information'\n    }, {\n      id: 'update',\n      name: 'Update Divisions',\n      description: 'Edit division details'\n    }, {\n      id: 'delete',\n      name: 'Delete Divisions',\n      description: 'Remove divisions'\n    }]\n  }, {\n    category: 'settings',\n    name: 'System Settings',\n    permissions: [{\n      id: 'create',\n      name: 'Create Settings',\n      description: 'Add new system configurations'\n    }, {\n      id: 'read',\n      name: 'View Settings',\n      description: 'Access system settings'\n    }, {\n      id: 'update',\n      name: 'Update Settings',\n      description: 'Modify system configurations'\n    }, {\n      id: 'delete',\n      name: 'Delete Settings',\n      description: 'Remove system settings'\n    }]\n  }];\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Fetch users from API\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/users');\n      if (response.ok) {\n        const data = await response.json();\n        setUsers(data.data || []);\n      } else {\n        console.error('Failed to fetch users');\n        setMessage('Failed to load users');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setMessage('Error loading users');\n      setMessageType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle role selection\n  const handleRoleSelect = e => {\n    const roleValue = e.target.value;\n    setSelectedRole(roleValue);\n    if (roleValue) {\n      // Find a user with this role to get current permissions\n      const userWithRole = users.find(u => u.role === roleValue);\n      if (userWithRole) {\n        setFormData({\n          permissions: userWithRole.permissions || {}\n        });\n        updateSelectAllStatus(userWithRole.permissions || {});\n      } else {\n        // If no user with this role exists, start with empty permissions\n        setFormData({\n          permissions: {}\n        });\n        setSelectAll(false);\n      }\n    } else {\n      setFormData({\n        permissions: {}\n      });\n      setSelectAll(false);\n    }\n  };\n\n  // Handle permission checkbox changes\n  const handlePermissionChange = (category, permissionId) => {\n    const newPermissions = {\n      ...formData.permissions\n    };\n    if (!newPermissions[category]) {\n      newPermissions[category] = {};\n    }\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\n    setFormData(prev => ({\n      ...prev,\n      permissions: newPermissions\n    }));\n    updateSelectAllStatus(newPermissions);\n  };\n\n  // Handle select all toggle\n  const handleSelectAll = () => {\n    const newSelectAll = !selectAll;\n    setSelectAll(newSelectAll);\n    const newPermissions = {};\n    if (newSelectAll) {\n      availablePermissions.forEach(category => {\n        newPermissions[category.category] = {};\n        category.permissions.forEach(perm => {\n          newPermissions[category.category][perm.id] = true;\n        });\n      });\n    } else {\n      availablePermissions.forEach(category => {\n        newPermissions[category.category] = {};\n        category.permissions.forEach(perm => {\n          newPermissions[category.category][perm.id] = false;\n        });\n      });\n    }\n    setFormData(prev => ({\n      ...prev,\n      permissions: newPermissions\n    }));\n  };\n\n  // Update select all status\n  const updateSelectAllStatus = permissions => {\n    let totalPermissions = 0;\n    let enabledPermissions = 0;\n    availablePermissions.forEach(category => {\n      category.permissions.forEach(perm => {\n        totalPermissions++;\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\n          enabledPermissions++;\n        }\n      });\n    });\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\n  };\n\n  // Get total enabled permissions count\n  const getTotalEnabledPermissions = () => {\n    let count = 0;\n    availablePermissions.forEach(category => {\n      category.permissions.forEach(perm => {\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\n          count++;\n        }\n      });\n    });\n    return count;\n  };\n\n  // Get total available permissions count\n  const getTotalAvailablePermissions = () => {\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedRole) {\n      setMessage('Please select a role first');\n      setMessageType('error');\n      return;\n    }\n    setSubmitting(true);\n    try {\n      // Get all users with the selected role\n      const usersWithRole = users.filter(user => user.role === selectedRole);\n      if (usersWithRole.length === 0) {\n        setMessage('No users found with the selected role');\n        setMessageType('error');\n        setSubmitting(false);\n        return;\n      }\n\n      // Update permissions for all users with this role\n      const updatePromises = usersWithRole.map(user => fetch(`http://localhost:5000/api/users/${user._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          permissions: formData.permissions\n        })\n      }));\n      const responses = await Promise.all(updatePromises);\n\n      // Check if all updates were successful\n      const allSuccessful = responses.every(response => response.ok);\n      if (allSuccessful) {\n        // Update the users in state\n        setUsers(prevUsers => prevUsers.map(user => user.role === selectedRole ? {\n          ...user,\n          permissions: formData.permissions\n        } : user));\n        setMessage(`Permissions updated successfully for all ${usersWithRole.length} users with role: ${selectedRole}`);\n        setMessageType('success');\n\n        // Auto-hide message after 5 seconds\n        setTimeout(() => {\n          setMessage('');\n          setMessageType('');\n        }, 5000);\n      } else {\n        setMessage('Some users could not be updated. Please try again.');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Error updating permissions:', error);\n      setMessage('Error updating role permissions. Please try again.');\n      setMessageType('error');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  // Get users count for selected role\n  const getUsersCountForRole = () => {\n    if (!selectedRole) return 0;\n    return users.filter(user => user.role === selectedRole).length;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-access-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\n  const selectedRoleUserCount = getUsersCountForRole();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-access-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decorative-elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header-custom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-wrapper-large\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-shield-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"page-title\",\n            children: \"Role Access Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"page-subtitle\",\n            children: \"Configure permissions for user roles - changes apply to all users with the selected role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-custom\",\n          children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-number\",\n                children: availableRoles.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-label\",\n                children: \"Available Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-number\",\n                children: getTotalAvailablePermissions()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-label\",\n                children: \"Available Permissions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), selectedRole && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-number\",\n                  children: selectedRoleUserCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-label\",\n                  children: \"Users with this Role\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stats-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-number\",\n                  children: getTotalEnabledPermissions()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stats-label\",\n                  children: \"Granted Permissions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              className: \"form-label-modern\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-person-gear text-primary mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), \"Select Role to Manage\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              id: \"role\",\n              className: \"form-control form-control-modern\",\n              value: selectedRole,\n              onChange: handleRoleSelect,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Choose a role to configure --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this), availableRoles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role.value,\n                children: [role.label, \" - \", role.description]\n              }, role.value, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted mt-2 d-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-info-circle mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), \"This will update permissions for \", selectedRoleUserCount, \" user(s) with the role: \", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: '#333',\n                  marginBottom: '20px',\n                  fontWeight: '600'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-shield-alt text-primary mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this), \"Configure Access Permissions for Role: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#667eea'\n                  },\n                  children: selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 60\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-info\",\n                style: {\n                  backgroundColor: '#e3f2fd',\n                  border: '1px solid #bbdefb',\n                  borderRadius: '6px',\n                  padding: '12px',\n                  marginBottom: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-info-circle text-primary mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Note:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), \" Changes will be applied to all \", selectedRoleUserCount, \" user(s) with the role \\\"\", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-all-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"select-all\",\n                  checked: selectAll,\n                  onChange: handleSelectAll\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"select-all\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-check2-all mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this), \"Select All Permissions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"permission-counter\",\n                  children: [getTotalEnabledPermissions(), \"/\", getTotalAvailablePermissions(), \" permissions selected\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), availablePermissions.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"permission-category\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"category-title\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-folder text-primary mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 25\n                  }, this), category.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox-grid\",\n                  children: category.permissions.map(permission => {\n                    const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `checkbox-item ${isChecked ? 'selected' : ''}`,\n                      onClick: () => handlePermissionChange(category.category, permission.id),\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: isChecked || false,\n                        onChange: () => handlePermissionChange(category.category, permission.id),\n                        id: `perm_${category.category}_${permission.id}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"checkmark\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 462,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: `perm_${category.category}_${permission.id}`,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"permission-title\",\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"bi bi-file-text text-muted mr-2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 465,\n                            columnNumber: 35\n                          }, this), permission.name]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 464,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"permission-description\",\n                          children: permission.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 468,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 463,\n                        columnNumber: 31\n                      }, this)]\n                    }, `${category.category}_${permission.id}`, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 29\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 23\n                }, this)]\n              }, category.category, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-4\",\n                children: permissions.canEditRoleAccess ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn-save-modern\",\n                  disabled: submitting,\n                  children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"spinner-border spinner-border-sm mr-2\",\n                      role: \"status\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"visually-hidden\",\n                        children: \"Loading...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 490,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 29\n                    }, this), \"Updating \", selectedRoleUserCount, \" user(s)...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-save mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 29\n                    }, this), \"Apply to All \", selectedRoleUserCount, \" User(s) with Role: \", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn-save-modern\",\n                  disabled: true,\n                  style: {\n                    opacity: 0.5,\n                    cursor: 'not-allowed'\n                  },\n                  onMouseOver: e => e.currentTarget.style.cursor = 'not-allowed',\n                  onMouseOut: e => e.currentTarget.style.cursor = 'default',\n                  title: \"You do not have permission to edit role permissions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-save mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 25\n                  }, this), \"Apply to All \", selectedRoleUserCount, \" User(s) with Role: \", selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.label]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleAccessManagement, \"FEhImaQ5npcb0bk+uMQBhRv1D4M=\");\n_c = RoleAccessManagement;\nexport default RoleAccessManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleAccessManagement\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","rolePermissions","jsxDEV","_jsxDEV","Fragment","_Fragment","RoleAccessManagement","_s","users","setUsers","loading","setLoading","selectedRole","setSelectedRole","selectAll","setSelectAll","formData","setFormData","permissions","submitting","setSubmitting","message","setMessage","messageType","setMessageType","user","role","availableRoles","setAvailableRoles","fetchRoles","fetchUsers","response","fetch","ok","data","json","map","value","name","label","replace","l","toUpperCase","description","error","availablePermissions","category","id","console","handleRoleSelect","e","roleValue","target","userWithRole","find","u","updateSelectAllStatus","handlePermissionChange","permissionId","newPermissions","prev","handleSelectAll","newSelectAll","forEach","perm","totalPermissions","enabledPermissions","getTotalEnabledPermissions","count","getTotalAvailablePermissions","reduce","total","length","handleSubmit","preventDefault","usersWithRole","filter","updatePromises","_id","method","headers","body","JSON","stringify","responses","Promise","all","allSuccessful","every","prevUsers","setTimeout","getUsersCountForRole","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedRoleData","r","selectedRoleUserCount","htmlFor","onChange","onSubmit","style","color","marginBottom","fontWeight","backgroundColor","border","borderRadius","padding","type","checked","permission","isChecked","onClick","canEditRoleAccess","disabled","opacity","cursor","onMouseOver","currentTarget","onMouseOut","title","_c","$RefreshReg$"],"sources":["B:/PortAuthProject/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { rolePermissions } from \"../../context/permissions\";\r\nimport './RoleAccessManagement.css';\r\n\r\nconst RoleAccessManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    permissions: {}\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const { user } = useContext(AuthContext);\r\n  const permissions = rolePermissions[user.role] || {};\r\n  // Available roles (fetched from backend)\r\n  const [availableRoles, setAvailableRoles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRoles();\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch roles from API\r\n  const fetchRoles = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/roles');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Map to match previous structure\r\n        setAvailableRoles(\r\n          (data.data || []).map(role => ({\r\n            value: role.name,\r\n            label: role.name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()),\r\n            description: ''\r\n          }))\r\n        );\r\n      } else {\r\n        setAvailableRoles([]);\r\n      }\r\n    } catch (error) {\r\n      setAvailableRoles([]);\r\n    }\r\n  };\r\n\r\n  // Available permissions list based on User model\r\n  const availablePermissions = [\r\n    { \r\n      category: 'users', \r\n      name: 'User Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Users', description: 'Add new users to the system' },\r\n        { id: 'read', name: 'View Users', description: 'View user information and lists' },\r\n        { id: 'update', name: 'Update Users', description: 'Edit user information and profiles' },\r\n        { id: 'delete', name: 'Delete Users', description: 'Remove users from the system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'attendance', \r\n      name: 'Attendance Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Attendance', description: 'Add attendance records' },\r\n        { id: 'read', name: 'View Attendance', description: 'View attendance records and reports' },\r\n        { id: 'update', name: 'Update Attendance', description: 'Edit attendance records' },\r\n        { id: 'delete', name: 'Delete Attendance', description: 'Remove attendance records' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'reports', \r\n      name: 'Reports Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Generate Reports', description: 'Create system reports' },\r\n        { id: 'read', name: 'View Reports', description: 'Access and view reports' },\r\n        { id: 'update', name: 'Update Reports', description: 'Modify report settings' },\r\n        { id: 'delete', name: 'Delete Reports', description: 'Remove reports from system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'divisions', \r\n      name: 'Division Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Divisions', description: 'Add new company divisions' },\r\n        { id: 'read', name: 'View Divisions', description: 'View division information' },\r\n        { id: 'update', name: 'Update Divisions', description: 'Edit division details' },\r\n        { id: 'delete', name: 'Delete Divisions', description: 'Remove divisions' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'settings', \r\n      name: 'System Settings', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Settings', description: 'Add new system configurations' },\r\n        { id: 'read', name: 'View Settings', description: 'Access system settings' },\r\n        { id: 'update', name: 'Update Settings', description: 'Modify system configurations' },\r\n        { id: 'delete', name: 'Delete Settings', description: 'Remove system settings' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch users from API\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsers(data.data || []);\r\n      } else {\r\n        console.error('Failed to fetch users');\r\n        setMessage('Failed to load users');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setMessage('Error loading users');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle role selection\r\n  const handleRoleSelect = (e) => {\r\n    const roleValue = e.target.value;\r\n    setSelectedRole(roleValue);\r\n    \r\n    if (roleValue) {\r\n      // Find a user with this role to get current permissions\r\n      const userWithRole = users.find(u => u.role === roleValue);\r\n      if (userWithRole) {\r\n        setFormData({\r\n          permissions: userWithRole.permissions || {}\r\n        });\r\n        updateSelectAllStatus(userWithRole.permissions || {});\r\n      } else {\r\n        // If no user with this role exists, start with empty permissions\r\n        setFormData({\r\n          permissions: {}\r\n        });\r\n        setSelectAll(false);\r\n      }\r\n    } else {\r\n      setFormData({\r\n        permissions: {}\r\n      });\r\n      setSelectAll(false);\r\n    }\r\n  };\r\n\r\n  // Handle permission checkbox changes\r\n  const handlePermissionChange = (category, permissionId) => {\r\n    const newPermissions = { ...formData.permissions };\r\n    \r\n    if (!newPermissions[category]) {\r\n      newPermissions[category] = {};\r\n    }\r\n    \r\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n    \r\n    updateSelectAllStatus(newPermissions);\r\n  };\r\n\r\n  // Handle select all toggle\r\n  const handleSelectAll = () => {\r\n    const newSelectAll = !selectAll;\r\n    setSelectAll(newSelectAll);\r\n    \r\n    const newPermissions = {};\r\n    \r\n    if (newSelectAll) {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = true;\r\n        });\r\n      });\r\n    } else {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = false;\r\n        });\r\n      });\r\n    }\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n  };\r\n\r\n  // Update select all status\r\n  const updateSelectAllStatus = (permissions) => {\r\n    let totalPermissions = 0;\r\n    let enabledPermissions = 0;\r\n    \r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        totalPermissions++;\r\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\r\n          enabledPermissions++;\r\n        }\r\n      });\r\n    });\r\n    \r\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\r\n  };\r\n\r\n  // Get total enabled permissions count\r\n  const getTotalEnabledPermissions = () => {\r\n    let count = 0;\r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  };\r\n\r\n  // Get total available permissions count\r\n  const getTotalAvailablePermissions = () => {\r\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedRole) {\r\n      setMessage('Please select a role first');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    \r\n    try {\r\n      // Get all users with the selected role\r\n      const usersWithRole = users.filter(user => user.role === selectedRole);\r\n      \r\n      if (usersWithRole.length === 0) {\r\n        setMessage('No users found with the selected role');\r\n        setMessageType('error');\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Update permissions for all users with this role\r\n      const updatePromises = usersWithRole.map(user => \r\n        fetch(`http://localhost:5000/api/users/${user._id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            permissions: formData.permissions\r\n          }),\r\n        })\r\n      );\r\n\r\n      const responses = await Promise.all(updatePromises);\r\n      \r\n      // Check if all updates were successful\r\n      const allSuccessful = responses.every(response => response.ok);\r\n      \r\n      if (allSuccessful) {\r\n        // Update the users in state\r\n        setUsers(prevUsers => \r\n          prevUsers.map(user => \r\n            user.role === selectedRole \r\n              ? { ...user, permissions: formData.permissions }\r\n              : user\r\n          )\r\n        );\r\n        \r\n        setMessage(`Permissions updated successfully for all ${usersWithRole.length} users with role: ${selectedRole}`);\r\n        setMessageType('success');\r\n        \r\n        // Auto-hide message after 5 seconds\r\n        setTimeout(() => {\r\n          setMessage('');\r\n          setMessageType('');\r\n        }, 5000);\r\n      } else {\r\n        setMessage('Some users could not be updated. Please try again.');\r\n        setMessageType('error');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating permissions:', error);\r\n      setMessage('Error updating role permissions. Please try again.');\r\n      setMessageType('error');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Get users count for selected role\r\n  const getUsersCountForRole = () => {\r\n    if (!selectedRole) return 0;\r\n    return users.filter(user => user.role === selectedRole).length;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"role-access-wrapper\">\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\r\n  const selectedRoleUserCount = getUsersCountForRole();\r\n\r\n  return (\r\n    <div className=\"role-access-wrapper\">\r\n      {/* Decorative Elements */}\r\n      <div className=\"decorative-elements\">\r\n        <div className=\"geometric-shape shape-1\"></div>\r\n        <div className=\"geometric-shape shape-2\"></div>\r\n        <div className=\"geometric-shape shape-3\"></div>\r\n        <div className=\"geometric-shape shape-4\"></div>\r\n      </div>\r\n\r\n      <div className=\"container-fluid px-4\">\r\n        <div className=\"main-card\">\r\n          <div className=\"card-header-custom\">\r\n            <div className=\"icon-wrapper-large\">\r\n              <i className=\"bi bi-shield-check\"></i>\r\n            </div>\r\n            <h1 className=\"page-title\">Role Access Management</h1>\r\n            <p className=\"page-subtitle\">Configure permissions for user roles - changes apply to all users with the selected role</p>\r\n          </div>\r\n          \r\n          <div className=\"card-body-custom\">\r\n            {/* Success/Error Messages */}\r\n            {message && (\r\n              <div className={`alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Stats Section */}\r\n            <div className=\"stats-section\">\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{availableRoles.length}</span>\r\n                <span className=\"stats-label\">Available Roles</span>\r\n              </div>\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{getTotalAvailablePermissions()}</span>\r\n                <span className=\"stats-label\">Available Permissions</span>\r\n              </div>\r\n              {selectedRole && (\r\n                <>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{selectedRoleUserCount}</span>\r\n                    <span className=\"stats-label\">Users with this Role</span>\r\n                  </div>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{getTotalEnabledPermissions()}</span>\r\n                    <span className=\"stats-label\">Granted Permissions</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Role Selection */}\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"role\" className=\"form-label-modern\">\r\n                <i className=\"bi bi-person-gear text-primary mr-2\"></i>Select Role to Manage\r\n              </label>\r\n              <select \r\n                name=\"role\" \r\n                id=\"role\" \r\n                className=\"form-control form-control-modern\" \r\n                value={selectedRole}\r\n                onChange={handleRoleSelect}\r\n              >\r\n                <option value=\"\">-- Choose a role to configure --</option>\r\n                {availableRoles.map(role => (\r\n                  <option key={role.value} value={role.value}>\r\n                    {role.label} - {role.description}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {selectedRole && (\r\n                <small className=\"text-muted mt-2 d-block\">\r\n                  <i className=\"bi bi-info-circle mr-1\"></i>\r\n                  This will update permissions for {selectedRoleUserCount} user(s) with the role: {selectedRoleData?.label}\r\n                </small>\r\n              )}\r\n            </div>\r\n\r\n            {/* Permissions Configuration */}\r\n            {selectedRole && (\r\n              <div className=\"form-section\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <h3 style={{ color: '#333', marginBottom: '20px', fontWeight: '600' }}>\r\n                    <i className=\"bi bi-shield-alt text-primary mr-2\"></i>\r\n                    Configure Access Permissions for Role: <span style={{ color: '#667eea' }}>{selectedRoleData?.label}</span>\r\n                  </h3>\r\n\r\n                  <div className=\"alert alert-info\" style={{ backgroundColor: '#e3f2fd', border: '1px solid #bbdefb', borderRadius: '6px', padding: '12px', marginBottom: '20px' }}>\r\n                    <i className=\"bi bi-info-circle text-primary mr-2\"></i>\r\n                    <strong>Note:</strong> Changes will be applied to all {selectedRoleUserCount} user(s) with the role \"{selectedRoleData?.label}\"\r\n                  </div>\r\n\r\n                  {/* Select All Section */}\r\n                  <div className=\"select-all-section\">\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      id=\"select-all\"\r\n                      checked={selectAll}\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                    <label htmlFor=\"select-all\">\r\n                      <i className=\"bi bi-check2-all mr-2\"></i>Select All Permissions\r\n                    </label>\r\n                    <span className=\"permission-counter\">\r\n                      {getTotalEnabledPermissions()}/{getTotalAvailablePermissions()} permissions selected\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Permissions Grid by Category */}\r\n                  {availablePermissions.map(category => (\r\n                    <div key={category.category} className=\"permission-category\">\r\n                      <h4 className=\"category-title\">\r\n                        <i className=\"bi bi-folder text-primary mr-2\"></i>\r\n                        {category.name}\r\n                      </h4>\r\n                      <div className=\"checkbox-grid\">\r\n                        {category.permissions.map(permission => {\r\n                          const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\r\n                          return (\r\n                            <div \r\n                              key={`${category.category}_${permission.id}`} \r\n                              className={`checkbox-item ${isChecked ? 'selected' : ''}`}\r\n                              onClick={() => handlePermissionChange(category.category, permission.id)}\r\n                            >\r\n                              <input \r\n                                type=\"checkbox\" \r\n                                checked={isChecked || false}\r\n                                onChange={() => handlePermissionChange(category.category, permission.id)}\r\n                                id={`perm_${category.category}_${permission.id}`}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                              <label htmlFor={`perm_${category.category}_${permission.id}`}>\r\n                                <div className=\"permission-title\">\r\n                                  <i className=\"bi bi-file-text text-muted mr-2\"></i>\r\n                                  {permission.name}\r\n                                </div>\r\n                                <div className=\"permission-description\">\r\n                                  {permission.description}\r\n                                </div>\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Submit Button */}\r\n                  <div className=\"text-center mt-4\">\r\n                    {permissions.canEditRoleAccess ? (\r\n                      <button \r\n                        type=\"submit\" \r\n                        className=\"btn-save-modern\"\r\n                        disabled={submitting}\r\n                      >\r\n                        {submitting ? (\r\n                          <>\r\n                            <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\r\n                              <span className=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                            Updating {selectedRoleUserCount} user(s)...\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <i className=\"bi bi-save mr-2\"></i>\r\n                            Apply to All {selectedRoleUserCount} User(s) with Role: {selectedRoleData?.label}\r\n                          </>\r\n                        )}\r\n                      </button>\r\n                    ) : (\r\n                      <button \r\n                        type=\"button\"\r\n                        className=\"btn-save-modern\"\r\n                        disabled\r\n                        style={{ opacity: 0.5, cursor: 'not-allowed' }}\r\n                        onMouseOver={e => e.currentTarget.style.cursor = 'not-allowed'}\r\n                        onMouseOut={e => e.currentTarget.style.cursor = 'default'}\r\n                        title=\"You do not have permission to edit role permissions\"\r\n                      >\r\n                        <i className=\"bi bi-save mr-2\"></i>\r\n                        Apply to All {selectedRoleUserCount} User(s) with Role: {selectedRoleData?.label}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading Overlay */}\r\n      {submitting && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}