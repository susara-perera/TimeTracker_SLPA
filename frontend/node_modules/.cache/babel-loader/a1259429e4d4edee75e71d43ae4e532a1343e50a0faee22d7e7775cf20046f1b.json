{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\RoleAccessManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RoleAccessManagement.css';\n\n// Mock roles data - moved outside component to avoid useEffect dependency issues\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockRoles = [{\n  _id: '1',\n  name: 'super_admin',\n  displayName: 'Super Admin',\n  description: 'Highest level access with all system permissions',\n  permissions: ['add_user', 'generate_report', 'manage_division', 'manage_section', 'role_access', 'settings'],\n  isSystem: true,\n  isActive: true,\n  createdAt: '2024-01-01'\n}, {\n  _id: '2',\n  name: 'administrator',\n  displayName: 'Administrator',\n  description: 'Administrative access with management capabilities',\n  permissions: ['add_user', 'generate_report', 'manage_division', 'manage_section', 'role_access'],\n  isSystem: true,\n  isActive: true,\n  createdAt: '2024-01-01'\n}, {\n  _id: '3',\n  name: 'administrative_clerk',\n  displayName: 'Administrative Clerk',\n  description: 'Administrative support with limited management access',\n  permissions: ['generate_report', 'manage_section'],\n  isSystem: false,\n  isActive: true,\n  createdAt: '2024-01-01'\n}, {\n  _id: '4',\n  name: 'clerk',\n  displayName: 'Clerk',\n  description: 'Basic clerical access for data entry and viewing',\n  permissions: ['generate_report'],\n  isSystem: false,\n  isActive: true,\n  createdAt: '2024-01-01'\n}];\nconst RoleAccessManagement = () => {\n  _s();\n  const [roles, setRoles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedRole, setSelectedRole] = useState('');\n  const [selectAll, setSelectAll] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    displayName: '',\n    description: '',\n    permissions: []\n  });\n  const [submitting, setSubmitting] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n\n  // Available permissions list\n  const availablePermissions = [{\n    id: 'all_access',\n    name: 'All Access',\n    description: 'Full system access and administration'\n  }, {\n    id: 'add_user',\n    name: 'Add User',\n    description: 'Create and add new users to the system'\n  }, {\n    id: 'generate_report',\n    name: 'Generate Report',\n    description: 'Create and generate system reports'\n  }, {\n    id: 'manage_division',\n    name: 'Manage Division',\n    description: 'Create, edit and manage company divisions'\n  }, {\n    id: 'manage_section',\n    name: 'Manage Section',\n    description: 'Create, edit and manage department sections'\n  }, {\n    id: 'role_access',\n    name: 'Role Access',\n    description: 'Manage user roles and access permissions'\n  }, {\n    id: 'settings',\n    name: 'Settings',\n    description: 'Access and configure system settings'\n  }];\n  useEffect(() => {\n    // Fetch roles data\n    const fetchData = async () => {\n      try {\n        setRoles(mockRoles);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching roles:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle role selection\n  const handleRoleSelect = e => {\n    const roleValue = e.target.value;\n    setSelectedRole(roleValue);\n    if (roleValue) {\n      const role = roles.find(r => r.name === roleValue);\n      if (role) {\n        setFormData(prev => ({\n          ...prev,\n          permissions: role.permissions || []\n        }));\n        updateSelectAllStatus(role.permissions || []);\n      }\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        permissions: []\n      }));\n      setSelectAll(false);\n    }\n  };\n\n  // Handle permission checkbox changes\n  const handlePermissionChange = permissionId => {\n    const newPermissions = formData.permissions.includes(permissionId) ? formData.permissions.filter(p => p !== permissionId) : [...formData.permissions, permissionId];\n    setFormData(prev => ({\n      ...prev,\n      permissions: newPermissions\n    }));\n    updateSelectAllStatus(newPermissions);\n  };\n\n  // Handle select all toggle\n  const handleSelectAll = () => {\n    const newSelectAll = !selectAll;\n    setSelectAll(newSelectAll);\n    if (newSelectAll) {\n      const allPermissionIds = availablePermissions.map(p => p.id);\n      setFormData(prev => ({\n        ...prev,\n        permissions: allPermissionIds\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        permissions: []\n      }));\n    }\n  };\n\n  // Update select all status\n  const updateSelectAllStatus = permissions => {\n    const allPermissionIds = availablePermissions.map(p => p.id);\n    setSelectAll(permissions.length === allPermissionIds.length && allPermissionIds.length > 0);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedRole) {\n      setMessage('Please select a role first');\n      setMessageType('error');\n      return;\n    }\n    setSubmitting(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Update the role in state\n      setRoles(prevRoles => prevRoles.map(role => role.name === selectedRole ? {\n        ...role,\n        permissions: formData.permissions,\n        updatedAt: new Date().toISOString()\n      } : role));\n      setMessage('Access control updated successfully!');\n      setMessageType('success');\n\n      // Auto-hide message after 5 seconds\n      setTimeout(() => {\n        setMessage('');\n        setMessageType('');\n      }, 5000);\n    } catch (error) {\n      console.error('Error updating permissions:', error);\n      setMessage('Error updating access control. Please try again.');\n      setMessageType('error');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"role-access-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n  const selectedRoleData = roles.find(r => r.name === selectedRole);\n  const currentPermissions = selectedRoleData ? selectedRoleData.permissions : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-access-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decorative-elements\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"geometric-shape shape-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header-custom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-wrapper-large\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"bi bi-shield-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"page-title\",\n            children: \"Role Access Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"page-subtitle\",\n            children: \"Configure user role permissions and access control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body-custom\",\n          children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-number\",\n                children: roles.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-label\",\n                children: \"Total Roles\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-number\",\n                children: availablePermissions.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-label\",\n                children: \"Available Permissions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-number\",\n                children: currentPermissions.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stats-label\",\n                children: \"Granted Permissions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              className: \"form-label-modern\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-person-gear text-primary mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), \"Select Role to Manage\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"role\",\n              id: \"role\",\n              className: \"form-control form-control-modern\",\n              value: selectedRole,\n              onChange: handleRoleSelect,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Choose a role to configure --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), roles.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role.name,\n                children: [role.displayName, \" (\", role.name, \")\"]\n              }, role._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  color: '#333',\n                  marginBottom: '20px',\n                  fontWeight: '600'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"bi bi-shield-alt text-primary mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this), \"Configure Access Permissions for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#667eea'\n                  },\n                  children: selectedRoleData === null || selectedRoleData === void 0 ? void 0 : selectedRoleData.displayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"select-all-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"select-all\",\n                  checked: selectAll,\n                  onChange: handleSelectAll\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"select-all\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-check2-all mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), \"Select All Permissions\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"permission-counter\",\n                  children: [formData.permissions.length, \"/\", availablePermissions.length, \" permissions selected\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"checkbox-grid\",\n                children: availablePermissions.map(permission => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `checkbox-item ${formData.permissions.includes(permission.id) ? 'selected' : ''}`,\n                  onClick: () => handlePermissionChange(permission.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: formData.permissions.includes(permission.id),\n                    onChange: () => handlePermissionChange(permission.id),\n                    id: `perm_${permission.id}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"checkmark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: `perm_${permission.id}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"permission-title\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"bi bi-file-text text-muted mr-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 29\n                      }, this), permission.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"permission-description\",\n                      children: permission.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this)]\n                }, permission.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mt-4\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn-save-modern\",\n                  disabled: submitting,\n                  children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"spinner-border spinner-border-sm mr-2\",\n                      role: \"status\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"visually-hidden\",\n                        children: \"Loading...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 338,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 27\n                    }, this), \"Saving...\"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"bi bi-save mr-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 27\n                    }, this), \"Save Access Configuration\"]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), submitting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleAccessManagement, \"flLOg1tcH5dy9zw8pah8g6I+fqc=\");\n_c = RoleAccessManagement;\nexport default RoleAccessManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleAccessManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","mockRoles","_id","name","displayName","description","permissions","isSystem","isActive","createdAt","RoleAccessManagement","_s","roles","setRoles","loading","setLoading","selectedRole","setSelectedRole","selectAll","setSelectAll","formData","setFormData","submitting","setSubmitting","message","setMessage","messageType","setMessageType","availablePermissions","id","fetchData","error","console","handleRoleSelect","e","roleValue","target","value","role","find","r","prev","updateSelectAllStatus","handlePermissionChange","permissionId","newPermissions","includes","filter","p","handleSelectAll","newSelectAll","allPermissionIds","map","length","handleSubmit","preventDefault","Promise","resolve","setTimeout","prevRoles","updatedAt","Date","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedRoleData","currentPermissions","htmlFor","onChange","onSubmit","style","color","marginBottom","fontWeight","type","checked","permission","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './RoleAccessManagement.css';\r\n\r\n// Mock roles data - moved outside component to avoid useEffect dependency issues\r\nconst mockRoles = [\r\n  {\r\n    _id: '1',\r\n    name: 'super_admin',\r\n    displayName: 'Super Admin',\r\n    description: 'Highest level access with all system permissions',\r\n    permissions: ['add_user', 'generate_report', 'manage_division', 'manage_section', 'role_access', 'settings'],\r\n    isSystem: true,\r\n    isActive: true,\r\n    createdAt: '2024-01-01'\r\n  },\r\n  {\r\n    _id: '2',\r\n    name: 'administrator',\r\n    displayName: 'Administrator',\r\n    description: 'Administrative access with management capabilities',\r\n    permissions: ['add_user', 'generate_report', 'manage_division', 'manage_section', 'role_access'],\r\n    isSystem: true,\r\n    isActive: true,\r\n    createdAt: '2024-01-01'\r\n  },\r\n  {\r\n    _id: '3',\r\n    name: 'administrative_clerk',\r\n    displayName: 'Administrative Clerk',\r\n    description: 'Administrative support with limited management access',\r\n    permissions: ['generate_report', 'manage_section'],\r\n    isSystem: false,\r\n    isActive: true,\r\n    createdAt: '2024-01-01'\r\n  },\r\n  {\r\n    _id: '4',\r\n    name: 'clerk',\r\n    displayName: 'Clerk',\r\n    description: 'Basic clerical access for data entry and viewing',\r\n    permissions: ['generate_report'],\r\n    isSystem: false,\r\n    isActive: true,\r\n    createdAt: '2024-01-01'\r\n  }\r\n];\r\n\r\nconst RoleAccessManagement = () => {\r\n  const [roles, setRoles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    displayName: '',\r\n    description: '',\r\n    permissions: []\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n\r\n  // Available permissions list\r\n  const availablePermissions = [\r\n    { id: 'all_access', name: 'All Access', description: 'Full system access and administration' },\r\n    { id: 'add_user', name: 'Add User', description: 'Create and add new users to the system' },\r\n    { id: 'generate_report', name: 'Generate Report', description: 'Create and generate system reports' },\r\n    { id: 'manage_division', name: 'Manage Division', description: 'Create, edit and manage company divisions' },\r\n    { id: 'manage_section', name: 'Manage Section', description: 'Create, edit and manage department sections' },\r\n    { id: 'role_access', name: 'Role Access', description: 'Manage user roles and access permissions' },\r\n    { id: 'settings', name: 'Settings', description: 'Access and configure system settings' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Fetch roles data\r\n    const fetchData = async () => {\r\n      try {\r\n        setRoles(mockRoles);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching roles:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle role selection\r\n  const handleRoleSelect = (e) => {\r\n    const roleValue = e.target.value;\r\n    setSelectedRole(roleValue);\r\n    \r\n    if (roleValue) {\r\n      const role = roles.find(r => r.name === roleValue);\r\n      if (role) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          permissions: role.permissions || []\r\n        }));\r\n        updateSelectAllStatus(role.permissions || []);\r\n      }\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        permissions: []\r\n      }));\r\n      setSelectAll(false);\r\n    }\r\n  };\r\n\r\n  // Handle permission checkbox changes\r\n  const handlePermissionChange = (permissionId) => {\r\n    const newPermissions = formData.permissions.includes(permissionId)\r\n      ? formData.permissions.filter(p => p !== permissionId)\r\n      : [...formData.permissions, permissionId];\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n    \r\n    updateSelectAllStatus(newPermissions);\r\n  };\r\n\r\n  // Handle select all toggle\r\n  const handleSelectAll = () => {\r\n    const newSelectAll = !selectAll;\r\n    setSelectAll(newSelectAll);\r\n    \r\n    if (newSelectAll) {\r\n      const allPermissionIds = availablePermissions.map(p => p.id);\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        permissions: allPermissionIds\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        permissions: []\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Update select all status\r\n  const updateSelectAllStatus = (permissions) => {\r\n    const allPermissionIds = availablePermissions.map(p => p.id);\r\n    setSelectAll(permissions.length === allPermissionIds.length && allPermissionIds.length > 0);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!selectedRole) {\r\n      setMessage('Please select a role first');\r\n      setMessageType('error');\r\n      return;\r\n    }\r\n\r\n    setSubmitting(true);\r\n    \r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Update the role in state\r\n      setRoles(prevRoles => \r\n        prevRoles.map(role => \r\n          role.name === selectedRole \r\n            ? { ...role, permissions: formData.permissions, updatedAt: new Date().toISOString() }\r\n            : role\r\n        )\r\n      );\r\n      \r\n      setMessage('Access control updated successfully!');\r\n      setMessageType('success');\r\n      \r\n      // Auto-hide message after 5 seconds\r\n      setTimeout(() => {\r\n        setMessage('');\r\n        setMessageType('');\r\n      }, 5000);\r\n      \r\n    } catch (error) {\r\n      console.error('Error updating permissions:', error);\r\n      setMessage('Error updating access control. Please try again.');\r\n      setMessageType('error');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"role-access-wrapper\">\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedRoleData = roles.find(r => r.name === selectedRole);\r\n  const currentPermissions = selectedRoleData ? selectedRoleData.permissions : [];\r\n\r\n  return (\r\n    <div className=\"role-access-wrapper\">\r\n      {/* Decorative Elements */}\r\n      <div className=\"decorative-elements\">\r\n        <div className=\"geometric-shape shape-1\"></div>\r\n        <div className=\"geometric-shape shape-2\"></div>\r\n        <div className=\"geometric-shape shape-3\"></div>\r\n        <div className=\"geometric-shape shape-4\"></div>\r\n      </div>\r\n\r\n      <div className=\"container-fluid px-4\">\r\n        <div className=\"main-card\">\r\n          <div className=\"card-header-custom\">\r\n            <div className=\"icon-wrapper-large\">\r\n              <i className=\"bi bi-shield-check\"></i>\r\n            </div>\r\n            <h1 className=\"page-title\">Role Access Management</h1>\r\n            <p className=\"page-subtitle\">Configure user role permissions and access control</p>\r\n          </div>\r\n          \r\n          <div className=\"card-body-custom\">\r\n            {/* Success/Error Messages */}\r\n            {message && (\r\n              <div className={`alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Stats Section */}\r\n            <div className=\"stats-section\">\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{roles.length}</span>\r\n                <span className=\"stats-label\">Total Roles</span>\r\n              </div>\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{availablePermissions.length}</span>\r\n                <span className=\"stats-label\">Available Permissions</span>\r\n              </div>\r\n              {selectedRole && (\r\n                <div className=\"stats-item\">\r\n                  <span className=\"stats-number\">{currentPermissions.length}</span>\r\n                  <span className=\"stats-label\">Granted Permissions</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Role Selection */}\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"role\" className=\"form-label-modern\">\r\n                <i className=\"bi bi-person-gear text-primary mr-2\"></i>Select Role to Manage\r\n              </label>\r\n              <select \r\n                name=\"role\" \r\n                id=\"role\" \r\n                className=\"form-control form-control-modern\" \r\n                value={selectedRole}\r\n                onChange={handleRoleSelect}\r\n              >\r\n                <option value=\"\">-- Choose a role to configure --</option>\r\n                {roles.map(role => (\r\n                  <option key={role._id} value={role.name}>\r\n                    {role.displayName} ({role.name})\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Permissions Configuration */}\r\n            {selectedRole && (\r\n              <div className=\"form-section\">\r\n                <form onSubmit={handleSubmit}>\r\n                  <h3 style={{ color: '#333', marginBottom: '20px', fontWeight: '600' }}>\r\n                    <i className=\"bi bi-shield-alt text-primary mr-2\"></i>\r\n                    Configure Access Permissions for: <span style={{ color: '#667eea' }}>{selectedRoleData?.displayName}</span>\r\n                  </h3>\r\n\r\n                  {/* Select All Section */}\r\n                  <div className=\"select-all-section\">\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      id=\"select-all\"\r\n                      checked={selectAll}\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                    <label htmlFor=\"select-all\">\r\n                      <i className=\"bi bi-check2-all mr-2\"></i>Select All Permissions\r\n                    </label>\r\n                    <span className=\"permission-counter\">\r\n                      {formData.permissions.length}/{availablePermissions.length} permissions selected\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Permissions Grid */}\r\n                  <div className=\"checkbox-grid\">\r\n                    {availablePermissions.map(permission => (\r\n                      <div \r\n                        key={permission.id} \r\n                        className={`checkbox-item ${formData.permissions.includes(permission.id) ? 'selected' : ''}`}\r\n                        onClick={() => handlePermissionChange(permission.id)}\r\n                      >\r\n                        <input \r\n                          type=\"checkbox\" \r\n                          checked={formData.permissions.includes(permission.id)}\r\n                          onChange={() => handlePermissionChange(permission.id)}\r\n                          id={`perm_${permission.id}`}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                        <label htmlFor={`perm_${permission.id}`}>\r\n                          <div className=\"permission-title\">\r\n                            <i className=\"bi bi-file-text text-muted mr-2\"></i>\r\n                            {permission.name}\r\n                          </div>\r\n                          <div className=\"permission-description\">\r\n                            {permission.description}\r\n                          </div>\r\n                        </label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Submit Button */}\r\n                  <div className=\"text-center mt-4\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"btn-save-modern\"\r\n                      disabled={submitting}\r\n                    >\r\n                      {submitting ? (\r\n                        <>\r\n                          <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                          </div>\r\n                          Saving...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <i className=\"bi bi-save mr-2\"></i>\r\n                          Save Access Configuration\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Loading Overlay */}\r\n      {submitting && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}