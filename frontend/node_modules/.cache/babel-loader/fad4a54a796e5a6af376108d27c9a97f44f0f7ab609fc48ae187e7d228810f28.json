{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Project\\\\af2\\\\TimeTracker_SLPA\\\\frontend\\\\src\\\\components\\\\dashboard\\\\RoleAccessManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { AuthContext } from '../../context/AuthContext';\nimport RoleManagement from './RoleManagement';\nimport './RoleAccessManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleAccessManagement = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const isSuperAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'super_admin';\n  const [roles, setRoles] = useState([]);\n  const [permissionCatalog, setPermissionCatalog] = useState([]);\n  const [selectedRole, setSelectedRole] = useState('');\n  const [formData, setFormData] = useState({});\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [showRoleManagement, setShowRoleManagement] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [tempPermissions, setTempPermissions] = useState([]);\n  useEffect(() => {\n    fetchRoles();\n    fetchPermissionCatalog();\n  }, []);\n  useEffect(() => {\n    if (selectedRole) {\n      const role = roles.find(r => r.value === selectedRole);\n      setFormData((role === null || role === void 0 ? void 0 : role.permissions) || {});\n    }\n  }, [selectedRole, roles]);\n\n  // Permission checks\n  const hasRoleReadPermission = () => {\n    var _user$permissions, _user$permissions$rol;\n    return isSuperAdmin || (user === null || user === void 0 ? void 0 : (_user$permissions = user.permissions) === null || _user$permissions === void 0 ? void 0 : (_user$permissions$rol = _user$permissions.roles) === null || _user$permissions$rol === void 0 ? void 0 : _user$permissions$rol.read);\n  };\n  const hasRoleUpdatePermission = () => {\n    var _user$permissions2, _user$permissions2$ro;\n    return isSuperAdmin || (user === null || user === void 0 ? void 0 : (_user$permissions2 = user.permissions) === null || _user$permissions2 === void 0 ? void 0 : (_user$permissions2$ro = _user$permissions2.roles) === null || _user$permissions2$ro === void 0 ? void 0 : _user$permissions2$ro.update);\n  };\n\n  // Fetch roles from backend\n  const fetchRoles = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/roles', {\n        headers: {\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setRoles(data.data || []);\n      } else {\n        console.error('Failed to fetch roles');\n      }\n    } catch (error) {\n      console.error('Error fetching roles:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch permission catalog\n  const fetchPermissionCatalog = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/permissions/catalog', {\n        headers: {\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setPermissionCatalog(data.data || []);\n      } else {\n        console.error('Failed to fetch permission catalog');\n      }\n    } catch (error) {\n      console.error('Error fetching permission catalog:', error);\n    }\n  };\n\n  // Stats\n  const getTotalAvailablePermissions = () => permissionCatalog.reduce((sum, cat) => {\n    var _cat$permissions;\n    return sum + (((_cat$permissions = cat.permissions) === null || _cat$permissions === void 0 ? void 0 : _cat$permissions.length) || 0);\n  }, 0);\n  const getTotalEnabledPermissions = () => Object.values(formData).flatMap(cat => Object.values(cat)).filter(Boolean).length;\n\n  // Handlers\n  const handleRoleSelect = e => {\n    setSelectedRole(e.target.value);\n  };\n  const handlePermissionChange = (category, id) => {\n    setFormData(prev => {\n      var _prev$category;\n      return {\n        ...prev,\n        [category]: {\n          ...prev[category],\n          [id]: !((_prev$category = prev[category]) !== null && _prev$category !== void 0 && _prev$category[id])\n        }\n      };\n    });\n  };\n  const handleSelectAll = () => {\n    const allEnabled = getTotalEnabledPermissions() !== getTotalAvailablePermissions();\n    const updated = {};\n    permissionCatalog.forEach(cat => {\n      updated[cat.category] = {};\n      cat.permissions.forEach(p => {\n        updated[cat.category][p.id] = allEnabled;\n      });\n    });\n    setFormData(updated);\n  };\n  const handlePermissionToggle = permission => {\n    setTempPermissions(prev => prev.includes(permission) ? prev.filter(p => p !== permission) : [...prev, permission]);\n  };\n  const handleSave = async () => {\n    setShowConfirm(false);\n    const roleObj = roles.find(r => r.value === selectedRole);\n    if (!roleObj) return;\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`http://localhost:5000/api/roles/${roleObj._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token ? {\n            'Authorization': `Bearer ${token}`\n          } : {})\n        },\n        body: JSON.stringify({\n          permissions: formData\n        })\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error('Error saving permissions:', error);\n    }\n    setShowModal(false);\n  };\n  const openConfirm = e => {\n    e.preventDefault();\n    setShowConfirm(true);\n  };\n  const openModal = () => {\n    setTempPermissions([]);\n    setShowModal(true);\n  };\n  const confirmAndSave = async () => {\n    await handleSave();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"role-access-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"form-header\",\n        children: \"Role Access Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group-modern\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label-modern\",\n          children: \"Select Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: selectedRole,\n          onChange: handleRoleChange,\n          className: \"form-control-modern\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Role --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), roles.map((role, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: role,\n            children: role\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group-modern\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label-modern\",\n          children: \"Assigned Permissions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assigned-permissions\",\n          children: assignedPermissions.length > 0 ? assignedPermissions.map((perm, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"permission-chip\",\n            children: perm\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: \"No permissions assigned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), selectedRole && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-save-modern\",\n          onClick: openModal,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-shield-lock me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), \" Manage Access\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-manage-roles\",\n          onClick: () => navigate('/dashboard/role-management'),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-gear\",\n            style: {\n              marginRight: '6px',\n              fontSize: '1.1rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), \"Manage Roles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      centered: true,\n      dialogClassName: \"custom-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Manage Access for \", selectedRole]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: permissions.map((perm, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permission-item\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: perm,\n            checked: tempPermissions.includes(perm),\n            onChange: () => handlePermissionToggle(perm)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          className: \"btn-professional\",\n          onClick: () => setShowModal(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"btn-save-modern\",\n          onClick: handleSave,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleAccessManagement, \"vmk1kqjqJOmvJCkVx3xmyZrP/R4=\");\n_c = RoleAccessManagement;\nexport default RoleAccessManagement;\nvar _c;\n$RefreshReg$(_c, \"RoleAccessManagement\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Modal","Button","Form","AuthContext","RoleManagement","jsxDEV","_jsxDEV","RoleAccessManagement","_s","user","isSuperAdmin","role","roles","setRoles","permissionCatalog","setPermissionCatalog","selectedRole","setSelectedRole","formData","setFormData","showSuccessModal","setShowSuccessModal","showConfirm","setShowConfirm","loading","setLoading","showRoleManagement","setShowRoleManagement","showModal","setShowModal","tempPermissions","setTempPermissions","fetchRoles","fetchPermissionCatalog","find","r","value","permissions","hasRoleReadPermission","_user$permissions","_user$permissions$rol","read","hasRoleUpdatePermission","_user$permissions2","_user$permissions2$ro","update","token","localStorage","getItem","response","fetch","headers","ok","data","json","console","error","getTotalAvailablePermissions","reduce","sum","cat","_cat$permissions","length","getTotalEnabledPermissions","Object","values","flatMap","filter","Boolean","handleRoleSelect","e","target","handlePermissionChange","category","id","prev","_prev$category","handleSelectAll","allEnabled","updated","forEach","p","handlePermissionToggle","permission","includes","handleSave","roleObj","_id","method","body","JSON","stringify","openConfirm","preventDefault","openModal","confirmAndSave","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Select","onChange","handleRoleChange","map","idx","assignedPermissions","perm","onClick","navigate","style","marginRight","fontSize","show","onHide","centered","dialogClassName","Header","closeButton","Title","Body","Check","type","label","checked","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport RoleManagement from './RoleManagement';\r\nimport './RoleAccessManagement.css';\r\n\r\nconst RoleAccessManagement = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const isSuperAdmin = user?.role === 'super_admin';\r\n\r\n  const [roles, setRoles] = useState([]);\r\n  const [permissionCatalog, setPermissionCatalog] = useState([]);\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [formData, setFormData] = useState({});\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showRoleManagement, setShowRoleManagement] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [tempPermissions, setTempPermissions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRoles();\r\n    fetchPermissionCatalog();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedRole) {\r\n      const role = roles.find(r => r.value === selectedRole);\r\n      setFormData(role?.permissions || {});\r\n    }\r\n  }, [selectedRole, roles]);\r\n\r\n  // Permission checks\r\n  const hasRoleReadPermission = () => isSuperAdmin || user?.permissions?.roles?.read;\r\n  const hasRoleUpdatePermission = () => isSuperAdmin || user?.permissions?.roles?.update;\r\n\r\n  // Fetch roles from backend\r\n  const fetchRoles = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/roles', {\r\n        headers: {\r\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setRoles(data.data || []);\r\n      } else {\r\n        console.error('Failed to fetch roles');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching roles:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch permission catalog\r\n  const fetchPermissionCatalog = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await fetch('http://localhost:5000/api/permissions/catalog', {\r\n        headers: {\r\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setPermissionCatalog(data.data || []);\r\n      } else {\r\n        console.error('Failed to fetch permission catalog');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching permission catalog:', error);\r\n    }\r\n  };\r\n\r\n  // Stats\r\n  const getTotalAvailablePermissions = () =>\r\n    permissionCatalog.reduce((sum, cat) => sum + (cat.permissions?.length || 0), 0);\r\n\r\n  const getTotalEnabledPermissions = () =>\r\n    Object.values(formData)\r\n      .flatMap(cat => Object.values(cat))\r\n      .filter(Boolean).length;\r\n\r\n  // Handlers\r\n  const handleRoleSelect = (e) => {\r\n    setSelectedRole(e.target.value);\r\n  };\r\n\r\n  const handlePermissionChange = (category, id) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [category]: {\r\n        ...prev[category],\r\n        [id]: !prev[category]?.[id]\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    const allEnabled = getTotalEnabledPermissions() !== getTotalAvailablePermissions();\r\n    const updated = {};\r\n    permissionCatalog.forEach(cat => {\r\n      updated[cat.category] = {};\r\n      cat.permissions.forEach(p => {\r\n        updated[cat.category][p.id] = allEnabled;\r\n      });\r\n    });\r\n    setFormData(updated);\r\n  };\r\n\r\n  const handlePermissionToggle = (permission) => {\r\n    setTempPermissions((prev) =>\r\n      prev.includes(permission)\r\n        ? prev.filter((p) => p !== permission)\r\n        : [...prev, permission]\r\n    );\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setShowConfirm(false);\r\n    const roleObj = roles.find(r => r.value === selectedRole);\r\n    if (!roleObj) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await fetch(`http://localhost:5000/api/roles/${roleObj._id}`, {\r\n        method: 'PUT',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n        },\r\n        body: JSON.stringify({ permissions: formData })\r\n      });\r\n      setShowSuccessModal(true);\r\n    } catch (error) {\r\n      console.error('Error saving permissions:', error);\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  const openConfirm = (e) => { \r\n    e.preventDefault(); \r\n    setShowConfirm(true); \r\n  };\r\n\r\n  const openModal = () => {\r\n    setTempPermissions([]);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const confirmAndSave = async () => {\r\n    await handleSave();\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"role-access-wrapper\">\r\n      <div className=\"main-card\">\r\n        <h3 className=\"form-header\">Role Access Management</h3>\r\n\r\n        {/* Select Role */}\r\n        <div className=\"form-group-modern\">\r\n          <label className=\"form-label-modern\">Select Role</label>\r\n          <Form.Select\r\n            value={selectedRole}\r\n            onChange={handleRoleChange}\r\n            className=\"form-control-modern\"\r\n          >\r\n            <option value=\"\">-- Select a Role --</option>\r\n            {roles.map((role, idx) => (\r\n              <option key={idx} value={role}>\r\n                {role}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        </div>\r\n\r\n        {/* Assigned Permissions */}\r\n        {selectedRole && (\r\n          <div className=\"form-group-modern\">\r\n            <label className=\"form-label-modern\">Assigned Permissions</label>\r\n            <div className=\"assigned-permissions\">\r\n              {assignedPermissions.length > 0 ? (\r\n                assignedPermissions.map((perm, idx) => (\r\n                  <span key={idx} className=\"permission-chip\">\r\n                    {perm}\r\n                  </span>\r\n                ))\r\n              ) : (\r\n                <span className=\"text-muted\">No permissions assigned</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Buttons */}\r\n        {selectedRole && (\r\n          <div className=\"form-actions\">\r\n            <Button className=\"btn-save-modern\" onClick={openModal}>\r\n              <i className=\"bi bi-shield-lock me-2\"></i> Manage Access\r\n            </Button>\r\n            <button\r\n              className=\"btn-manage-roles\"\r\n              onClick={() => navigate('/dashboard/role-management')}\r\n            >\r\n              <i\r\n                className=\"bi bi-gear\"\r\n                style={{ marginRight: '6px', fontSize: '1.1rem' }}\r\n              ></i>\r\n              Manage Roles\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      <Modal\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        centered\r\n        dialogClassName=\"custom-modal\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Manage Access for {selectedRole}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {permissions.map((perm, idx) => (\r\n            <div key={idx} className=\"permission-item\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label={perm}\r\n                checked={tempPermissions.includes(perm)}\r\n                onChange={() => handlePermissionToggle(perm)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"btn-professional\"\r\n            onClick={() => setShowModal(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            className=\"btn-save-modern\"\r\n            onClick={handleSave}\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}