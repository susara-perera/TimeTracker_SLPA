{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{AuthContext}from'../../context/AuthContext';import'./RoleAccessManagement.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RoleAccessManagement=()=>{const[users,setUsers]=useState([]);const[loading,setLoading]=useState(true);const[selectedRole,setSelectedRole]=useState('');const[selectedRoleId,setSelectedRoleId]=useState('');const[selectAll,setSelectAll]=useState(false);const[formData,setFormData]=useState({permissions:{}});const[submitting,setSubmitting]=useState(false);const[message,setMessage]=useState('');const[messageType,setMessageType]=useState('');const[showConfirm,setShowConfirm]=useState(false);const[toastVisible,setToastVisible]=useState(false);const[showSuccessModal,setShowSuccessModal]=useState(false);const[successDetails,setSuccessDetails]=useState({});const{user}=useContext(AuthContext);const isSuperAdmin=(user===null||user===void 0?void 0:user.role)==='super_admin';// Add function to check if user has roles.read permission\nconst hasRoleReadPermission=()=>{var _user$permissions,_user$permissions$rol;if(isSuperAdmin)return true;// Super admin always has access\nreturn(user===null||user===void 0?void 0:(_user$permissions=user.permissions)===null||_user$permissions===void 0?void 0:(_user$permissions$rol=_user$permissions.roles)===null||_user$permissions$rol===void 0?void 0:_user$permissions$rol.read)===true;};// Add function to check if user has roles.update permission\nconst hasRoleUpdatePermission=()=>{var _user$permissions2,_user$permissions2$ro;if(isSuperAdmin)return true;// Super admin always has access\nreturn(user===null||user===void 0?void 0:(_user$permissions2=user.permissions)===null||_user$permissions2===void 0?void 0:(_user$permissions2$ro=_user$permissions2.roles)===null||_user$permissions2$ro===void 0?void 0:_user$permissions2$ro.update)===true;};// Add function to check if user has rolesManage.read permission\nconst hasRoleManageReadPermission=()=>{var _user$permissions3,_user$permissions3$ro;if(isSuperAdmin)return true;// Super admin always has access\nreturn(user===null||user===void 0?void 0:(_user$permissions3=user.permissions)===null||_user$permissions3===void 0?void 0:(_user$permissions3$ro=_user$permissions3.rolesManage)===null||_user$permissions3$ro===void 0?void 0:_user$permissions3$ro.read)===true;};// Show professional success modal for permission updates\nconst showPermissionSuccessModal=(roleData,userCount,permissionCount)=>{setSuccessDetails({roleName:(roleData===null||roleData===void 0?void 0:roleData.label)||'Unknown Role',userCount:userCount||0,permissionCount:permissionCount||0,timestamp:new Date().toLocaleString()});setShowSuccessModal(true);};// Available roles (moved to state so runtime additions are possible)\nconst[availableRoles,setAvailableRoles]=useState([{value:'super_admin',label:'Super Admin',description:'Highest level system administrator'},{value:'admin',label:'Administrator',description:'System administrator with management rights'},{value:'administrative_clerk',label:'Administrative Clerk',description:'Administrative support staff'},{value:'clerk',label:'Clerk',description:'General office clerk'},{value:'employee',label:'Employee',description:'Regular system user'}]);// Available permissions list based on User model\nconst availablePermissions=[{category:'users',name:'User Management',permissions:[{id:'create',name:'Create Users',description:'Add new users to the system'},{id:'read',name:'View Users',description:'View user information and lists'},{id:'update',name:'Update Users',description:'Edit user information and profiles'},{id:'delete',name:'Delete Users',description:'Remove users from the system'}]},{category:'attendance',name:'Attendance Management',permissions:[{id:'create',name:'Create Attendance',description:'Add attendance records'},{id:'read',name:'View Attendance',description:'View attendance records and reports'},{id:'update',name:'Update Attendance',description:'Edit attendance records'},{id:'delete',name:'Delete Attendance',description:'Remove attendance records'}]},{category:'reports',name:'Reports Management',permissions:[{id:'create',name:'Generate Reports',description:'Create system reports'},{id:'read',name:'View Reports',description:'Access and view reports'}]},{category:'divisions',name:'Division Management',permissions:[{id:'create',name:'Create Divisions',description:'Add new company divisions'},{id:'read',name:'View Divisions',description:'View division information'},{id:'update',name:'Update Divisions',description:'Edit division details'},{id:'delete',name:'Delete Divisions',description:'Remove divisions'}]},{category:'sections',name:'Section Management',permissions:[{id:'create',name:'Create Sections',description:'Add new sections within divisions'},{id:'read',name:'View Sections',description:'View section information and lists'},{id:'update',name:'Update Sections',description:'Edit section details and assignments'},{id:'delete',name:'Delete Sections',description:'Remove sections from divisions'}]},{category:'roles',name:'Role & Permission Management',permissions:[{id:'read',name:'View Roles & Permissions',description:'Access role and permission management pages'},{id:'update',name:'Update Role Permissions',description:'Modify permissions assigned to roles'}]},{category:'rolesManage',name:'Roles Management',permissions:[{id:'create',name:'Create Roles',description:'Add new user roles to the system'},{id:'read',name:'View Roles & Permissions',description:'Access roles and permissions management pages'},{id:'update',name:'Update Role Permissions',description:'Modify roles'},{id:'delete',name:'Delete Roles',description:'Remove roles '}]},{category:'settings',name:'System Settings',permissions:[{id:'create',name:'Create Settings',description:'Add new system configurations'},{id:'read',name:'View Settings',description:'Access system settings'},{id:'update',name:'Update Settings',description:'Modify system configurations'},{id:'delete',name:'Delete Settings',description:'Remove system settings'}]}];useEffect(()=>{fetchUsers();// Load roles from backend\n(async()=>{try{const token=localStorage.getItem('token');const res=await fetch('http://localhost:5000/api/roles',{headers:{'Content-Type':'application/json',...(token?{'Authorization':`Bearer ${token}`}:{})}});if(res.ok){const result=await res.json();if(Array.isArray(result.data)&&result.data.length){// include the database id so we can fetch role permissions\nsetAvailableRoles(result.data.map(r=>({id:r._id,value:r.value,label:r.label,description:r.description||''})));}}else{console.warn('Failed to fetch roles from backend, using defaults');}}catch(err){console.warn('Error fetching roles:',err);}})();// Listen for roles added via other components\nconst handler=e=>{const payload=e===null||e===void 0?void 0:e.detail;if(payload&&payload.value&&payload.label){// Avoid duplicates\nsetAvailableRoles(prev=>{if(prev.find(r=>r.value===payload.value))return prev;return[...prev,{value:payload.value,label:payload.label,description:''}];});}};window.addEventListener('roleAdded',handler);return()=>window.removeEventListener('roleAdded',handler);},[]);// Fetch users from API\nconst fetchUsers=async()=>{try{const response=await fetch('http://localhost:5000/api/users');if(response.ok){const data=await response.json();setUsers(data.data||[]);}else{console.error('Failed to fetch users');setMessage('Failed to load users');setMessageType('error');}}catch(error){console.error('Error fetching users:',error);setMessage('Error loading users');setMessageType('error');}finally{setLoading(false);}};// Handle role selection\nconst handleRoleSelect=e=>{const roleValue=e.target.value;setSelectedRole(roleValue);if(roleValue){// Find available role metadata (contains id)\nconst roleMeta=availableRoles.find(r=>r.value===roleValue);const roleId=roleMeta===null||roleMeta===void 0?void 0:roleMeta.id;setSelectedRoleId(roleId||'');if(roleId){(async()=>{try{const token=localStorage.getItem('token');const res=await fetch(`http://localhost:5000/api/roles/${roleId}`,{headers:{'Content-Type':'application/json',...(token?{'Authorization':`Bearer ${token}`}:{})}});if(res.ok){const result=await res.json();const roleDoc=result.data;setFormData({permissions:roleDoc.permissions||{}});updateSelectAllStatus(roleDoc.permissions||{});}else{// fallback to user-based permissions if role doc cannot be fetched\nconst userWithRole=users.find(u=>u.role===roleValue);setFormData({permissions:(userWithRole===null||userWithRole===void 0?void 0:userWithRole.permissions)||{}});updateSelectAllStatus((userWithRole===null||userWithRole===void 0?void 0:userWithRole.permissions)||{});}}catch(err){console.warn('Error fetching role document:',err);const userWithRole=users.find(u=>u.role===roleValue);setFormData({permissions:(userWithRole===null||userWithRole===void 0?void 0:userWithRole.permissions)||{}});updateSelectAllStatus((userWithRole===null||userWithRole===void 0?void 0:userWithRole.permissions)||{});}})();}else{// If no role id available, fallback to user-based permissions\nconst userWithRole=users.find(u=>u.role===roleValue);setFormData({permissions:(userWithRole===null||userWithRole===void 0?void 0:userWithRole.permissions)||{}});updateSelectAllStatus((userWithRole===null||userWithRole===void 0?void 0:userWithRole.permissions)||{});}}else{setFormData({permissions:{}});setSelectAll(false);}};// Handle permission checkbox changes\nconst handlePermissionChange=(category,permissionId)=>{if(!hasRoleUpdatePermission())return;// prevent users without roles.update from making changes\nconst newPermissions={...formData.permissions};if(!newPermissions[category]){newPermissions[category]={};}newPermissions[category][permissionId]=!newPermissions[category][permissionId];setFormData(prev=>({...prev,permissions:newPermissions}));updateSelectAllStatus(newPermissions);};// Handle select all toggle\nconst handleSelectAll=()=>{if(!hasRoleUpdatePermission())return;// prevent users without roles.update from making changes\nconst newSelectAll=!selectAll;setSelectAll(newSelectAll);const newPermissions={};if(newSelectAll){availablePermissions.forEach(category=>{newPermissions[category.category]={};category.permissions.forEach(perm=>{newPermissions[category.category][perm.id]=true;});});}else{availablePermissions.forEach(category=>{newPermissions[category.category]={};category.permissions.forEach(perm=>{newPermissions[category.category][perm.id]=false;});});}setFormData(prev=>({...prev,permissions:newPermissions}));};// Update select all status\nconst updateSelectAllStatus=permissions=>{let totalPermissions=0;let enabledPermissions=0;availablePermissions.forEach(category=>{category.permissions.forEach(perm=>{totalPermissions++;if(permissions[category.category]&&permissions[category.category][perm.id]){enabledPermissions++;}});});setSelectAll(enabledPermissions===totalPermissions&&totalPermissions>0);};// Get total enabled permissions count\nconst getTotalEnabledPermissions=()=>{let count=0;availablePermissions.forEach(category=>{category.permissions.forEach(perm=>{if(formData.permissions[category.category]&&formData.permissions[category.category][perm.id]){count++;}});});return count;};// Get total available permissions count\nconst getTotalAvailablePermissions=()=>{return availablePermissions.reduce((total,category)=>total+category.permissions.length,0);};// Show confirmation modal instead of immediate submit\nconst openConfirm=e=>{e.preventDefault();if(!hasRoleUpdatePermission()){setMessage('You do not have permission to modify role permissions. The \"Update Role Permissions\" access is required.');setMessageType('error');setToastVisible(true);setTimeout(()=>setToastVisible(false),4000);return;}if(!selectedRole){setMessage('Please select a role first');setMessageType('error');setToastVisible(true);setTimeout(()=>setToastVisible(false),4000);return;}setShowConfirm(true);};// Confirm and perform save: persist to role doc then update users\nconst confirmAndSave=async()=>{setShowConfirm(false);setSubmitting(true);try{// Persist permissions to role document (if we have an id)\nconst token=localStorage.getItem('token');let roleSaved=false;let savedRoleResponse=null;if(selectedRoleId){const res=await fetch(`http://localhost:5000/api/permissions/roles/${selectedRoleId}`,{method:'PUT',headers:{'Content-Type':'application/json',...(token?{'Authorization':`Bearer ${token}`}:{})},body:JSON.stringify({permissions:formData.permissions})});const resJson=await res.json().catch(()=>({}));if(!res.ok){// include server message if available\nthrow new Error(resJson.message||'Failed to save role permissions');}roleSaved=true;savedRoleResponse=resJson.data||null;// Update local formData with authoritative permissions returned (if any)\nif(savedRoleResponse&&savedRoleResponse.permissions){setFormData({permissions:savedRoleResponse.permissions});}}// Now update users with the selected role\nconst usersWithRole=users.filter(u=>u.role===selectedRole);if(usersWithRole.length===0){// If we saved the role document, treat that as a successful save even if no users exist for the role\nif(roleSaved){const permissionCount=getTotalEnabledPermissions();// Show professional success modal for role permissions saved\nshowPermissionSuccessModal(selectedRoleData,0,permissionCount);setMessage(`Role permissions saved successfully. No users found with role ${selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label}`);setMessageType('success');setToastVisible(true);setTimeout(()=>setToastVisible(false),4000);setTimeout(()=>{setMessage('');setMessageType('');},5000);setSubmitting(false);return;}setMessage('No users found with the selected role');setMessageType('error');setToastVisible(true);setTimeout(()=>setToastVisible(false),4000);setSubmitting(false);return;}// Use auth token for user updates as well (backend typically requires auth)\nconst updatePromises=usersWithRole.map(user=>fetch(`http://localhost:5000/api/users/${user._id}`,{method:'PUT',headers:{'Content-Type':'application/json',...(token?{'Authorization':`Bearer ${token}`}:{})},body:JSON.stringify({permissions:formData.permissions})}).then(async r=>({ok:r.ok,status:r.status,body:await r.json().catch(()=>({})),userId:user._id})));const results=await Promise.all(updatePromises);const failed=results.filter(r=>!r.ok);if(failed.length===0){setUsers(prevUsers=>prevUsers.map(u=>u.role===selectedRole?{...u,permissions:formData.permissions}:u));// Calculate permission count\nconst permissionCount=getTotalEnabledPermissions();// Show professional success modal\nshowPermissionSuccessModal(selectedRoleData,usersWithRole.length,permissionCount);// Also set the regular message for backup\nsetMessage(`Permissions updated successfully for ${usersWithRole.length} user(s)`);setMessageType('success');setToastVisible(true);console.log('RoleAccessManagement: permissions updated successfully for users',usersWithRole.map(u=>u._id));setTimeout(()=>setToastVisible(false),4000);// Auto-hide message area too\nsetTimeout(()=>{setMessage('');setMessageType('');},5000);// Notify the app that permissions have changed so current sessions can refresh\ntry{window.dispatchEvent(new CustomEvent('permissionsChanged',{detail:{role:selectedRole}}));}catch(e){/* ignore */}}else{// Build an informative message\nconst failedIds=failed.map(f=>f.userId).slice(0,5);// collect server messages from failed responses\nconst serverMsgs=failed.map(f=>f.body&&f.body.message?`${f.userId}: ${f.body.message}`:`${f.userId}: status ${f.status}`).slice(0,5);setMessage(`Updated ${usersWithRole.length-failed.length}/${usersWithRole.length} users. Failed for: ${failedIds.join(', ')}${failed.length>5?'...':''}`);setMessageType('error');setToastVisible(true);setTimeout(()=>setToastVisible(false),7000);console.warn('RoleAccessManagement: some user updates failed',failed);try{window.alert(`Updated ${usersWithRole.length-failed.length}/${usersWithRole.length} users. Some updates failed.\\nDetails:\\n${serverMsgs.join('\\n')}`);}catch(e){}// Even on partial failure, notify app (some users may have new permissions)\ntry{window.dispatchEvent(new CustomEvent('permissionsChanged',{detail:{role:selectedRole}}));}catch(e){/* ignore */}}}catch(err){console.error('Error saving permissions:',err);setMessage(err.message||'Error updating role permissions');setMessageType('error');setToastVisible(true);setTimeout(()=>setToastVisible(false),4000);}finally{setSubmitting(false);}};// Get users count for selected role\nconst getUsersCountForRole=()=>{if(!selectedRole)return 0;return users.filter(user=>user.role===selectedRole).length;};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"role-access-wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"})})});}const selectedRoleData=availableRoles.find(r=>r.value===selectedRole);const selectedRoleUserCount=getUsersCountForRole();return/*#__PURE__*/_jsxs(\"div\",{className:\"role-access-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"decorative-elements\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-3\"}),/*#__PURE__*/_jsx(\"div\",{className:\"geometric-shape shape-4\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid px-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header-custom\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",style:{display:'flex',justifyContent:'space-between',alignItems:'center',width:'100%'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-text\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"icon-wrapper-large\",children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-shield-check\"})}),/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Role Access Management\"}),/*#__PURE__*/_jsx(\"p\",{className:\"page-subtitle\",children:\"Configure permissions for user roles - changes apply to all users with the selected role\"})]}),hasRoleReadPermission()&&/*#__PURE__*/_jsxs(\"button\",{className:\"btn-professional btn-secondary\",onClick:()=>{if(hasRoleManageReadPermission()){window.dispatchEvent(new CustomEvent('navigateTo',{detail:'role-management'}));}else{// Show error message when no rolesManage.read permission\nsetMessage('You do not have permission to access Role Management. Contact a Super Admin for access.');setMessageType('error');setToastVisible(true);setTimeout(()=>setToastVisible(false),4000);}},title:hasRoleManageReadPermission()?\"Manage Roles\":\"You need 'rolesManage.read' permission to access Role Management\",style:{padding:'10px 16px',fontSize:'14px',cursor:hasRoleManageReadPermission()?'pointer':'not-allowed',opacity:hasRoleManageReadPermission()?1:0.7},children:[/*#__PURE__*/_jsx(\"i\",{className:`bi ${hasRoleManageReadPermission()?'bi-gear':'bi-lock'}`}),\"Manage Roles\",!hasRoleManageReadPermission()&&/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-exclamation-triangle ml-1\",style:{fontSize:'12px'}})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body-custom\",children:[toastVisible&&message&&/*#__PURE__*/_jsxs(\"div\",{className:`toast-popup ${messageType==='success'?'toast-success':'toast-error'}`,children:[/*#__PURE__*/_jsx(\"i\",{className:`bi ${messageType==='success'?'bi-check-circle':'bi-exclamation-circle'} mr-2`}),message]}),message&&!toastVisible&&/*#__PURE__*/_jsxs(\"div\",{className:`alert ${messageType==='success'?'alert-success-modern':'alert-error-modern'}`,children:[/*#__PURE__*/_jsx(\"i\",{className:`bi ${messageType==='success'?'bi-check-circle':'bi-exclamation-circle'} mr-2`}),message]}),!hasRoleReadPermission()&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning mt-3\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-lock-fill mr-2\"}),\"You do not have permission to view roles and permissions. The \\\"View Roles & Permissions\\\" access is required to use this feature.\"]}),hasRoleReadPermission()&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:availableRoles.length}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Available Roles\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:getTotalAvailablePermissions()}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Available Permissions\"})]}),selectedRole&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:selectedRoleUserCount}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Users with this Role\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stats-number\",children:getTotalEnabledPermissions()}),/*#__PURE__*/_jsx(\"span\",{className:\"stats-label\",children:\"Granted Permissions\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"role\",className:\"form-label-modern\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-person-gear text-primary mr-2\"}),\"Select Role to Manage\"]}),/*#__PURE__*/_jsxs(\"select\",{name:\"role\",id:\"role\",className:\"form-control form-control-modern\",value:selectedRole,onChange:handleRoleSelect,disabled:!hasRoleUpdatePermission(),title:!hasRoleUpdatePermission()?'You need \"Update Role Permissions\" access to change role selection':'',children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Choose a role to configure --\"}),availableRoles.map(role=>/*#__PURE__*/_jsxs(\"option\",{value:role.value,children:[role.label,\" - \",role.description]},role.value))]}),selectedRole&&/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted mt-2 d-block\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-info-circle mr-1\"}),\"This will update permissions for \",selectedRoleUserCount,\" user(s) with the role: \",selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label]}),!hasRoleUpdatePermission()&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-warning mt-3\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-lock-fill mr-2\"}),\"You have view-only access. To modify role permissions, you need the \\\"Update Role Permissions\\\" access.\"]})]}),selectedRole&&/*#__PURE__*/_jsx(\"div\",{className:\"form-section\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:openConfirm,children:[/*#__PURE__*/_jsxs(\"h3\",{style:{color:'#333',marginBottom:'20px',fontWeight:'600'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-shield-alt text-primary mr-2\"}),\"Configure Access Permissions for Role: \",/*#__PURE__*/_jsx(\"span\",{style:{color:'#667eea'},children:selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-info\",style:{backgroundColor:'#e3f2fd',border:'1px solid #bbdefb',borderRadius:'6px',padding:'12px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-info-circle text-primary mr-2\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" Changes will be applied to all \",selectedRoleUserCount,\" user(s) with the role \\\"\",selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label,\"\\\"\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"select-all-section\",style:{opacity:hasRoleUpdatePermission()?1:0.6},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"select-all\",checked:selectAll,onChange:handleSelectAll,disabled:!hasRoleUpdatePermission()}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"select-all\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check2-all mr-2\"}),\"Select All Permissions\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"permission-counter\",children:[getTotalEnabledPermissions(),\"/\",getTotalAvailablePermissions(),\" permissions selected\"]})]}),availablePermissions.map(category=>/*#__PURE__*/_jsxs(\"div\",{className:\"permission-category\",style:{opacity:hasRoleUpdatePermission()?1:0.6},children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"category-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-folder text-primary mr-2\"}),category.name,!hasRoleUpdatePermission()&&/*#__PURE__*/_jsxs(\"span\",{className:\"badge badge-secondary ml-2\",style:{fontSize:'10px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-eye\"}),\" View Only\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checkbox-grid\",children:category.permissions.map(permission=>{const isChecked=formData.permissions[category.category]&&formData.permissions[category.category][permission.id];return/*#__PURE__*/_jsxs(\"div\",{className:`checkbox-item ${isChecked?'selected':''} ${!hasRoleUpdatePermission()?'disabled':''}`,onClick:()=>hasRoleUpdatePermission()&&handlePermissionChange(category.category,permission.id),style:{cursor:hasRoleUpdatePermission()?'pointer':'not-allowed',opacity:hasRoleUpdatePermission()?1:0.7},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isChecked||false,onChange:()=>handlePermissionChange(category.category,permission.id),id:`perm_${category.category}_${permission.id}`,disabled:!hasRoleUpdatePermission()}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),/*#__PURE__*/_jsxs(\"label\",{htmlFor:`perm_${category.category}_${permission.id}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"permission-title\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-file-text text-muted mr-2\"}),permission.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"permission-description\",children:permission.description})]})]},`${category.category}_${permission.id}`);})})]},category.category)),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-save-modern\",disabled:submitting||!hasRoleUpdatePermission(),title:!hasRoleUpdatePermission()?'You need \"Update Role Permissions\" access to apply changes':'',onClick:openConfirm,children:submitting?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner-border spinner-border-sm mr-2\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:\"Loading...\"})}),\"Updating \",selectedRoleUserCount,\" user(s)...\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-save mr-2\"}),\"Apply to All \",selectedRoleUserCount,\" User(s) with Role: \",selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label]})})})]})})]})]})]})}),submitting&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"})}),showConfirm&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:()=>setShowConfirm(false),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content confirm-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-header\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Confirm Permission Changes\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"You're about to apply the selected permissions to \",/*#__PURE__*/_jsx(\"strong\",{children:selectedRoleUserCount}),\" user(s) with the role \",/*#__PURE__*/_jsx(\"strong\",{children:selectedRoleData===null||selectedRoleData===void 0?void 0:selectedRoleData.label}),\".\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"This action will update both the role's permission document and the users' effective permissions. Are you sure you want to continue?\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-footer\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-professional btn-secondary\",onClick:()=>setShowConfirm(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-professional btn-success\",onClick:confirmAndSave,children:\"Yes, apply changes\"})]})]})}),showSuccessModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",style:{backgroundColor:'rgba(0, 0, 0, 0.6)',zIndex:10000},children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),style:{maxWidth:'600px',background:'linear-gradient(135deg, #ffffff, #f8f9fa)',border:'2px solid #28a745',borderRadius:'12px',boxShadow:'0 15px 35px rgba(40, 167, 69, 0.2)',animation:'fadeInUp 0.3s ease-out'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #28a745, #20c997)',color:'white',padding:'25px 30px',borderRadius:'10px 10px 0 0',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'48px',marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-shield-check\"})}),/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,fontWeight:'bold',fontSize:'24px'},children:\"Permission Update Completed\"}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'5px 0 0 0',opacity:0.9,fontSize:'14px'},children:\"System Access Control Updated Successfully\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:'30px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f8f9fa',border:'1px solid #e9ecef',borderRadius:'8px',padding:'20px',marginBottom:'25px'},children:[/*#__PURE__*/_jsxs(\"h4\",{style:{color:'#495057',marginBottom:'15px',fontSize:'18px',fontWeight:'600'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-info-circle\",style:{color:'#28a745',marginRight:'8px'}}),\"Update Summary\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#6c757d',fontSize:'14px'},children:\"Role Updated:\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#28a745'},children:successDetails.roleName})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#6c757d',fontSize:'14px'},children:\"Users Affected:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#28a745'},children:[successDetails.userCount,\" \",successDetails.userCount===1?'User':'Users']})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#6c757d',fontSize:'14px'},children:\"Permissions Granted:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'16px',fontWeight:'bold',color:'#28a745'},children:[successDetails.permissionCount,\" Permissions\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{style:{color:'#6c757d',fontSize:'14px'},children:\"Updated At:\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'14px',color:'#495057'},children:successDetails.timestamp})]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{background:'#d4edda',border:'1px solid #c3e6cb',borderRadius:'8px',padding:'15px',marginBottom:'25px'},children:/*#__PURE__*/_jsxs(\"p\",{style:{margin:0,color:'#155724',fontSize:'14px',lineHeight:'1.5'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check-circle-fill\",style:{marginRight:'8px'}}),/*#__PURE__*/_jsx(\"strong\",{children:\"All permission changes have been successfully applied to the system.\"}),successDetails.userCount>0&&/*#__PURE__*/_jsx(\"span\",{children:\" Affected users will see the updated permissions on their next login or page refresh.\"})]})}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center'},children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn-professional btn-success\",onClick:()=>setShowSuccessModal(false),style:{padding:'12px 40px',fontSize:'16px',fontWeight:'bold',minWidth:'150px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-check2-circle\"}),\" Acknowledged\"]})})]})]})})]});};export default RoleAccessManagement;","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RoleAccessManagement","users","setUsers","loading","setLoading","selectedRole","setSelectedRole","selectedRoleId","setSelectedRoleId","selectAll","setSelectAll","formData","setFormData","permissions","submitting","setSubmitting","message","setMessage","messageType","setMessageType","showConfirm","setShowConfirm","toastVisible","setToastVisible","showSuccessModal","setShowSuccessModal","successDetails","setSuccessDetails","user","isSuperAdmin","role","hasRoleReadPermission","_user$permissions","_user$permissions$rol","roles","read","hasRoleUpdatePermission","_user$permissions2","_user$permissions2$ro","update","hasRoleManageReadPermission","_user$permissions3","_user$permissions3$ro","rolesManage","showPermissionSuccessModal","roleData","userCount","permissionCount","roleName","label","timestamp","Date","toLocaleString","availableRoles","setAvailableRoles","value","description","availablePermissions","category","name","id","fetchUsers","token","localStorage","getItem","res","fetch","headers","ok","result","json","Array","isArray","data","length","map","r","_id","console","warn","err","handler","e","payload","detail","prev","find","window","addEventListener","removeEventListener","response","error","handleRoleSelect","roleValue","target","roleMeta","roleId","roleDoc","updateSelectAllStatus","userWithRole","u","handlePermissionChange","permissionId","newPermissions","handleSelectAll","newSelectAll","forEach","perm","totalPermissions","enabledPermissions","getTotalEnabledPermissions","count","getTotalAvailablePermissions","reduce","total","openConfirm","preventDefault","setTimeout","confirmAndSave","roleSaved","savedRoleResponse","method","body","JSON","stringify","resJson","catch","Error","usersWithRole","filter","selectedRoleData","updatePromises","then","status","userId","results","Promise","all","failed","prevUsers","log","dispatchEvent","CustomEvent","failedIds","f","slice","serverMsgs","join","alert","getUsersCountForRole","className","children","selectedRoleUserCount","style","display","justifyContent","alignItems","width","onClick","title","padding","fontSize","cursor","opacity","htmlFor","onChange","disabled","onSubmit","color","marginBottom","fontWeight","backgroundColor","border","borderRadius","type","checked","permission","isChecked","stopPropagation","zIndex","maxWidth","background","boxShadow","animation","textAlign","margin","marginRight","gridTemplateColumns","gap","lineHeight","minWidth"],"sources":["C:/Users/User/Documents/Project/af2/TimeTracker_SLPA/frontend/src/components/dashboard/RoleAccessManagement.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport './RoleAccessManagement.css';\r\n\r\nconst RoleAccessManagement = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedRole, setSelectedRole] = useState('');\r\n  const [selectedRoleId, setSelectedRoleId] = useState('');\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    permissions: {}\r\n  });\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [toastVisible, setToastVisible] = useState(false);\r\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\r\n  const [successDetails, setSuccessDetails] = useState({});\r\n  const { user } = useContext(AuthContext);\r\n  const isSuperAdmin = user?.role === 'super_admin';\r\n\r\n  // Add function to check if user has roles.read permission\r\n  const hasRoleReadPermission = () => {\r\n    if (isSuperAdmin) return true; // Super admin always has access\r\n    return user?.permissions?.roles?.read === true;\r\n  };\r\n\r\n  // Add function to check if user has roles.update permission\r\n  const hasRoleUpdatePermission = () => {\r\n    if (isSuperAdmin) return true; // Super admin always has access\r\n    return user?.permissions?.roles?.update === true;\r\n  };\r\n\r\n  // Add function to check if user has rolesManage.read permission\r\n  const hasRoleManageReadPermission = () => {\r\n    if (isSuperAdmin) return true; // Super admin always has access\r\n    return user?.permissions?.rolesManage?.read === true;\r\n  };\r\n\r\n  // Show professional success modal for permission updates\r\n  const showPermissionSuccessModal = (roleData, userCount, permissionCount) => {\r\n    setSuccessDetails({\r\n      roleName: roleData?.label || 'Unknown Role',\r\n      userCount: userCount || 0,\r\n      permissionCount: permissionCount || 0,\r\n      timestamp: new Date().toLocaleString()\r\n    });\r\n    setShowSuccessModal(true);\r\n  };\r\n\r\n  // Available roles (moved to state so runtime additions are possible)\r\n  const [availableRoles, setAvailableRoles] = useState([\r\n    { value: 'super_admin', label: 'Super Admin', description: 'Highest level system administrator' },\r\n    { value: 'admin', label: 'Administrator', description: 'System administrator with management rights' },\r\n    { value: 'administrative_clerk', label: 'Administrative Clerk', description: 'Administrative support staff' },\r\n    { value: 'clerk', label: 'Clerk', description: 'General office clerk' },\r\n    { value: 'employee', label: 'Employee', description: 'Regular system user' }\r\n  ]);\r\n\r\n  // Available permissions list based on User model\r\n  const availablePermissions = [\r\n    { \r\n      category: 'users', \r\n      name: 'User Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Users', description: 'Add new users to the system' },\r\n        { id: 'read', name: 'View Users', description: 'View user information and lists' },\r\n        { id: 'update', name: 'Update Users', description: 'Edit user information and profiles' },\r\n        { id: 'delete', name: 'Delete Users', description: 'Remove users from the system' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'attendance', \r\n      name: 'Attendance Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Attendance', description: 'Add attendance records' },\r\n        { id: 'read', name: 'View Attendance', description: 'View attendance records and reports' },\r\n        { id: 'update', name: 'Update Attendance', description: 'Edit attendance records' },\r\n        { id: 'delete', name: 'Delete Attendance', description: 'Remove attendance records' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'reports', \r\n      name: 'Reports Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Generate Reports', description: 'Create system reports' },\r\n        { id: 'read', name: 'View Reports', description: 'Access and view reports' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'divisions', \r\n      name: 'Division Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Divisions', description: 'Add new company divisions' },\r\n        { id: 'read', name: 'View Divisions', description: 'View division information' },\r\n        { id: 'update', name: 'Update Divisions', description: 'Edit division details' },\r\n        { id: 'delete', name: 'Delete Divisions', description: 'Remove divisions' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'sections', \r\n      name: 'Section Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Sections', description: 'Add new sections within divisions' },\r\n        { id: 'read', name: 'View Sections', description: 'View section information and lists' },\r\n        { id: 'update', name: 'Update Sections', description: 'Edit section details and assignments' },\r\n        { id: 'delete', name: 'Delete Sections', description: 'Remove sections from divisions' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'roles', \r\n      name: 'Role & Permission Management', \r\n      permissions: [\r\n       \r\n        { id: 'read', name: 'View Roles & Permissions', description: 'Access role and permission management pages' },\r\n        { id: 'update', name: 'Update Role Permissions', description: 'Modify permissions assigned to roles' },\r\n        \r\n      ]\r\n    },\r\n     { \r\n      category: 'rolesManage', \r\n      name: 'Roles Management', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Roles', description: 'Add new user roles to the system' },\r\n        { id: 'read', name: 'View Roles & Permissions', description: 'Access roles and permissions management pages' },\r\n        { id: 'update', name: 'Update Role Permissions', description: 'Modify roles' },\r\n        { id: 'delete', name: 'Delete Roles', description: 'Remove roles ' }\r\n      ]\r\n    },\r\n    { \r\n      category: 'settings', \r\n      name: 'System Settings', \r\n      permissions: [\r\n        { id: 'create', name: 'Create Settings', description: 'Add new system configurations' },\r\n        { id: 'read', name: 'View Settings', description: 'Access system settings' },\r\n        { id: 'update', name: 'Update Settings', description: 'Modify system configurations' },\r\n        { id: 'delete', name: 'Delete Settings', description: 'Remove system settings' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n\r\n    // Load roles from backend\r\n    (async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await fetch('http://localhost:5000/api/roles', {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          }\r\n        });\r\n\r\n        if (res.ok) {\r\n          const result = await res.json();\r\n          if (Array.isArray(result.data) && result.data.length) {\r\n            // include the database id so we can fetch role permissions\r\n            setAvailableRoles(result.data.map(r => ({ id: r._id, value: r.value, label: r.label, description: r.description || '' })));\r\n          }\r\n        } else {\r\n          console.warn('Failed to fetch roles from backend, using defaults');\r\n        }\r\n      } catch (err) {\r\n        console.warn('Error fetching roles:', err);\r\n      }\r\n    })();\r\n\r\n    // Listen for roles added via other components\r\n    const handler = (e) => {\r\n      const payload = e?.detail;\r\n      if (payload && payload.value && payload.label) {\r\n        // Avoid duplicates\r\n        setAvailableRoles(prev => {\r\n          if (prev.find(r => r.value === payload.value)) return prev;\r\n          return [...prev, { value: payload.value, label: payload.label, description: '' }];\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('roleAdded', handler);\r\n    return () => window.removeEventListener('roleAdded', handler);\r\n  }, []);\r\n\r\n  // Fetch users from API\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/users');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setUsers(data.data || []);\r\n      } else {\r\n        console.error('Failed to fetch users');\r\n        setMessage('Failed to load users');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setMessage('Error loading users');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle role selection\r\n  const handleRoleSelect = (e) => {\r\n    const roleValue = e.target.value;\r\n    setSelectedRole(roleValue);\r\n    \r\n    if (roleValue) {\r\n      // Find available role metadata (contains id)\r\n      const roleMeta = availableRoles.find(r => r.value === roleValue);\r\n      const roleId = roleMeta?.id;\r\n      setSelectedRoleId(roleId || '');\r\n\r\n      if (roleId) {\r\n        (async () => {\r\n          try {\r\n            const token = localStorage.getItem('token');\r\n            const res = await fetch(`http://localhost:5000/api/roles/${roleId}`, {\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n              }\r\n            });\r\n\r\n            if (res.ok) {\r\n              const result = await res.json();\r\n              const roleDoc = result.data;\r\n              setFormData({ permissions: roleDoc.permissions || {} });\r\n              updateSelectAllStatus(roleDoc.permissions || {});\r\n            } else {\r\n              // fallback to user-based permissions if role doc cannot be fetched\r\n              const userWithRole = users.find(u => u.role === roleValue);\r\n              setFormData({ permissions: userWithRole?.permissions || {} });\r\n              updateSelectAllStatus(userWithRole?.permissions || {});\r\n            }\r\n          } catch (err) {\r\n            console.warn('Error fetching role document:', err);\r\n            const userWithRole = users.find(u => u.role === roleValue);\r\n            setFormData({ permissions: userWithRole?.permissions || {} });\r\n            updateSelectAllStatus(userWithRole?.permissions || {});\r\n          }\r\n        })();\r\n      } else {\r\n        // If no role id available, fallback to user-based permissions\r\n        const userWithRole = users.find(u => u.role === roleValue);\r\n        setFormData({ permissions: userWithRole?.permissions || {} });\r\n        updateSelectAllStatus(userWithRole?.permissions || {});\r\n      }\r\n    } else {\r\n      setFormData({\r\n        permissions: {}\r\n      });\r\n      setSelectAll(false);\r\n    }\r\n  };\r\n\r\n  // Handle permission checkbox changes\r\n  const handlePermissionChange = (category, permissionId) => {\r\n    if (!hasRoleUpdatePermission()) return; // prevent users without roles.update from making changes\r\n    const newPermissions = { ...formData.permissions };\r\n    \r\n    if (!newPermissions[category]) {\r\n      newPermissions[category] = {};\r\n    }\r\n    \r\n    newPermissions[category][permissionId] = !newPermissions[category][permissionId];\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n    \r\n    updateSelectAllStatus(newPermissions);\r\n  };\r\n\r\n  // Handle select all toggle\r\n  const handleSelectAll = () => {\r\n    if (!hasRoleUpdatePermission()) return; // prevent users without roles.update from making changes\r\n    const newSelectAll = !selectAll;\r\n    setSelectAll(newSelectAll);\r\n    \r\n    const newPermissions = {};\r\n    \r\n    if (newSelectAll) {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = true;\r\n        });\r\n      });\r\n    } else {\r\n      availablePermissions.forEach(category => {\r\n        newPermissions[category.category] = {};\r\n        category.permissions.forEach(perm => {\r\n          newPermissions[category.category][perm.id] = false;\r\n        });\r\n      });\r\n    }\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      permissions: newPermissions\r\n    }));\r\n  };\r\n\r\n  // Update select all status\r\n  const updateSelectAllStatus = (permissions) => {\r\n    let totalPermissions = 0;\r\n    let enabledPermissions = 0;\r\n    \r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        totalPermissions++;\r\n        if (permissions[category.category] && permissions[category.category][perm.id]) {\r\n          enabledPermissions++;\r\n        }\r\n      });\r\n    });\r\n    \r\n    setSelectAll(enabledPermissions === totalPermissions && totalPermissions > 0);\r\n  };\r\n\r\n  // Get total enabled permissions count\r\n  const getTotalEnabledPermissions = () => {\r\n    let count = 0;\r\n    availablePermissions.forEach(category => {\r\n      category.permissions.forEach(perm => {\r\n        if (formData.permissions[category.category] && formData.permissions[category.category][perm.id]) {\r\n          count++;\r\n        }\r\n      });\r\n    });\r\n    return count;\r\n  };\r\n\r\n  // Get total available permissions count\r\n  const getTotalAvailablePermissions = () => {\r\n    return availablePermissions.reduce((total, category) => total + category.permissions.length, 0);\r\n  };\r\n\r\n  // Show confirmation modal instead of immediate submit\r\n  const openConfirm = (e) => {\r\n    e.preventDefault();\r\n    if (!hasRoleUpdatePermission()) {\r\n      setMessage('You do not have permission to modify role permissions. The \"Update Role Permissions\" access is required.');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n      return;\r\n    }\r\n\r\n    if (!selectedRole) {\r\n      setMessage('Please select a role first');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n      return;\r\n    }\r\n\r\n    setShowConfirm(true);\r\n  };\r\n\r\n  // Confirm and perform save: persist to role doc then update users\r\n  const confirmAndSave = async () => {\r\n    setShowConfirm(false);\r\n    setSubmitting(true);\r\n    try {\r\n      // Persist permissions to role document (if we have an id)\r\n      const token = localStorage.getItem('token');\r\n      let roleSaved = false;\r\n      let savedRoleResponse = null;\r\n      if (selectedRoleId) {\r\n        const res = await fetch(`http://localhost:5000/api/permissions/roles/${selectedRoleId}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          },\r\n          body: JSON.stringify({ permissions: formData.permissions })\r\n        });\r\n\r\n        const resJson = await res.json().catch(() => ({}));\r\n        if (!res.ok) {\r\n          // include server message if available\r\n          throw new Error(resJson.message || 'Failed to save role permissions');\r\n        }\r\n\r\n        roleSaved = true;\r\n        savedRoleResponse = resJson.data || null;\r\n\r\n        // Update local formData with authoritative permissions returned (if any)\r\n        if (savedRoleResponse && savedRoleResponse.permissions) {\r\n          setFormData({ permissions: savedRoleResponse.permissions });\r\n        }\r\n      }\r\n\r\n      // Now update users with the selected role\r\n      const usersWithRole = users.filter(u => u.role === selectedRole);\r\n      if (usersWithRole.length === 0) {\r\n        // If we saved the role document, treat that as a successful save even if no users exist for the role\r\n        if (roleSaved) {\r\n          const permissionCount = getTotalEnabledPermissions();\r\n          \r\n          // Show professional success modal for role permissions saved\r\n          showPermissionSuccessModal(selectedRoleData, 0, permissionCount);\r\n          \r\n          setMessage(`Role permissions saved successfully. No users found with role ${selectedRoleData?.label}`);\r\n          setMessageType('success');\r\n          setToastVisible(true);\r\n          setTimeout(() => setToastVisible(false), 4000);\r\n          setTimeout(() => { setMessage(''); setMessageType(''); }, 5000);\r\n          setSubmitting(false);\r\n          return;\r\n        }\r\n\r\n        setMessage('No users found with the selected role');\r\n        setMessageType('error');\r\n        setToastVisible(true);\r\n        setTimeout(() => setToastVisible(false), 4000);\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // Use auth token for user updates as well (backend typically requires auth)\r\n      const updatePromises = usersWithRole.map(user =>\r\n        fetch(`http://localhost:5000/api/users/${user._id}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n          },\r\n          body: JSON.stringify({ permissions: formData.permissions })\r\n        }).then(async r => ({ ok: r.ok, status: r.status, body: await r.json().catch(() => ({})), userId: user._id }))\r\n      );\r\n\r\n      const results = await Promise.all(updatePromises);\r\n      const failed = results.filter(r => !r.ok);\r\n\r\n      if (failed.length === 0) {\r\n        setUsers(prevUsers => prevUsers.map(u => u.role === selectedRole ? { ...u, permissions: formData.permissions } : u));\r\n        \r\n        // Calculate permission count\r\n        const permissionCount = getTotalEnabledPermissions();\r\n        \r\n        // Show professional success modal\r\n        showPermissionSuccessModal(selectedRoleData, usersWithRole.length, permissionCount);\r\n        \r\n        // Also set the regular message for backup\r\n        setMessage(`Permissions updated successfully for ${usersWithRole.length} user(s)`);\r\n        setMessageType('success');\r\n        setToastVisible(true);\r\n        console.log('RoleAccessManagement: permissions updated successfully for users', usersWithRole.map(u => u._id));\r\n        \r\n        setTimeout(() => setToastVisible(false), 4000);\r\n        // Auto-hide message area too\r\n        setTimeout(() => { setMessage(''); setMessageType(''); }, 5000);\r\n        // Notify the app that permissions have changed so current sessions can refresh\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('permissionsChanged', { detail: { role: selectedRole } }));\r\n        } catch (e) { /* ignore */ }\r\n      } else {\r\n        // Build an informative message\r\n        const failedIds = failed.map(f => f.userId).slice(0, 5);\r\n        // collect server messages from failed responses\r\n        const serverMsgs = failed.map(f => (f.body && f.body.message) ? `${f.userId}: ${f.body.message}` : `${f.userId}: status ${f.status}`).slice(0,5);\r\n        setMessage(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Failed for: ${failedIds.join(', ')}${failed.length > 5 ? '...' : ''}`);\r\n        setMessageType('error');\r\n        setToastVisible(true);\r\n        setTimeout(() => setToastVisible(false), 7000);\r\n        console.warn('RoleAccessManagement: some user updates failed', failed);\r\n        try { window.alert(`Updated ${usersWithRole.length - failed.length}/${usersWithRole.length} users. Some updates failed.\\nDetails:\\n${serverMsgs.join('\\n')}`); } catch (e) {}\r\n        // Even on partial failure, notify app (some users may have new permissions)\r\n        try {\r\n          window.dispatchEvent(new CustomEvent('permissionsChanged', { detail: { role: selectedRole } }));\r\n        } catch (e) { /* ignore */ }\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Error saving permissions:', err);\r\n      setMessage(err.message || 'Error updating role permissions');\r\n      setMessageType('error');\r\n      setToastVisible(true);\r\n      setTimeout(() => setToastVisible(false), 4000);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Get users count for selected role\r\n  const getUsersCountForRole = () => {\r\n    if (!selectedRole) return 0;\r\n    return users.filter(user => user.role === selectedRole).length;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"role-access-wrapper\">\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const selectedRoleData = availableRoles.find(r => r.value === selectedRole);\r\n  const selectedRoleUserCount = getUsersCountForRole();\r\n\r\n  return (\r\n    <div className=\"role-access-wrapper\">\r\n      {/* Decorative Elements */}\r\n      <div className=\"decorative-elements\">\r\n        <div className=\"geometric-shape shape-1\"></div>\r\n        <div className=\"geometric-shape shape-2\"></div>\r\n        <div className=\"geometric-shape shape-3\"></div>\r\n        <div className=\"geometric-shape shape-4\"></div>\r\n      </div>\r\n\r\n      <div className=\"container-fluid px-4\">\r\n        <div className=\"main-card\">\r\n          <div className=\"card-header-custom\">\r\n            <div className=\"header-content\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', width: '100%' }}>\r\n              <div className=\"header-text\">\r\n                <div className=\"icon-wrapper-large\">\r\n                  <i className=\"bi bi-shield-check\"></i>\r\n                </div>\r\n                <h1 className=\"page-title\">Role Access Management</h1>\r\n                <p className=\"page-subtitle\">Configure permissions for user roles - changes apply to all users with the selected role</p>\r\n              </div>\r\n              \r\n              {hasRoleReadPermission() && (\r\n                <button\r\n                  className=\"btn-professional btn-secondary\"\r\n                  onClick={() => {\r\n                    if (hasRoleManageReadPermission()) {\r\n                      window.dispatchEvent(new CustomEvent('navigateTo', { detail: 'role-management' }));\r\n                    } else {\r\n                      // Show error message when no rolesManage.read permission\r\n                      setMessage('You do not have permission to access Role Management. Contact a Super Admin for access.');\r\n                      setMessageType('error');\r\n                      setToastVisible(true);\r\n                      setTimeout(() => setToastVisible(false), 4000);\r\n                    }\r\n                  }}\r\n                  title={hasRoleManageReadPermission() ? \"Manage Roles\" : \"You need 'rolesManage.read' permission to access Role Management\"}\r\n                  style={{ \r\n                    padding: '10px 16px', \r\n                    fontSize: '14px',\r\n                    cursor: hasRoleManageReadPermission() ? 'pointer' : 'not-allowed',\r\n                    opacity: hasRoleManageReadPermission() ? 1 : 0.7\r\n                  }}\r\n                >\r\n                  <i className={`bi ${hasRoleManageReadPermission() ? 'bi-gear' : 'bi-lock'}`}></i> \r\n                  Manage Roles\r\n                  {!hasRoleManageReadPermission() && <i className=\"bi bi-exclamation-triangle ml-1\" style={{fontSize: '12px'}}></i>}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"card-body-custom\">\r\n            {/* Toast popup */}\r\n            {toastVisible && message && (\r\n              <div className={`toast-popup ${messageType === 'success' ? 'toast-success' : 'toast-error'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Inline message area */}\r\n            {message && !toastVisible && (\r\n              <div className={`alert ${messageType === 'success' ? 'alert-success-modern' : 'alert-error-modern'}`}>\r\n                <i className={`bi ${messageType === 'success' ? 'bi-check-circle' : 'bi-exclamation-circle'} mr-2`}></i>\r\n                {message}\r\n              </div>\r\n            )}\r\n\r\n            {/* Add access denied message for users without roles.read permission */}\r\n            {!hasRoleReadPermission() && (\r\n              <div className=\"alert alert-warning mt-3\">\r\n                <i className=\"bi bi-lock-fill mr-2\"></i>\r\n                You do not have permission to view roles and permissions. The \"View Roles & Permissions\" access is required to use this feature.\r\n              </div>\r\n            )}\r\n\r\n            {/* Only show the rest of the component if user has roles.read permission */}\r\n            {hasRoleReadPermission() && (\r\n              <>\r\n                {/* Stats Section */}\r\n                <div className=\"stats-section\">\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{availableRoles.length}</span>\r\n                <span className=\"stats-label\">Available Roles</span>\r\n              </div>\r\n              <div className=\"stats-item\">\r\n                <span className=\"stats-number\">{getTotalAvailablePermissions()}</span>\r\n                <span className=\"stats-label\">Available Permissions</span>\r\n              </div>\r\n              {selectedRole && (\r\n                <>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{selectedRoleUserCount}</span>\r\n                    <span className=\"stats-label\">Users with this Role</span>\r\n                  </div>\r\n                  <div className=\"stats-item\">\r\n                    <span className=\"stats-number\">{getTotalEnabledPermissions()}</span>\r\n                    <span className=\"stats-label\">Granted Permissions</span>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Role Selection */}\r\n            <div className=\"form-section\">\r\n              <label htmlFor=\"role\" className=\"form-label-modern\">\r\n                <i className=\"bi bi-person-gear text-primary mr-2\"></i>Select Role to Manage\r\n              </label>\r\n              <select \r\n                name=\"role\" \r\n                id=\"role\" \r\n                className=\"form-control form-control-modern\" \r\n                value={selectedRole}\r\n                onChange={handleRoleSelect}\r\n                disabled={!hasRoleUpdatePermission()}\r\n                title={!hasRoleUpdatePermission() ? 'You need \"Update Role Permissions\" access to change role selection' : ''}\r\n              >\r\n                <option value=\"\">-- Choose a role to configure --</option>\r\n                {availableRoles.map(role => (\r\n                  <option key={role.value} value={role.value}>\r\n                    {role.label} - {role.description}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {selectedRole && (\r\n                <small className=\"text-muted mt-2 d-block\">\r\n                  <i className=\"bi bi-info-circle mr-1\"></i>\r\n                  This will update permissions for {selectedRoleUserCount} user(s) with the role: {selectedRoleData?.label}\r\n                </small>\r\n              )}\r\n\r\n              {!hasRoleUpdatePermission() && (\r\n                <div className=\"alert alert-warning mt-3\">\r\n                  <i className=\"bi bi-lock-fill mr-2\"></i>\r\n                  You have view-only access. To modify role permissions, you need the \"Update Role Permissions\" access.\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Permissions Configuration */}\r\n            {selectedRole && (\r\n              <div className=\"form-section\">\r\n                <form onSubmit={openConfirm}>\r\n                  <h3 style={{ color: '#333', marginBottom: '20px', fontWeight: '600' }}>\r\n                    <i className=\"bi bi-shield-alt text-primary mr-2\"></i>\r\n                    Configure Access Permissions for Role: <span style={{ color: '#667eea' }}>{selectedRoleData?.label}</span>\r\n                  </h3>\r\n\r\n                  <div className=\"alert alert-info\" style={{ backgroundColor: '#e3f2fd', border: '1px solid #bbdefb', borderRadius: '6px', padding: '12px', marginBottom: '20px' }}>\r\n                    <i className=\"bi bi-info-circle text-primary mr-2\"></i>\r\n                    <strong>Note:</strong> Changes will be applied to all {selectedRoleUserCount} user(s) with the role \"{selectedRoleData?.label}\"\r\n                  </div>\r\n\r\n                  {/* Select All Section */}\r\n                  <div className=\"select-all-section\" style={{ opacity: hasRoleUpdatePermission() ? 1 : 0.6 }}>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      id=\"select-all\"\r\n                      checked={selectAll}\r\n                      onChange={handleSelectAll}\r\n                      disabled={!hasRoleUpdatePermission()}\r\n                    />\r\n                    <label htmlFor=\"select-all\">\r\n                      <i className=\"bi bi-check2-all mr-2\"></i>Select All Permissions\r\n                    </label>\r\n                    <span className=\"permission-counter\">\r\n                      {getTotalEnabledPermissions()}/{getTotalAvailablePermissions()} permissions selected\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Permissions Grid by Category */}\r\n                  {availablePermissions.map(category => (\r\n                    <div key={category.category} className=\"permission-category\" style={{ opacity: hasRoleUpdatePermission() ? 1 : 0.6 }}>\r\n                      <h4 className=\"category-title\">\r\n                        <i className=\"bi bi-folder text-primary mr-2\"></i>\r\n                        {category.name}\r\n                        {!hasRoleUpdatePermission() && (\r\n                          <span className=\"badge badge-secondary ml-2\" style={{ fontSize: '10px' }}>\r\n                            <i className=\"bi bi-eye\"></i> View Only\r\n                          </span>\r\n                        )}\r\n                      </h4>\r\n                      <div className=\"checkbox-grid\">\r\n                        {category.permissions.map(permission => {\r\n                          const isChecked = formData.permissions[category.category] && formData.permissions[category.category][permission.id];\r\n                          return (\r\n                            <div \r\n                              key={`${category.category}_${permission.id}`} \r\n                              className={`checkbox-item ${isChecked ? 'selected' : ''} ${!hasRoleUpdatePermission() ? 'disabled' : ''}`}\r\n                              onClick={() => hasRoleUpdatePermission() && handlePermissionChange(category.category, permission.id)}\r\n                              style={{ \r\n                                cursor: hasRoleUpdatePermission() ? 'pointer' : 'not-allowed',\r\n                                opacity: hasRoleUpdatePermission() ? 1 : 0.7\r\n                              }}\r\n                            >\r\n                              <input \r\n                                type=\"checkbox\" \r\n                                checked={isChecked || false}\r\n                                onChange={() => handlePermissionChange(category.category, permission.id)}\r\n                                id={`perm_${category.category}_${permission.id}`}\r\n                                disabled={!hasRoleUpdatePermission()}\r\n                              />\r\n                              <span className=\"checkmark\"></span>\r\n                              <label htmlFor={`perm_${category.category}_${permission.id}`}>\r\n                                <div className=\"permission-title\">\r\n                                  <i className=\"bi bi-file-text text-muted mr-2\"></i>\r\n                                  {permission.name}\r\n                                </div>\r\n                                <div className=\"permission-description\">\r\n                                  {permission.description}\r\n                                </div>\r\n                              </label>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Submit Button */}\r\n                  <div className=\"text-center mt-4\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      className=\"btn-save-modern\"\r\n                      disabled={submitting || !hasRoleUpdatePermission()}\r\n                      title={!hasRoleUpdatePermission() ? 'You need \"Update Role Permissions\" access to apply changes' : ''}\r\n                      onClick={openConfirm}\r\n                    >\r\n                      {submitting ? (\r\n                        <>\r\n                          <div className=\"spinner-border spinner-border-sm mr-2\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                          </div>\r\n                          Updating {selectedRoleUserCount} user(s)...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <i className=\"bi bi-save mr-2\"></i>\r\n                          Apply to All {selectedRoleUserCount} User(s) with Role: {selectedRoleData?.label}\r\n                        </>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n      {/* Loading Overlay */}\r\n      {submitting && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Confirmation Modal */}\r\n      {showConfirm && (\r\n        <div className=\"modal-overlay\" onClick={() => setShowConfirm(false)}>\r\n          <div className=\"modal-content confirm-modal\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"modal-header\">\r\n              <h4>Confirm Permission Changes</h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>You're about to apply the selected permissions to <strong>{selectedRoleUserCount}</strong> user(s) with the role <strong>{selectedRoleData?.label}</strong>.</p>\r\n              <p>This action will update both the role's permission document and the users' effective permissions. Are you sure you want to continue?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn-professional btn-secondary\" onClick={() => setShowConfirm(false)}>Cancel</button>\r\n              <button className=\"btn-professional btn-success\" onClick={confirmAndSave}>Yes, apply changes</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Professional Permission Update Success Modal */}\r\n      {showSuccessModal && (\r\n        <div className=\"modal-overlay\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.6)', zIndex: 10000 }}>\r\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()} style={{ \r\n            maxWidth: '600px', \r\n            background: 'linear-gradient(135deg, #ffffff, #f8f9fa)',\r\n            border: '2px solid #28a745',\r\n            borderRadius: '12px',\r\n            boxShadow: '0 15px 35px rgba(40, 167, 69, 0.2)',\r\n            animation: 'fadeInUp 0.3s ease-out'\r\n          }}>\r\n            {/* Header */}\r\n            <div style={{ \r\n              background: 'linear-gradient(135deg, #28a745, #20c997)',\r\n              color: 'white',\r\n              padding: '25px 30px',\r\n              borderRadius: '10px 10px 0 0',\r\n              textAlign: 'center'\r\n            }}>\r\n              <div style={{ fontSize: '48px', marginBottom: '10px' }}>\r\n                <i className=\"bi bi-shield-check\"></i>\r\n              </div>\r\n              <h2 style={{ margin: 0, fontWeight: 'bold', fontSize: '24px' }}>\r\n                Permission Update Completed\r\n              </h2>\r\n              <p style={{ margin: '5px 0 0 0', opacity: 0.9, fontSize: '14px' }}>\r\n                System Access Control Updated Successfully\r\n              </p>\r\n            </div>\r\n\r\n            {/* Body */}\r\n            <div style={{ padding: '30px' }}>\r\n              <div style={{ \r\n                background: '#f8f9fa',\r\n                border: '1px solid #e9ecef',\r\n                borderRadius: '8px',\r\n                padding: '20px',\r\n                marginBottom: '25px'\r\n              }}>\r\n                <h4 style={{ \r\n                  color: '#495057',\r\n                  marginBottom: '15px',\r\n                  fontSize: '18px',\r\n                  fontWeight: '600'\r\n                }}>\r\n                  <i className=\"bi bi-info-circle\" style={{ color: '#28a745', marginRight: '8px' }}></i>\r\n                  Update Summary\r\n                </h4>\r\n                \r\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px' }}>\r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Role Updated:</strong>\r\n                    <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#28a745' }}>\r\n                      {successDetails.roleName}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Users Affected:</strong>\r\n                    <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#28a745' }}>\r\n                      {successDetails.userCount} {successDetails.userCount === 1 ? 'User' : 'Users'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Permissions Granted:</strong>\r\n                    <div style={{ fontSize: '16px', fontWeight: 'bold', color: '#28a745' }}>\r\n                      {successDetails.permissionCount} Permissions\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <strong style={{ color: '#6c757d', fontSize: '14px' }}>Updated At:</strong>\r\n                    <div style={{ fontSize: '14px', color: '#495057' }}>\r\n                      {successDetails.timestamp}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ \r\n                background: '#d4edda',\r\n                border: '1px solid #c3e6cb',\r\n                borderRadius: '8px',\r\n                padding: '15px',\r\n                marginBottom: '25px'\r\n              }}>\r\n                <p style={{ \r\n                  margin: 0,\r\n                  color: '#155724',\r\n                  fontSize: '14px',\r\n                  lineHeight: '1.5'\r\n                }}>\r\n                  <i className=\"bi bi-check-circle-fill\" style={{ marginRight: '8px' }}></i>\r\n                  <strong>All permission changes have been successfully applied to the system.</strong>\r\n                  {successDetails.userCount > 0 && (\r\n                    <span> Affected users will see the updated permissions on their next login or page refresh.</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n\r\n              <div style={{ textAlign: 'center' }}>\r\n                <button \r\n                  className=\"btn-professional btn-success\"\r\n                  onClick={() => setShowSuccessModal(false)}\r\n                  style={{ \r\n                    padding: '12px 40px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 'bold',\r\n                    minWidth: '150px'\r\n                  }}\r\n                >\r\n                  <i className=\"bi bi-check2-circle\"></i> Acknowledged\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleAccessManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}